{"ast":null,"code":"/*! DataTables 2.0.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\nimport jQuery from 'jquery'; // DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\n\nvar $ = jQuery;\n\nvar DataTable = function (selector, options) {\n  // Check if called with a window or jQuery object for DOM less applications\n  // This is for backwards compatibility\n  if (DataTable.factory(selector, options)) {\n    return DataTable;\n  } // When creating with `new`, create a new DataTable, returning the API instance\n\n\n  if (this instanceof DataTable) {\n    return $(selector).DataTable(options);\n  } else {\n    // Argument switching\n    options = selector;\n  }\n\n  var _that = this;\n\n  var emptyInit = options === undefined;\n  var len = this.length;\n\n  if (emptyInit) {\n    options = {};\n  } // Method to get DT API instance from jQuery object\n\n\n  this.api = function () {\n    return new _Api(this);\n  };\n\n  this.each(function () {\n    // For each initialisation we want to give it a clean initialisation\n    // object that can be bashed around\n    var o = {};\n    var oInit = len > 1 ? // optimisation for single table case\n    _fnExtend(o, options, true) : options;\n    var i = 0,\n        iLen;\n    var sId = this.getAttribute('id');\n    var bInitHandedOff = false;\n    var defaults = DataTable.defaults;\n    var $this = $(this);\n    /* Sanity check */\n\n    if (this.nodeName.toLowerCase() != 'table') {\n      _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n\n      return;\n    }\n\n    $(this).trigger('options.dt', oInit);\n    /* Backwards compatibility for the defaults */\n\n    _fnCompatOpts(defaults);\n\n    _fnCompatCols(defaults.column);\n    /* Convert the camel-case defaults to Hungarian */\n\n\n    _fnCamelToHungarian(defaults, defaults, true);\n\n    _fnCamelToHungarian(defaults.column, defaults.column, true);\n    /* Setting up the initialisation object */\n\n\n    _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()), true);\n    /* Check to see if we are re-initialising a table */\n\n\n    var allSettings = DataTable.settings;\n\n    for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n      var s = allSettings[i];\n      /* Base check on table node */\n\n      if (s.nTable == this || s.nTHead && s.nTHead.parentNode == this || s.nTFoot && s.nTFoot.parentNode == this) {\n        var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n        var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\n        if (emptyInit || bRetrieve) {\n          return s.oInstance;\n        } else if (bDestroy) {\n          new DataTable.Api(s).destroy();\n          break;\n        } else {\n          _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n\n          return;\n        }\n      }\n      /* If the element we are initialising has the same ID as a table which was previously\n       * initialised, but the table nodes don't match (from before) then we destroy the old\n       * instance by simply deleting it. This is under the assumption that the table has been\n       * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n       */\n\n\n      if (s.sTableId == this.id) {\n        allSettings.splice(i, 1);\n        break;\n      }\n    }\n    /* Ensure the table has an ID - required for accessibility */\n\n\n    if (sId === null || sId === \"\") {\n      sId = \"DataTables_Table_\" + DataTable.ext._unique++;\n      this.id = sId;\n    }\n    /* Create the settings object for this table and set some of the default parameters */\n\n\n    var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n      \"sDestroyWidth\": $this[0].style.width,\n      \"sInstance\": sId,\n      \"sTableId\": sId,\n      colgroup: $('<colgroup>').prependTo(this),\n      fastData: function (row, column, type) {\n        return _fnGetCellData(oSettings, row, column, type);\n      }\n    });\n    oSettings.nTable = this;\n    oSettings.oInit = oInit;\n    allSettings.push(oSettings); // Make a single API instance available for internal handling\n\n    oSettings.api = new _Api(oSettings); // Need to add the instance after the instance after the settings object has been added\n    // to the settings array, so we can self reference the table instance if more than one\n\n    oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable(); // Backwards compatibility, before we apply all the defaults\n\n    _fnCompatOpts(oInit); // If the length menu is given, but the init display length is not, use the length menu\n\n\n    if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n      oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : $.isPlainObject(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0].value : oInit.aLengthMenu[0];\n    } // Apply the defaults and init options to make a single init object will all\n    // options defined from defaults and instance options.\n\n\n    oInit = _fnExtend($.extend(true, {}, defaults), oInit); // Map the initialisation options onto the settings object\n\n    _fnMap(oSettings.oFeatures, oInit, [\"bPaginate\", \"bLengthChange\", \"bFilter\", \"bSort\", \"bSortMulti\", \"bInfo\", \"bProcessing\", \"bAutoWidth\", \"bSortClasses\", \"bServerSide\", \"bDeferRender\"]);\n\n    _fnMap(oSettings, oInit, [\"ajax\", \"fnFormatNumber\", \"sServerMethod\", \"aaSorting\", \"aaSortingFixed\", \"aLengthMenu\", \"sPaginationType\", \"iStateDuration\", \"bSortCellsTop\", \"iTabIndex\", \"sDom\", \"fnStateLoadCallback\", \"fnStateSaveCallback\", \"renderer\", \"searchDelay\", \"rowId\", \"caption\", \"layout\", [\"iCookieDuration\", \"iStateDuration\"], // backwards compat\n    [\"oSearch\", \"oPreviousSearch\"], [\"aoSearchCols\", \"aoPreSearchCols\"], [\"iDisplayLength\", \"_iDisplayLength\"]]);\n\n    _fnMap(oSettings.oScroll, oInit, [[\"sScrollX\", \"sX\"], [\"sScrollXInner\", \"sXInner\"], [\"sScrollY\", \"sY\"], [\"bScrollCollapse\", \"bCollapse\"]]);\n\n    _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n    /* Callback functions which are array driven */\n\n\n    _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback);\n\n    _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams);\n\n    _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams);\n\n    _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded);\n\n    _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback);\n\n    _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow);\n\n    _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback);\n\n    _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback);\n\n    _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete);\n\n    _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback);\n\n    oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n    /* Browser support detection */\n\n    _fnBrowserDetect(oSettings);\n\n    var oClasses = oSettings.oClasses;\n    $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n    $this.addClass(oClasses.table);\n\n    if (!oSettings.oFeatures.bPaginate) {\n      oInit.iDisplayStart = 0;\n    }\n\n    if (oSettings.iInitDisplayStart === undefined) {\n      /* Display start point, taking into account the save saving */\n      oSettings.iInitDisplayStart = oInit.iDisplayStart;\n      oSettings._iDisplayStart = oInit.iDisplayStart;\n    }\n    /* Language definitions */\n\n\n    var oLanguage = oSettings.oLanguage;\n    $.extend(true, oLanguage, oInit.oLanguage);\n\n    if (oLanguage.sUrl) {\n      /* Get the language definitions from a file - because this Ajax call makes the language\n       * get async to the remainder of this function we use bInitHandedOff to indicate that\n       * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n       */\n      $.ajax({\n        dataType: 'json',\n        url: oLanguage.sUrl,\n        success: function (json) {\n          _fnCamelToHungarian(defaults.oLanguage, json);\n\n          $.extend(true, oLanguage, json, oSettings.oInit.oLanguage);\n\n          _fnCallbackFire(oSettings, null, 'i18n', [oSettings], true);\n\n          _fnInitialise(oSettings);\n        },\n        error: function () {\n          // Error occurred loading language file\n          _fnLog(oSettings, 0, 'i18n file loading error', 21); // continue on as best we can\n\n\n          _fnInitialise(oSettings);\n        }\n      });\n      bInitHandedOff = true;\n    } else {\n      _fnCallbackFire(oSettings, null, 'i18n', [oSettings]);\n    }\n    /*\n     * Columns\n     * See if we should load columns automatically or use defined ones\n     */\n\n\n    var columnsInit = [];\n    var thead = this.getElementsByTagName('thead');\n\n    var initHeaderLayout = _fnDetectHeader(oSettings, thead[0]); // If we don't have a columns array, then generate one with nulls\n\n\n    if (oInit.aoColumns) {\n      columnsInit = oInit.aoColumns;\n    } else if (initHeaderLayout.length) {\n      for (i = 0, iLen = initHeaderLayout[0].length; i < iLen; i++) {\n        columnsInit.push(null);\n      }\n    } // Add the columns\n\n\n    for (i = 0, iLen = columnsInit.length; i < iLen; i++) {\n      _fnAddColumn(oSettings);\n    } // Apply the column definitions\n\n\n    _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n      _fnColumnOptions(oSettings, iCol, oDef);\n    });\n    /* HTML5 attribute detection - build an mData object automatically if the\n     * attributes are found\n     */\n\n\n    var rowOne = $this.children('tbody').find('tr').eq(0);\n\n    if (rowOne.length) {\n      var a = function (cell, name) {\n        return cell.getAttribute('data-' + name) !== null ? name : null;\n      };\n\n      $(rowOne[0]).children('th, td').each(function (i, cell) {\n        var col = oSettings.aoColumns[i];\n\n        if (!col) {\n          _fnLog(oSettings, 0, 'Incorrect column count', 18);\n        }\n\n        if (col.mData === i) {\n          var sort = a(cell, 'sort') || a(cell, 'order');\n          var filter = a(cell, 'filter') || a(cell, 'search');\n\n          if (sort !== null || filter !== null) {\n            col.mData = {\n              _: i + '.display',\n              sort: sort !== null ? i + '.@data-' + sort : undefined,\n              type: sort !== null ? i + '.@data-' + sort : undefined,\n              filter: filter !== null ? i + '.@data-' + filter : undefined\n            };\n            col._isArrayHost = true;\n\n            _fnColumnOptions(oSettings, i);\n          }\n        }\n      });\n    }\n\n    var features = oSettings.oFeatures;\n\n    var loadedInit = function () {\n      /*\n       * Sorting\n       * @todo For modularisation (1.11) this needs to do into a sort start up handler\n       */\n      // If aaSorting is not defined, then we use the first indicator in asSorting\n      // in case that has been altered, so the default sort reflects that option\n      if (oInit.aaSorting === undefined) {\n        var sorting = oSettings.aaSorting;\n\n        for (i = 0, iLen = sorting.length; i < iLen; i++) {\n          sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n        }\n      }\n      /* Do a first pass on the sorting classes (allows any size changes to be taken into\n       * account, and also will apply sorting disabled classes if disabled\n       */\n\n\n      _fnSortingClasses(oSettings);\n\n      _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n        if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n          _fnSortingClasses(oSettings);\n        }\n      });\n      /*\n       * Final init\n       * Cache the header, body and footer as required, creating them if needed\n       */\n\n\n      var caption = $this.children('caption');\n\n      if (oSettings.caption) {\n        if (caption.length === 0) {\n          caption = $('<caption/>').appendTo($this);\n        }\n\n        caption.html(oSettings.caption);\n      } // Store the caption side, so we can remove the element from the document\n      // when creating the element\n\n\n      if (caption.length) {\n        caption[0]._captionSide = caption.css('caption-side');\n        oSettings.captionNode = caption[0];\n      }\n\n      if (thead.length === 0) {\n        thead = $('<thead/>').appendTo($this);\n      }\n\n      oSettings.nTHead = thead[0];\n      $('tr', thead).addClass(oClasses.thead.row);\n      var tbody = $this.children('tbody');\n\n      if (tbody.length === 0) {\n        tbody = $('<tbody/>').insertAfter(thead);\n      }\n\n      oSettings.nTBody = tbody[0];\n      var tfoot = $this.children('tfoot');\n\n      if (tfoot.length === 0) {\n        // If we are a scrolling table, and no footer has been given, then we need to create\n        // a tfoot element for the caption element to be appended to\n        tfoot = $('<tfoot/>').appendTo($this);\n      }\n\n      oSettings.nTFoot = tfoot[0];\n      $('tr', tfoot).addClass(oClasses.tfoot.row); // Check if there is data passing into the constructor\n\n      if (oInit.aaData) {\n        for (i = 0; i < oInit.aaData.length; i++) {\n          _fnAddData(oSettings, oInit.aaData[i]);\n        }\n      } else if (_fnDataSource(oSettings) == 'dom') {\n        // Grab the data from the page\n        _fnAddTr(oSettings, $(oSettings.nTBody).children('tr'));\n      }\n      /* Copy the data index array */\n\n\n      oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n      /* Initialisation complete - table can be drawn */\n\n      oSettings.bInitialised = true;\n      /* Check if we need to initialise the table (it might not have been handed off to the\n       * language processor)\n       */\n\n      if (bInitHandedOff === false) {\n        _fnInitialise(oSettings);\n      }\n    };\n    /* Must be done after everything which can be overridden by the state saving! */\n\n\n    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState);\n\n    if (oInit.bStateSave) {\n      features.bStateSave = true;\n\n      _fnLoadState(oSettings, oInit, loadedInit);\n    } else {\n      loadedInit();\n    }\n  });\n  _that = null;\n  return this;\n};\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\n\n\nDataTable.ext = _ext = {\n  /**\n   * Buttons. For use with the Buttons extension for DataTables. This is\n   * defined here so other extensions can define buttons regardless of load\n   * order. It is _not_ used by DataTables core.\n   *\n   *  @type object\n   *  @default {}\n   */\n  buttons: {},\n\n  /**\n   * Element class names\n   *\n   *  @type object\n   *  @default {}\n   */\n  classes: {},\n\n  /**\n   * DataTables build type (expanded by the download builder)\n   *\n   *  @type string\n   */\n  builder: \"-source-\",\n\n  /**\n   * Error reporting.\n   * \n   * How should DataTables report an error. Can take the value 'alert',\n   * 'throw', 'none' or a function.\n   *\n   *  @type string|function\n   *  @default alert\n   */\n  errMode: \"alert\",\n\n  /**\n   * Legacy so v1 plug-ins don't throw js errors on load\n   */\n  feature: [],\n\n  /**\n   * Feature plug-ins.\n   * \n   * This is an object of callbacks which provide the features for DataTables\n   * to be initialised via the `layout` option.\n   */\n  features: {},\n\n  /**\n   * Row searching.\n   * \n   * This method of searching is complimentary to the default type based\n   * searching, and a lot more comprehensive as it allows you complete control\n   * over the searching logic. Each element in this array is a function\n   * (parameters described below) that is called for every row in the table,\n   * and your logic decides if it should be included in the searching data set\n   * or not.\n   *\n   * Searching functions have the following input parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{array|object}` Data for the row to be processed (same as the\n   *    original format that was passed in as the data source, or an array\n   *    from a DOM data source\n   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n   *    can be useful to retrieve the `TR` element if you need DOM interaction.\n   *\n   * And the following return is expected:\n   *\n   * * {boolean} Include the row in the searched result set (true) or not\n   *   (false)\n   *\n   * Note that as with the main search ability in DataTables, technically this\n   * is \"filtering\", since it is subtractive. However, for consistency in\n   * naming we call it searching here.\n   *\n   *  @type array\n   *  @default []\n   *\n   *  @example\n   *    // The following example shows custom search being applied to the\n   *    // fourth column (i.e. the data[3] index) based on two input values\n   *    // from the end-user, matching the data in a certain range.\n   *    $.fn.dataTable.ext.search.push(\n   *      function( settings, data, dataIndex ) {\n   *        var min = document.getElementById('min').value * 1;\n   *        var max = document.getElementById('max').value * 1;\n   *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n   *\n   *        if ( min == \"\" && max == \"\" ) {\n   *          return true;\n   *        }\n   *        else if ( min == \"\" && version < max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && \"\" == max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && version < max ) {\n   *          return true;\n   *        }\n   *        return false;\n   *      }\n   *    );\n   */\n  search: [],\n\n  /**\n   * Selector extensions\n   *\n   * The `selector` option can be used to extend the options available for the\n   * selector modifier options (`selector-modifier` object data type) that\n   * each of the three built in selector types offer (row, column and cell +\n   * their plural counterparts). For example the Select extension uses this\n   * mechanism to provide an option to select only rows, columns and cells\n   * that have been marked as selected by the end user (`{selected: true}`),\n   * which can be used in conjunction with the existing built in selector\n   * options.\n   *\n   * Each property is an array to which functions can be pushed. The functions\n   * take three attributes:\n   *\n   * * Settings object for the host table\n   * * Options object (`selector-modifier` object type)\n   * * Array of selected item indexes\n   *\n   * The return is an array of the resulting item indexes after the custom\n   * selector has been applied.\n   *\n   *  @type object\n   */\n  selector: {\n    cell: [],\n    column: [],\n    row: []\n  },\n\n  /**\n   * Legacy configuration options. Enable and disable legacy options that\n   * are available in DataTables.\n   *\n   *  @type object\n   */\n  legacy: {\n    /**\n     * Enable / disable DataTables 1.9 compatible server-side processing\n     * requests\n     *\n     *  @type boolean\n     *  @default null\n     */\n    ajax: null\n  },\n\n  /**\n   * Pagination plug-in methods.\n   * \n   * Each entry in this object is a function and defines which buttons should\n   * be shown by the pagination rendering method that is used for the table:\n   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n   * buttons are displayed in the document, while the functions here tell it\n   * what buttons to display. This is done by returning an array of button\n   * descriptions (what each button will do).\n   *\n   * Pagination types (the four built in options and any additional plug-in\n   * options defined here) can be used through the `paginationType`\n   * initialisation parameter.\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{int} page` The current page index\n   * 2. `{int} pages` The number of pages in the table\n   *\n   * Each function is expected to return an array where each element of the\n   * array can be one of:\n   *\n   * * `first` - Jump to first page when activated\n   * * `last` - Jump to last page when activated\n   * * `previous` - Show previous page when activated\n   * * `next` - Show next page when activated\n   * * `{int}` - Show page of the index given\n   * * `{array}` - A nested array containing the above elements to add a\n   *   containing 'DIV' element (might be useful for styling).\n   *\n   * Note that DataTables v1.9- used this object slightly differently whereby\n   * an object with two functions would be defined for each plug-in. That\n   * ability is still supported by DataTables 1.10+ to provide backwards\n   * compatibility, but this option of use is now decremented and no longer\n   * documented in DataTables 1.10+.\n   *\n   *  @type object\n   *  @default {}\n   *\n   *  @example\n   *    // Show previous, next and current page buttons only\n   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n   *      return [ 'previous', page, 'next' ];\n   *    };\n   */\n  pager: {},\n  renderer: {\n    pageButton: {},\n    header: {}\n  },\n\n  /**\n   * Ordering plug-ins - custom data source\n   * \n   * The extension options for ordering of data available here is complimentary\n   * to the default type based ordering that DataTables typically uses. It\n   * allows much greater control over the the data that is being used to\n   * order a column, but is necessarily therefore more complex.\n   * \n   * This type of ordering is useful if you want to do ordering based on data\n   * live from the DOM (for example the contents of an 'input' element) rather\n   * than just the static string that DataTables knows of.\n   * \n   * The way these plug-ins work is that you create an array of the values you\n   * wish to be ordering for the column in question and then return that\n   * array. The data in the array much be in the index order of the rows in\n   * the table (not the currently ordering order!). Which order data gathering\n   * function is run here depends on the `dt-init columns.orderDataType`\n   * parameter that is used for the column (if any).\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{int}` Target column index\n   *\n   * Each function is expected to return an array:\n   *\n   * * `{array}` Data for the column to be ordering upon\n   *\n   *  @type array\n   *\n   *  @example\n   *    // Ordering using `input` node values\n   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n   *    {\n   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n   *        return $('input', td).val();\n   *      } );\n   *    }\n   */\n  order: {},\n\n  /**\n   * Type based plug-ins.\n   *\n   * Each column in DataTables has a type assigned to it, either by automatic\n   * detection or by direct assignment using the `type` option for the column.\n   * The type of a column will effect how it is ordering and search (plug-ins\n   * can also make use of the column type if required).\n   *\n   * @namespace\n   */\n  type: {\n    /**\n     * Automatic column class assignment\n     */\n    className: {},\n\n    /**\n     * Type detection functions.\n     *\n     * The functions defined in this object are used to automatically detect\n     * a column's type, making initialisation of DataTables super easy, even\n     * when complex data is in the table.\n     *\n     * The functions defined take two parameters:\n     *\n        *  1. `{*}` Data from the column cell to be analysed\n        *  2. `{settings}` DataTables settings object. This can be used to\n        *     perform context specific type detection - for example detection\n        *     based on language settings such as using a comma for a decimal\n        *     place. Generally speaking the options from the settings will not\n        *     be required\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Data type detected, or null if unknown (and thus\n     *   pass it on to the other type detection functions.\n     *\n     *  @type array\n     *\n     *  @example\n     *    // Currency type detection plug-in:\n     *    $.fn.dataTable.ext.type.detect.push(\n     *      function ( data, settings ) {\n     *        // Check the numeric part\n     *        if ( ! data.substring(1).match(/[0-9]/) ) {\n     *          return null;\n     *        }\n     *\n     *        // Check prefixed by currency\n     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n     *          return 'currency';\n     *        }\n     *        return null;\n     *      }\n     *    );\n     */\n    detect: [],\n\n    /**\n     * Automatic renderer assignment\n     */\n    render: {},\n\n    /**\n     * Type based search formatting.\n     *\n     * The type based searching functions can be used to pre-format the\n     * data to be search on. For example, it can be used to strip HTML\n     * tags or to de-format telephone numbers for numeric only searching.\n     *\n     * Note that is a search is not defined for a column of a given type,\n     * no search formatting will be performed.\n     * \n     * Pre-processing of searching data plug-ins - When you assign the sType\n     * for a column (or have it automatically detected for you by DataTables\n     * or a type detection plug-in), you will typically be using this for\n     * custom sorting, but it can also be used to provide custom searching\n     * by allowing you to pre-processing the data and returning the data in\n     * the format that should be searched upon. This is done by adding\n     * functions this object with a parameter name which matches the sType\n     * for that target column. This is the corollary of <i>afnSortData</i>\n     * for searching data.\n     *\n     * The functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for searching\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Formatted string that will be used for the searching.\n     *\n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n     *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n     *    }\n     */\n    search: {},\n\n    /**\n     * Type based ordering.\n     *\n     * The column type tells DataTables what ordering to apply to the table\n     * when a column is sorted upon. The order for each type that is defined,\n     * is defined by the functions available in this object.\n     *\n     * Each ordering option can be described by three properties added to\n     * this object:\n     *\n     * * `{type}-pre` - Pre-formatting function\n     * * `{type}-asc` - Ascending order function\n     * * `{type}-desc` - Descending order function\n     *\n     * All three can be used together, only `{type}-pre` or only\n     * `{type}-asc` and `{type}-desc` together. It is generally recommended\n     * that only `{type}-pre` is used, as this provides the optimal\n     * implementation in terms of speed, although the others are provided\n     * for compatibility with existing Javascript sort functions.\n     *\n     * `{type}-pre`: Functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for ordering\n     *\n     * And return:\n     *\n     * * `{*}` Data to be sorted upon\n     *\n     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n     * functions, taking two parameters:\n     *\n        *  1. `{*}` Data to compare to the second parameter\n        *  2. `{*}` Data to compare to the first parameter\n     *\n     * And returning:\n     *\n     * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n     *   than the second parameter, ===0 if the two parameters are equal and\n     *   >0 if the first parameter should be sorted height than the second\n     *   parameter.\n     * \n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    // Numeric ordering of formatted numbers with a pre-formatter\n     *    $.extend( $.fn.dataTable.ext.type.order, {\n     *      \"string-pre\": function(x) {\n     *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n     *        return parseFloat( a );\n     *      }\n     *    } );\n     *\n     *  @example\n     *    // Case-sensitive string ordering, with no pre-formatting method\n     *    $.extend( $.fn.dataTable.ext.order, {\n     *      \"string-case-asc\": function(x,y) {\n     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n     *      },\n     *      \"string-case-desc\": function(x,y) {\n     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n     *      }\n     *    } );\n     */\n    order: {}\n  },\n\n  /**\n   * Unique DataTables instance counter\n   *\n   * @type int\n   * @private\n   */\n  _unique: 0,\n  //\n  // Depreciated\n  // The following properties are retained for backwards compatibility only.\n  // The should not be used in new projects and will be removed in a future\n  // version\n  //\n\n  /**\n   * Version check function.\n   *  @type function\n   *  @depreciated Since 1.10\n   */\n  fnVersionCheck: DataTable.fnVersionCheck,\n\n  /**\n   * Index for what 'this' index API functions should use\n   *  @type int\n   *  @deprecated Since v1.10\n   */\n  iApiIndex: 0,\n\n  /**\n   * Software version\n   *  @type string\n   *  @deprecated Since v1.10\n   */\n  sVersion: DataTable.version\n}; //\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n\n$.extend(_ext, {\n  afnFiltering: _ext.search,\n  aTypes: _ext.type.detect,\n  ofnSearch: _ext.type.search,\n  oSort: _ext.type.order,\n  afnSortData: _ext.order,\n  aoFeatures: _ext.feature,\n  oStdClasses: _ext.classes,\n  oPagination: _ext.pager\n});\n$.extend(DataTable.ext.classes, {\n  container: 'dt-container',\n  empty: {\n    row: 'dt-empty'\n  },\n  info: {\n    container: 'dt-info'\n  },\n  length: {\n    container: 'dt-length',\n    select: 'dt-input'\n  },\n  order: {\n    canAsc: 'dt-orderable-asc',\n    canDesc: 'dt-orderable-desc',\n    isAsc: 'dt-ordering-asc',\n    isDesc: 'dt-ordering-desc',\n    none: 'dt-orderable-none',\n    position: 'sorting_'\n  },\n  processing: {\n    container: 'dt-processing'\n  },\n  scrolling: {\n    body: 'dt-scroll-body',\n    container: 'dt-scroll',\n    footer: {\n      self: 'dt-scroll-foot',\n      inner: 'dt-scroll-footInner'\n    },\n    header: {\n      self: 'dt-scroll-head',\n      inner: 'dt-scroll-headInner'\n    }\n  },\n  search: {\n    container: 'dt-search',\n    input: 'dt-input'\n  },\n  table: 'dataTable',\n  tbody: {\n    cell: '',\n    row: ''\n  },\n  thead: {\n    cell: '',\n    row: ''\n  },\n  tfoot: {\n    cell: '',\n    row: ''\n  },\n  paging: {\n    active: 'current',\n    button: 'dt-paging-button',\n    container: 'dt-paging',\n    disabled: 'disabled'\n  }\n});\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\n\n\nvar _Api; // DataTable.Api\n\n\nvar _api_register; // DataTable.Api.register\n\n\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g; // This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\n\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/; // Escape regular expression special characters\n\nvar _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g'); // https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\n\n\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\nvar _empty = function (d) {\n  return !d || d === true || d === '-' ? true : false;\n};\n\nvar _intVal = function (s) {\n  var integer = parseInt(s, 10);\n  return !isNaN(integer) && isFinite(s) ? integer : null;\n}; // Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\n\n\nvar _numToDecimal = function (num, decimalPoint) {\n  // Cache created regular expressions for speed as this function is called often\n  if (!_re_dic[decimalPoint]) {\n    _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n  }\n\n  return typeof num === 'string' && decimalPoint !== '.' ? num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') : num;\n};\n\nvar _isNumber = function (d, decimalPoint, formatted) {\n  var type = typeof d;\n  var strType = type === 'string';\n\n  if (type === 'number' || type === 'bigint') {\n    return true;\n  } // If empty return immediately so there must be a number if it is a\n  // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n  // as a formatted number for currency\n\n\n  if (_empty(d)) {\n    return true;\n  }\n\n  if (decimalPoint && strType) {\n    d = _numToDecimal(d, decimalPoint);\n  }\n\n  if (formatted && strType) {\n    d = d.replace(_re_formatted_numeric, '');\n  }\n\n  return !isNaN(parseFloat(d)) && isFinite(d);\n}; // A string without HTML in it can be considered to be HTML still\n\n\nvar _isHtml = function (d) {\n  return _empty(d) || typeof d === 'string';\n}; // Is a string a number surrounded by HTML?\n\n\nvar _htmlNumeric = function (d, decimalPoint, formatted) {\n  if (_empty(d)) {\n    return true;\n  } // input and select strings mean that this isn't just a number\n\n\n  if (typeof d === 'string' && d.match(/<(input|select)/i)) {\n    return null;\n  }\n\n  var html = _isHtml(d);\n\n  return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted) ? true : null;\n};\n\nvar _pluck = function (a, prop, prop2) {\n  var out = [];\n  var i = 0,\n      ien = a.length; // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[i] && a[i][prop]) {\n        out.push(a[i][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[i]) {\n        out.push(a[i][prop]);\n      }\n    }\n  }\n\n  return out;\n}; // Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\n\n\nvar _pluck_order = function (a, order, prop, prop2) {\n  var out = [];\n  var i = 0,\n      ien = order.length; // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[order[i]][prop]) {\n        out.push(a[order[i]][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[order[i]]) {\n        out.push(a[order[i]][prop]);\n      }\n    }\n  }\n\n  return out;\n};\n\nvar _range = function (len, start) {\n  var out = [];\n  var end;\n\n  if (start === undefined) {\n    start = 0;\n    end = len;\n  } else {\n    end = start;\n    start = len;\n  }\n\n  for (var i = start; i < end; i++) {\n    out.push(i);\n  }\n\n  return out;\n};\n\nvar _removeEmpty = function (a) {\n  var out = [];\n\n  for (var i = 0, ien = a.length; i < ien; i++) {\n    if (a[i]) {\n      // careful - will remove all falsy values!\n      out.push(a[i]);\n    }\n  }\n\n  return out;\n}; // Replaceable function in api.util\n\n\nvar _stripHtml = function (d) {\n  return d.replace(_re_html, '') // Complete tags\n  .replace(/<script/i, ''); // Safety for incomplete script tag\n}; // Replaceable function in api.util\n\n\nvar _escapeHtml = function (d) {\n  if (Array.isArray(d)) {\n    d = d.join(',');\n  }\n\n  return typeof d === 'string' ? d.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') : d;\n}; // Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\n\n\nvar _normalize = function (str, both) {\n  if (typeof str !== 'string') {\n    return str;\n  } // It is faster to just run `normalize` than it is to check if\n  // we need to with a regex!\n\n\n  var res = str.normalize(\"NFD\"); // Equally, here we check if a regex is needed or not\n\n  return res.length !== str.length ? (both === true ? str + ' ' : '') + res.replace(/[\\u0300-\\u036f]/g, \"\") : res;\n};\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\n\n\nvar _areAllUnique = function (src) {\n  if (src.length < 2) {\n    return true;\n  }\n\n  var sorted = src.slice().sort();\n  var last = sorted[0];\n\n  for (var i = 1, ien = sorted.length; i < ien; i++) {\n    if (sorted[i] === last) {\n      return false;\n    }\n\n    last = sorted[i];\n  }\n\n  return true;\n};\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\n\n\nvar _unique = function (src) {\n  if (Array.from && Set) {\n    return Array.from(new Set(src));\n  }\n\n  if (_areAllUnique(src)) {\n    return src.slice();\n  } // A faster unique method is to use object keys to identify used values,\n  // but this doesn't work with arrays or objects, which we must also\n  // consider. See jsperf.app/compare-array-unique-versions/4 for more\n  // information.\n\n\n  var out = [],\n      val,\n      i,\n      ien = src.length,\n      j,\n      k = 0;\n\n  again: for (i = 0; i < ien; i++) {\n    val = src[i];\n\n    for (j = 0; j < k; j++) {\n      if (out[j] === val) {\n        continue again;\n      }\n    }\n\n    out.push(val);\n    k++;\n  }\n\n  return out;\n}; // Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\n\n\nvar _flatten = function (out, val) {\n  if (Array.isArray(val)) {\n    for (var i = 0; i < val.length; i++) {\n      _flatten(out, val[i]);\n    }\n  } else {\n    out.push(val);\n  }\n\n  return out;\n}; // Similar to jQuery's addClass, but use classList.add\n\n\nfunction _addClass(el, name) {\n  if (name) {\n    name.split(' ').forEach(function (n) {\n      if (n) {\n        // `add` does deduplication, so no need to check `contains`\n        el.classList.add(n);\n      }\n    });\n  }\n}\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\n\n\nDataTable.util = {\n  /**\n   * Return a string with diacritic characters decomposed\n   * @param {*} mixed Function or string to normalize\n   * @param {*} both Return original string and the normalized string\n   * @returns String or undefined\n   */\n  diacritics: function (mixed, both) {\n    var type = typeof mixed;\n\n    if (type !== 'function') {\n      return _normalize(mixed, both);\n    }\n\n    _normalize = mixed;\n  },\n\n  /**\n   * Debounce a function\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  debounce: function (fn, timeout) {\n    var timer;\n    return function () {\n      var that = this;\n      var args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        fn.apply(that, args);\n      }, timeout || 250);\n    };\n  },\n\n  /**\n   * Throttle the calls to a function. Arguments and context are maintained\n   * for the throttled function.\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  throttle: function (fn, freq) {\n    var frequency = freq !== undefined ? freq : 200,\n        last,\n        timer;\n    return function () {\n      var that = this,\n          now = +new Date(),\n          args = arguments;\n\n      if (last && now < last + frequency) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          last = undefined;\n          fn.apply(that, args);\n        }, frequency);\n      } else {\n        last = now;\n        fn.apply(that, args);\n      }\n    };\n  },\n\n  /**\n   * Escape a string such that it can be used in a regular expression\n   *\n   *  @param {string} val string to escape\n   *  @returns {string} escaped string\n   */\n  escapeRegex: function (val) {\n    return val.replace(_re_escape_regex, '\\\\$1');\n  },\n\n  /**\n   * Create a function that will write to a nested object or array\n   * @param {*} source JSON notation string\n   * @returns Write function\n   */\n  set: function (source) {\n    if ($.isPlainObject(source)) {\n      /* Unlike get, only the underscore (global) option is used for for\n       * setting data since we don't know the type here. This is why an object\n       * option is not documented for `mData` (which is read/write), but it is\n       * for `mRender` which is read only.\n       */\n      return DataTable.util.set(source._);\n    } else if (source === null) {\n      // Nothing to do when the data source is null\n      return function () {};\n    } else if (typeof source === 'function') {\n      return function (data, val, meta) {\n        source(data, 'set', val, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      // Like the get, we need to get data from a nested object\n      var setData = function (data, val, src) {\n        var a = _fnSplitObjNotation(src),\n            b;\n\n        var aLast = a[a.length - 1];\n        var arrayNotation, funcNotation, o, innerSrc;\n\n        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n          // Protect against prototype pollution\n          if (a[i] === '__proto__' || a[i] === 'constructor') {\n            throw new Error('Cannot set prototype values');\n          } // Check if we are dealing with an array notation request\n\n\n          arrayNotation = a[i].match(__reArray);\n          funcNotation = a[i].match(__reFn);\n\n          if (arrayNotation) {\n            a[i] = a[i].replace(__reArray, '');\n            data[a[i]] = []; // Get the remainder of the nested object to set so we can recurse\n\n            b = a.slice();\n            b.splice(0, i + 1);\n            innerSrc = b.join('.'); // Traverse each entry in the array setting the properties requested\n\n            if (Array.isArray(val)) {\n              for (var j = 0, jLen = val.length; j < jLen; j++) {\n                o = {};\n                setData(o, val[j], innerSrc);\n                data[a[i]].push(o);\n              }\n            } else {\n              // We've been asked to save data to an array, but it\n              // isn't array data to be saved. Best that can be done\n              // is to just save the value.\n              data[a[i]] = val;\n            } // The inner call to setData has already traversed through the remainder\n            // of the source and has set the data, thus we can exit here\n\n\n            return;\n          } else if (funcNotation) {\n            // Function call\n            a[i] = a[i].replace(__reFn, '');\n            data = data[a[i]](val);\n          } // If the nested object doesn't currently exist - since we are\n          // trying to set the value - create it\n\n\n          if (data[a[i]] === null || data[a[i]] === undefined) {\n            data[a[i]] = {};\n          }\n\n          data = data[a[i]];\n        } // Last item in the input - i.e, the actual set\n\n\n        if (aLast.match(__reFn)) {\n          // Function call\n          data = data[aLast.replace(__reFn, '')](val);\n        } else {\n          // If array notation is used, we just want to strip it and use the property name\n          // and assign the value. If it isn't used, then we get the result we want anyway\n          data[aLast.replace(__reArray, '')] = val;\n        }\n      };\n\n      return function (data, val) {\n        // meta is also passed in, but not used\n        return setData(data, val, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data, val) {\n        // meta is also passed in, but not used\n        data[source] = val;\n      };\n    }\n  },\n\n  /**\n   * Create a function that will read nested objects from arrays, based on JSON notation\n   * @param {*} source JSON notation string\n   * @returns Value read\n   */\n  get: function (source) {\n    if ($.isPlainObject(source)) {\n      // Build an object of get functions, and wrap them in a single call\n      var o = {};\n      $.each(source, function (key, val) {\n        if (val) {\n          o[key] = DataTable.util.get(val);\n        }\n      });\n      return function (data, type, row, meta) {\n        var t = o[type] || o._;\n        return t !== undefined ? t(data, type, row, meta) : data;\n      };\n    } else if (source === null) {\n      // Give an empty string for rendering / sorting etc\n      return function (data) {\n        // type, row and meta also passed, but not used\n        return data;\n      };\n    } else if (typeof source === 'function') {\n      return function (data, type, row, meta) {\n        return source(data, type, row, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      /* If there is a . in the source string then the data source is in a\n       * nested object so we loop over the data for each level to get the next\n       * level down. On each loop we test for undefined, and if found immediately\n       * return. This allows entire objects to be missing and sDefaultContent to\n       * be used if defined, rather than throwing an error\n       */\n      var fetchData = function (data, type, src) {\n        var arrayNotation, funcNotation, out, innerSrc;\n\n        if (src !== \"\") {\n          var a = _fnSplitObjNotation(src);\n\n          for (var i = 0, iLen = a.length; i < iLen; i++) {\n            // Check if we are dealing with special notation\n            arrayNotation = a[i].match(__reArray);\n            funcNotation = a[i].match(__reFn);\n\n            if (arrayNotation) {\n              // Array notation\n              a[i] = a[i].replace(__reArray, ''); // Condition allows simply [] to be passed in\n\n              if (a[i] !== \"\") {\n                data = data[a[i]];\n              }\n\n              out = []; // Get the remainder of the nested object to get\n\n              a.splice(0, i + 1);\n              innerSrc = a.join('.'); // Traverse each entry in the array getting the properties requested\n\n              if (Array.isArray(data)) {\n                for (var j = 0, jLen = data.length; j < jLen; j++) {\n                  out.push(fetchData(data[j], type, innerSrc));\n                }\n              } // If a string is given in between the array notation indicators, that\n              // is used to join the strings together, otherwise an array is returned\n\n\n              var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n              data = join === \"\" ? out : out.join(join); // The inner call to fetchData has already traversed through the remainder\n              // of the source requested, so we exit from the loop\n\n              break;\n            } else if (funcNotation) {\n              // Function call\n              a[i] = a[i].replace(__reFn, '');\n              data = data[a[i]]();\n              continue;\n            }\n\n            if (data === null || data[a[i]] === null) {\n              return null;\n            } else if (data === undefined || data[a[i]] === undefined) {\n              return undefined;\n            }\n\n            data = data[a[i]];\n          }\n        }\n\n        return data;\n      };\n\n      return function (data, type) {\n        // row and meta also passed, but not used\n        return fetchData(data, type, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data) {\n        // row and meta also passed, but not used\n        return data[source];\n      };\n    }\n  },\n  stripHtml: function (mixed) {\n    var type = typeof mixed;\n\n    if (type === 'function') {\n      _stripHtml = mixed;\n      return;\n    } else if (type === 'string') {\n      return _stripHtml(mixed);\n    }\n\n    return mixed;\n  },\n  escapeHtml: function (mixed) {\n    var type = typeof mixed;\n\n    if (type === 'function') {\n      _escapeHtml = mixed;\n      return;\n    } else if (type === 'string' || Array.isArray(mixed)) {\n      return _escapeHtml(mixed);\n    }\n\n    return mixed;\n  },\n  unique: _unique\n};\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\n\nfunction _fnHungarianMap(o) {\n  var hungarian = 'a aa ai ao as b fn i m o s ',\n      match,\n      newKey,\n      map = {};\n  $.each(o, function (key) {\n    match = key.match(/^([^A-Z]+?)([A-Z])/);\n\n    if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n      newKey = key.replace(match[0], match[2].toLowerCase());\n      map[newKey] = key;\n\n      if (match[1] === 'o') {\n        _fnHungarianMap(o[key]);\n      }\n    }\n  });\n  o._hungarianMap = map;\n}\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCamelToHungarian(src, user, force) {\n  if (!src._hungarianMap) {\n    _fnHungarianMap(src);\n  }\n\n  var hungarianKey;\n  $.each(user, function (key) {\n    hungarianKey = src._hungarianMap[key];\n\n    if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n      // For objects, we need to buzz down into the object to copy parameters\n      if (hungarianKey.charAt(0) === 'o') {\n        // Copy the camelCase options over to the hungarian\n        if (!user[hungarianKey]) {\n          user[hungarianKey] = {};\n        }\n\n        $.extend(true, user[hungarianKey], user[key]);\n\n        _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n      } else {\n        user[hungarianKey] = user[key];\n      }\n    }\n  });\n}\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\n\n\nvar _fnCompatMap = function (o, knew, old) {\n  if (o[knew] !== undefined) {\n    o[old] = o[knew];\n  }\n};\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\n\n\nfunction _fnCompatOpts(init) {\n  _fnCompatMap(init, 'ordering', 'bSort');\n\n  _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n\n  _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n\n  _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n\n  _fnCompatMap(init, 'order', 'aaSorting');\n\n  _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n\n  _fnCompatMap(init, 'paging', 'bPaginate');\n\n  _fnCompatMap(init, 'pagingType', 'sPaginationType');\n\n  _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n\n  _fnCompatMap(init, 'searching', 'bFilter'); // Boolean initialisation of x-scrolling\n\n\n  if (typeof init.sScrollX === 'boolean') {\n    init.sScrollX = init.sScrollX ? '100%' : '';\n  }\n\n  if (typeof init.scrollX === 'boolean') {\n    init.scrollX = init.scrollX ? '100%' : '';\n  } // Column search objects are in an array, so it needs to be converted\n  // element by element\n\n\n  var searchCols = init.aoSearchCols;\n\n  if (searchCols) {\n    for (var i = 0, ien = searchCols.length; i < ien; i++) {\n      if (searchCols[i]) {\n        _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n      }\n    }\n  } // Enable search delay if server-side processing is enabled\n\n\n  if (init.serverSide && !init.searchDelay) {\n    init.searchDelay = 400;\n  }\n}\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\n\n\nfunction _fnCompatCols(init) {\n  _fnCompatMap(init, 'orderable', 'bSortable');\n\n  _fnCompatMap(init, 'orderData', 'aDataSort');\n\n  _fnCompatMap(init, 'orderSequence', 'asSorting');\n\n  _fnCompatMap(init, 'orderDataType', 'sortDataType'); // orderData can be given as an integer\n\n\n  var dataSort = init.aDataSort;\n\n  if (typeof dataSort === 'number' && !Array.isArray(dataSort)) {\n    init.aDataSort = [dataSort];\n  }\n}\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnBrowserDetect(settings) {\n  // We don't need to do this every time DataTables is constructed, the values\n  // calculated are specific to the browser and OS configuration which we\n  // don't expect to change between initialisations\n  if (!DataTable.__browser) {\n    var browser = {};\n    DataTable.__browser = browser; // Scrolling feature / quirks detection\n\n    var n = $('<div/>').css({\n      position: 'fixed',\n      top: 0,\n      left: -1 * window.pageXOffset,\n      // allow for scrolling\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    }).append($('<div/>').css({\n      position: 'absolute',\n      top: 1,\n      left: 1,\n      width: 100,\n      overflow: 'scroll'\n    }).append($('<div/>').css({\n      width: '100%',\n      height: 10\n    }))).appendTo('body');\n    var outer = n.children();\n    var inner = outer.children(); // Get scrollbar width\n\n    browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth; // In rtl text layout, some browsers (most, but not all) will place the\n    // scrollbar on the left, rather than the right.\n\n    browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n    n.remove();\n  }\n\n  $.extend(settings.oBrowser, DataTable.__browser);\n  settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAddColumn(oSettings) {\n  // Add column to aoColumns array\n  var oDefaults = DataTable.defaults.column;\n  var iCol = oSettings.aoColumns.length;\n  var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n    \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n    \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n    idx: iCol,\n    searchFixed: {},\n    colEl: $('<col>')\n  });\n  oSettings.aoColumns.push(oCol); // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n  // passed into extend can be undefined. This allows the user to give a default\n  // with only some of the parameters defined, and also not give a default\n\n  var searchCols = oSettings.aoPreSearchCols;\n  searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);\n}\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnColumnOptions(oSettings, iCol, oOptions) {\n  var oCol = oSettings.aoColumns[iCol];\n  /* User specified column options */\n\n  if (oOptions !== undefined && oOptions !== null) {\n    // Backwards compatibility\n    _fnCompatCols(oOptions); // Map camel case parameters to their Hungarian counterparts\n\n\n    _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n    /* Backwards compatibility for mDataProp */\n\n\n    if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n      oOptions.mData = oOptions.mDataProp;\n    }\n\n    if (oOptions.sType) {\n      oCol._sManualType = oOptions.sType;\n    } // `class` is a reserved word in Javascript, so we need to provide\n    // the ability to use a valid name for the camel case input\n\n\n    if (oOptions.className && !oOptions.sClass) {\n      oOptions.sClass = oOptions.className;\n    }\n\n    var origClass = oCol.sClass;\n    $.extend(oCol, oOptions);\n\n    _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\"); // Merge class from previously defined classes with this one, rather than just\n    // overwriting it in the extend above\n\n\n    if (origClass !== oCol.sClass) {\n      oCol.sClass = origClass + ' ' + oCol.sClass;\n    }\n    /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n     * priority if defined\n     */\n\n\n    if (oOptions.iDataSort !== undefined) {\n      oCol.aDataSort = [oOptions.iDataSort];\n    }\n\n    _fnMap(oCol, oOptions, \"aDataSort\");\n  }\n  /* Cache the data get and set functions for speed */\n\n\n  var mDataSrc = oCol.mData;\n\n  var mData = _fnGetObjectDataFn(mDataSrc); // The `render` option can be given as an array to access the helper rendering methods.\n  // The first element is the rendering method to use, the rest are the parameters to pass\n\n\n  if (oCol.mRender && Array.isArray(oCol.mRender)) {\n    var copy = oCol.mRender.slice();\n    var name = copy.shift();\n    oCol.mRender = DataTable.render[name].apply(window, copy);\n  }\n\n  oCol._render = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n\n  var attrTest = function (src) {\n    return typeof src === 'string' && src.indexOf('@') !== -1;\n  };\n\n  oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));\n  oCol._setter = null;\n\n  oCol.fnGetData = function (rowData, type, meta) {\n    var innerData = mData(rowData, type, undefined, meta);\n    return oCol._render && type ? oCol._render(innerData, type, rowData, meta) : innerData;\n  };\n\n  oCol.fnSetData = function (rowData, val, meta) {\n    return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n  }; // Indicate if DataTables should read DOM data as an object or array\n  // Used in _fnGetRowElements\n\n\n  if (typeof mDataSrc !== 'number' && !oCol._isArrayHost) {\n    oSettings._rowReadObject = true;\n  }\n  /* Feature sorting overrides column specific when off */\n\n\n  if (!oSettings.oFeatures.bSort) {\n    oCol.bSortable = false;\n  }\n}\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAdjustColumnSizing(settings) {\n  _fnCalculateColumnWidths(settings);\n\n  _fnColumnSizes(settings);\n\n  var scroll = settings.oScroll;\n\n  if (scroll.sY !== '' || scroll.sX !== '') {\n    _fnScrollDraw(settings);\n  }\n\n  _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n}\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\n\n\nfunction _fnColumnSizes(settings) {\n  var cols = settings.aoColumns;\n\n  for (var i = 0; i < cols.length; i++) {\n    var width = _fnColumnsSumWidth(settings, [i], false, false);\n\n    cols[i].colEl.css('width', width);\n  }\n}\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnVisibleToColumnIndex(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n  return typeof aiVis[iMatch] === 'number' ? aiVis[iMatch] : null;\n}\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnColumnIndexToVisible(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n\n  var iPos = aiVis.indexOf(iMatch);\n  return iPos !== -1 ? iPos : null;\n}\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnVisbleColumns(settings) {\n  var layout = settings.aoHeader;\n  var columns = settings.aoColumns;\n  var vis = 0;\n\n  if (layout.length) {\n    for (var i = 0, ien = layout[0].length; i < ien; i++) {\n      if (columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none') {\n        vis++;\n      }\n    }\n  }\n\n  return vis;\n}\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnGetColumns(oSettings, sParam) {\n  var a = [];\n  oSettings.aoColumns.map(function (val, i) {\n    if (val[sParam]) {\n      a.push(i);\n    }\n  });\n  return a;\n}\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnColumnTypes(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var types = DataTable.ext.type.detect;\n  var i, ien, j, jen, k, ken;\n  var col, detectedType, cache; // For each column, spin over the \n\n  for (i = 0, ien = columns.length; i < ien; i++) {\n    col = columns[i];\n    cache = [];\n\n    if (!col.sType && col._sManualType) {\n      col.sType = col._sManualType;\n    } else if (!col.sType) {\n      for (j = 0, jen = types.length; j < jen; j++) {\n        for (k = 0, ken = data.length; k < ken; k++) {\n          if (!data[k]) {\n            continue;\n          } // Use a cache array so we only need to get the type data\n          // from the formatter once (when using multiple detectors)\n\n\n          if (cache[k] === undefined) {\n            cache[k] = _fnGetCellData(settings, k, i, 'type');\n          }\n\n          detectedType = types[j](cache[k], settings); // If null, then this type can't apply to this column, so\n          // rather than testing all cells, break out. There is an\n          // exception for the last type which is `html`. We need to\n          // scan all rows since it is possible to mix string and HTML\n          // types\n\n          if (!detectedType && j !== types.length - 2) {\n            break;\n          } // Only a single match is needed for html type since it is\n          // bottom of the pile and very similar to string - but it\n          // must not be empty\n\n\n          if (detectedType === 'html' && !_empty(cache[k])) {\n            break;\n          }\n        } // Type is valid for all data points in the column - use this\n        // type\n\n\n        if (detectedType) {\n          col.sType = detectedType;\n          break;\n        }\n      } // Fall back - if no type was detected, always use string\n\n\n      if (!col.sType) {\n        col.sType = 'string';\n      }\n    } // Set class names for header / footer for auto type classes\n\n\n    var autoClass = _ext.type.className[col.sType];\n\n    if (autoClass) {\n      _columnAutoClass(settings.aoHeader, i, autoClass);\n\n      _columnAutoClass(settings.aoFooter, i, autoClass);\n    }\n\n    var renderer = _ext.type.render[col.sType]; // This can only happen once! There is no way to remover\n    // a renderer. After the first time the renderer has\n    // already been set so createTr will run the renderer itself.\n\n    if (renderer && !col._render) {\n      col._render = DataTable.util.get(renderer);\n\n      _columnAutoRender(settings, i);\n    }\n  }\n}\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\n\n\nfunction _columnAutoRender(settings, colIdx) {\n  var data = settings.aoData;\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].nTr) {\n      // We have to update the display here since there is no\n      // invalidation check for the data\n      var display = _fnGetCellData(settings, i, colIdx, 'display');\n\n      data[i].displayData[colIdx] = display;\n\n      _fnWriteCell(data[i].anCells[colIdx], display); // No need to update sort / filter data since it has\n      // been invalidated and will be re-read with the\n      // renderer now applied\n\n    }\n  }\n}\n/**\n * Apply a class name to a column's header cells\n */\n\n\nfunction _columnAutoClass(container, colIdx, className) {\n  container.forEach(function (row) {\n    if (row[colIdx] && row[colIdx].unique) {\n      _addClass(row[colIdx].cell, className);\n    }\n  });\n}\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, headerLayout, fn) {\n  var i, iLen, j, jLen, k, kLen, def;\n  var columns = oSettings.aoColumns;\n\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      if (aoCols[i] && aoCols[i].name) {\n        columns[i].sName = aoCols[i].name;\n      }\n    }\n  } // Column definitions with aTargets\n\n\n  if (aoColDefs) {\n    /* Loop over the definitions array - loop in reverse so first instance has priority */\n    for (i = aoColDefs.length - 1; i >= 0; i--) {\n      def = aoColDefs[i];\n      /* Each definition can target multiple columns, as it is an array */\n\n      var aTargets = def.target !== undefined ? def.target : def.targets !== undefined ? def.targets : def.aTargets;\n\n      if (!Array.isArray(aTargets)) {\n        aTargets = [aTargets];\n      }\n\n      for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n        var target = aTargets[j];\n\n        if (typeof target === 'number' && target >= 0) {\n          /* Add columns that we don't yet know about */\n          while (columns.length <= target) {\n            _fnAddColumn(oSettings);\n          }\n          /* Integer, basic index */\n\n\n          fn(target, def);\n        } else if (typeof target === 'number' && target < 0) {\n          /* Negative integer, right to left column counting */\n          fn(columns.length + target, def);\n        } else if (typeof target === 'string') {\n          for (k = 0, kLen = columns.length; k < kLen; k++) {\n            if (target === '_all') {\n              // Apply to all columns\n              fn(k, def);\n            } else if (target.indexOf(':name') !== -1) {\n              // Column selector\n              if (columns[k].sName === target.replace(':name', '')) {\n                fn(k, def);\n              }\n            } else {\n              // Cell selector\n              headerLayout.forEach(function (row) {\n                if (row[k]) {\n                  var cell = $(row[k].cell); // Legacy support. Note that it means that we don't support\n                  // an element name selector only, since they are treated as\n                  // class names for 1.x compat.\n\n                  if (target.match(/^[a-z][\\w-]*$/i)) {\n                    target = '.' + target;\n                  }\n\n                  if (cell.is(target)) {\n                    fn(k, def);\n                  }\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n  } // Statically defined columns array\n\n\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      fn(i, aoCols[i]);\n    }\n  }\n}\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\n\n\nfunction _fnColumnsSumWidth(settings, targets, original, incVisible) {\n  if (!Array.isArray(targets)) {\n    targets = _fnColumnsFromHeader(targets);\n  }\n\n  var sum = 0;\n  var unit;\n  var columns = settings.aoColumns;\n\n  for (var i = 0, ien = targets.length; i < ien; i++) {\n    var column = columns[targets[i]];\n    var definedWidth = original ? column.sWidthOrig : column.sWidth;\n\n    if (!incVisible && column.bVisible === false) {\n      continue;\n    }\n\n    if (definedWidth === null || definedWidth === undefined) {\n      return null; // can't determine a defined width - browser defined\n    } else if (typeof definedWidth === 'number') {\n      unit = 'px';\n      sum += definedWidth;\n    } else {\n      var matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n\n      if (matched) {\n        sum += matched[1] * 1;\n        unit = matched.length === 3 ? matched[2] : 'px';\n      }\n    }\n  }\n\n  return sum + unit;\n}\n\nfunction _fnColumnsFromHeader(cell) {\n  var attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n\n  if (!attr) {\n    return [];\n  }\n\n  return attr.split(',').map(function (val) {\n    return val * 1;\n  });\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAddData(settings, dataIn, tr, tds) {\n  /* Create the object for storing information about this new row */\n  var rowIdx = settings.aoData.length;\n  var rowModel = $.extend(true, {}, DataTable.models.oRow, {\n    src: tr ? 'dom' : 'data',\n    idx: rowIdx\n  });\n  rowModel._aData = dataIn;\n  settings.aoData.push(rowModel);\n  var columns = settings.aoColumns;\n\n  for (var i = 0, iLen = columns.length; i < iLen; i++) {\n    // Invalidate the column types as the new data needs to be revalidated\n    columns[i].sType = null;\n  }\n  /* Add to the display array */\n\n\n  settings.aiDisplayMaster.push(rowIdx);\n  var id = settings.rowIdFn(dataIn);\n\n  if (id !== undefined) {\n    settings.aIds[id] = rowModel;\n  }\n  /* Create the DOM information, or register it if already present */\n\n\n  if (tr || !settings.oFeatures.bDeferRender) {\n    _fnCreateTr(settings, rowIdx, tr, tds);\n  }\n\n  return rowIdx;\n}\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAddTr(settings, trs) {\n  var row; // Allow an individual node to be passed in\n\n  if (!(trs instanceof $)) {\n    trs = $(trs);\n  }\n\n  return trs.map(function (i, el) {\n    row = _fnGetRowElements(settings, el);\n    return _fnAddData(settings, row.data, el, row.cells);\n  });\n}\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnGetCellData(settings, rowIdx, colIdx, type) {\n  if (type === 'search') {\n    type = 'filter';\n  } else if (type === 'order') {\n    type = 'sort';\n  }\n\n  var draw = settings.iDraw;\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  var defaultContent = col.sDefaultContent;\n  var cellData = col.fnGetData(rowData, type, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  }); // Allow for a node being returned for non-display types\n\n  if (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n    cellData = cellData.innerHTML;\n  }\n\n  if (cellData === undefined) {\n    if (settings.iDrawError != draw && defaultContent === null) {\n      _fnLog(settings, 0, \"Requested unknown parameter \" + (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") + \" for row \" + rowIdx + \", column \" + colIdx, 4);\n\n      settings.iDrawError = draw;\n    }\n\n    return defaultContent;\n  } // When the data source is null and a specific data type is requested (i.e.\n  // not the original data), we can use default column data\n\n\n  if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n    cellData = defaultContent;\n  } else if (typeof cellData === 'function') {\n    // If the data source is a function, then we run it and use the return,\n    // executing in the scope of the data object (for instances)\n    return cellData.call(rowData);\n  }\n\n  if (cellData === null && type === 'display') {\n    return '';\n  }\n\n  if (type === 'filter') {\n    var fomatters = DataTable.ext.type.search;\n\n    if (fomatters[col.sType]) {\n      cellData = fomatters[col.sType](cellData);\n    }\n  }\n\n  return cellData;\n}\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSetCellData(settings, rowIdx, colIdx, val) {\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  col.fnSetData(rowData, val, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n}\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\n\n\nfunction _fnWriteCell(td, val) {\n  if (val && typeof val === 'object' && val.nodeName) {\n    $(td).empty().append(val);\n  } else {\n    td.innerHTML = val;\n  }\n} // Private variable that is used to match action syntax in the data property object\n\n\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\n\nfunction _fnSplitObjNotation(str) {\n  var parts = str.match(/(\\\\.|[^.])+/g) || [''];\n  return parts.map(function (s) {\n    return s.replace(/\\\\\\./g, '.');\n  });\n}\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\n\n\nvar _fnGetObjectDataFn = DataTable.util.get;\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\n\nvar _fnSetObjectDataFn = DataTable.util.set;\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\n\nfunction _fnGetDataMaster(settings) {\n  return _pluck(settings.aoData, '_aData');\n}\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnClearTable(settings) {\n  settings.aoData.length = 0;\n  settings.aiDisplayMaster.length = 0;\n  settings.aiDisplay.length = 0;\n  settings.aIds = {};\n}\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\n\n\nfunction _fnInvalidate(settings, rowIdx, src, colIdx) {\n  var row = settings.aoData[rowIdx];\n  var i, ien; // Remove the cached data for the row\n\n  row._aSortData = null;\n  row._aFilterData = null;\n  row.displayData = null; // Are we reading last data from DOM or the data object?\n\n  if (src === 'dom' || (!src || src === 'auto') && row.src === 'dom') {\n    // Read the data from the DOM\n    row._aData = _fnGetRowElements(settings, row, colIdx, colIdx === undefined ? undefined : row._aData).data;\n  } else {\n    // Reading from data object, update the DOM\n    var cells = row.anCells;\n\n    var display = _fnGetRowDisplay(settings, rowIdx);\n\n    if (cells) {\n      if (colIdx !== undefined) {\n        _fnWriteCell(cells[colIdx], display[colIdx]);\n      } else {\n        for (i = 0, ien = cells.length; i < ien; i++) {\n          _fnWriteCell(cells[i], display[i]);\n        }\n      }\n    }\n  } // Column specific invalidation\n\n\n  var cols = settings.aoColumns;\n\n  if (colIdx !== undefined) {\n    // Type - the data might have changed\n    cols[colIdx].sType = null; // Max length string. Its a fairly cheep recalculation, so not worth\n    // something more complicated\n\n    cols[colIdx].maxLenString = null;\n  } else {\n    for (i = 0, ien = cols.length; i < ien; i++) {\n      cols[i].sType = null;\n      cols[i].maxLenString = null;\n    } // Update DataTables special `DT_*` attributes for the row\n\n\n    _fnRowAttributes(settings, row);\n  }\n}\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\n\n\nfunction _fnGetRowElements(settings, row, colIdx, d) {\n  var tds = [],\n      td = row.firstChild,\n      name,\n      col,\n      i = 0,\n      contents,\n      columns = settings.aoColumns,\n      objectRead = settings._rowReadObject; // Allow the data object to be passed in, or construct\n\n  d = d !== undefined ? d : objectRead ? {} : [];\n\n  var attr = function (str, td) {\n    if (typeof str === 'string') {\n      var idx = str.indexOf('@');\n\n      if (idx !== -1) {\n        var attr = str.substring(idx + 1);\n\n        var setter = _fnSetObjectDataFn(str);\n\n        setter(d, td.getAttribute(attr));\n      }\n    }\n  }; // Read data from a cell and store into the data object\n\n\n  var cellProcess = function (cell) {\n    if (colIdx === undefined || colIdx === i) {\n      col = columns[i];\n      contents = cell.innerHTML.trim();\n\n      if (col && col._bAttrSrc) {\n        var setter = _fnSetObjectDataFn(col.mData._);\n\n        setter(d, contents);\n        attr(col.mData.sort, cell);\n        attr(col.mData.type, cell);\n        attr(col.mData.filter, cell);\n      } else {\n        // Depending on the `data` option for the columns the data can\n        // be read to either an object or an array.\n        if (objectRead) {\n          if (!col._setter) {\n            // Cache the setter function\n            col._setter = _fnSetObjectDataFn(col.mData);\n          }\n\n          col._setter(d, contents);\n        } else {\n          d[i] = contents;\n        }\n      }\n    }\n\n    i++;\n  };\n\n  if (td) {\n    // `tr` element was passed in\n    while (td) {\n      name = td.nodeName.toUpperCase();\n\n      if (name == \"TD\" || name == \"TH\") {\n        cellProcess(td);\n        tds.push(td);\n      }\n\n      td = td.nextSibling;\n    }\n  } else {\n    // Existing row object passed in\n    tds = row.anCells;\n\n    for (var j = 0, jen = tds.length; j < jen; j++) {\n      cellProcess(tds[j]);\n    }\n  } // Read the ID from the DOM if present\n\n\n  var rowNode = row.firstChild ? row : row.nTr;\n\n  if (rowNode) {\n    var id = rowNode.getAttribute('id');\n\n    if (id) {\n      _fnSetObjectDataFn(settings.rowId)(d, id);\n    }\n  }\n\n  return {\n    data: d,\n    cells: tds\n  };\n}\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\n\n\nfunction _fnGetRowDisplay(settings, rowIdx) {\n  let rowModal = settings.aoData[rowIdx];\n  let columns = settings.aoColumns;\n\n  if (!rowModal.displayData) {\n    // Need to render and cache\n    rowModal.displayData = [];\n\n    for (var colIdx = 0, len = columns.length; colIdx < len; colIdx++) {\n      rowModal.displayData.push(_fnGetCellData(settings, rowIdx, colIdx, 'display'));\n    }\n  }\n\n  return rowModal.displayData;\n}\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n  var row = oSettings.aoData[iRow],\n      rowData = row._aData,\n      cells = [],\n      nTr,\n      nTd,\n      oCol,\n      i,\n      iLen,\n      create,\n      trClass = oSettings.oClasses.tbody.row;\n\n  if (row.nTr === null) {\n    nTr = nTrIn || document.createElement('tr');\n    row.nTr = nTr;\n    row.anCells = cells;\n\n    _addClass(nTr, trClass);\n    /* Use a private property on the node to allow reserve mapping from the node\n     * to the aoData array for fast look up\n     */\n\n\n    nTr._DT_RowIndex = iRow;\n    /* Special parameters can be given by the data source to be used on the row */\n\n    _fnRowAttributes(oSettings, row);\n    /* Process each column */\n\n\n    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n      oCol = oSettings.aoColumns[i];\n      create = nTrIn && anTds[i] ? false : true;\n      nTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n\n      if (!nTd) {\n        _fnLog(oSettings, 0, 'Incorrect column count', 18);\n      }\n\n      nTd._DT_CellIndex = {\n        row: iRow,\n        column: i\n      };\n      cells.push(nTd);\n\n      var display = _fnGetRowDisplay(oSettings, iRow); // Need to create the HTML if new, or if a rendering function is defined\n\n\n      if (create || (oCol.mRender || oCol.mData !== i) && (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')) {\n        _fnWriteCell(nTd, display[i]);\n      } // Visibility - add or remove as required\n\n\n      if (oCol.bVisible && create) {\n        nTr.appendChild(nTd);\n      } else if (!oCol.bVisible && !create) {\n        nTd.parentNode.removeChild(nTd);\n      }\n\n      if (oCol.fnCreatedCell) {\n        oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i);\n      }\n    }\n\n    _fnCallbackFire(oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells]);\n  } else {\n    _addClass(row.nTr, trClass);\n  }\n}\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnRowAttributes(settings, row) {\n  var tr = row.nTr;\n  var data = row._aData;\n\n  if (tr) {\n    var id = settings.rowIdFn(data);\n\n    if (id) {\n      tr.id = id;\n    }\n\n    if (data.DT_RowClass) {\n      // Remove any classes added by DT_RowClass before\n      var a = data.DT_RowClass.split(' ');\n      row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;\n      $(tr).removeClass(row.__rowc.join(' ')).addClass(data.DT_RowClass);\n    }\n\n    if (data.DT_RowAttr) {\n      $(tr).attr(data.DT_RowAttr);\n    }\n\n    if (data.DT_RowData) {\n      $(tr).data(data.DT_RowData);\n    }\n  }\n}\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnBuildHead(settings, side) {\n  var classes = settings.oClasses;\n  var columns = settings.aoColumns;\n  var i, ien, row;\n  var target = side === 'header' ? settings.nTHead : settings.nTFoot;\n  var titleProp = side === 'header' ? 'sTitle' : side; // Footer might be defined\n\n  if (!target) {\n    return;\n  } // If no cells yet and we have content for them, then create\n\n\n  if (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n    row = $('tr', target); // Add a row if needed\n\n    if (!row.length) {\n      row = $('<tr/>').appendTo(target);\n    } // Add the number of cells needed to make up to the number of columns\n\n\n    if (row.length === 1) {\n      var cells = $('td, th', row);\n\n      for (i = cells.length, ien = columns.length; i < ien; i++) {\n        $('<th/>').html(columns[i][titleProp] || '').appendTo(row);\n      }\n    }\n  }\n\n  var detected = _fnDetectHeader(settings, target, true);\n\n  if (side === 'header') {\n    settings.aoHeader = detected;\n  } else {\n    settings.aoFooter = detected;\n  } // ARIA role for the rows\n\n\n  $(target).children('tr').attr('role', 'row'); // Every cell needs to be passed through the renderer\n\n  $(target).children('tr').children('th, td').each(function () {\n    _fnRenderer(settings, side)(settings, $(this), classes);\n  });\n}\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array\n */\n\n\nfunction _fnHeaderLayout(settings, source, incColumns) {\n  var row, column, cell;\n  var local = [];\n  var structure = [];\n  var columns = settings.aoColumns;\n  var columnCount = columns.length;\n  var rowspan, colspan;\n\n  if (!source) {\n    return;\n  } // Default is to work on only visible columns\n\n\n  if (!incColumns) {\n    incColumns = _range(columnCount).filter(function (idx) {\n      return columns[idx].bVisible;\n    });\n  } // Make a copy of the master layout array, but with only the columns we want\n\n\n  for (row = 0; row < source.length; row++) {\n    // Remove any columns we haven't selected\n    local[row] = source[row].slice().filter(function (cell, i) {\n      return incColumns.includes(i);\n    }); // Prep the structure array - it needs an element for each row\n\n    structure.push([]);\n  }\n\n  for (row = 0; row < local.length; row++) {\n    for (column = 0; column < local[row].length; column++) {\n      rowspan = 1;\n      colspan = 1; // Check to see if there is already a cell (row/colspan) covering our target\n      // insert point. If there is, then there is nothing to do.\n\n      if (structure[row][column] === undefined) {\n        cell = local[row][column].cell; // Expand for rowspan\n\n        while (local[row + rowspan] !== undefined && local[row][column].cell == local[row + rowspan][column].cell) {\n          structure[row + rowspan][column] = null;\n          rowspan++;\n        } // And for colspan\n\n\n        while (local[row][column + colspan] !== undefined && local[row][column].cell == local[row][column + colspan].cell) {\n          // Which also needs to go over rows\n          for (var k = 0; k < rowspan; k++) {\n            structure[row + k][column + colspan] = null;\n          }\n\n          colspan++;\n        }\n\n        var titleSpan = $('span.dt-column-title', cell);\n        structure[row][column] = {\n          cell: cell,\n          colspan: colspan,\n          rowspan: rowspan,\n          title: titleSpan.length ? titleSpan.html() : $(cell).html()\n        };\n      }\n    }\n  }\n\n  return structure;\n}\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnDrawHead(settings, source) {\n  var layout = _fnHeaderLayout(settings, source);\n\n  var tr, n;\n\n  for (var row = 0; row < source.length; row++) {\n    tr = source[row].row; // All cells are going to be replaced, so empty out the row\n    // Can't use $().empty() as that kills event handlers\n\n    if (tr) {\n      while (n = tr.firstChild) {\n        tr.removeChild(n);\n      }\n    }\n\n    for (var column = 0; column < layout[row].length; column++) {\n      var point = layout[row][column];\n\n      if (point) {\n        $(point.cell).appendTo(tr).attr('rowspan', point.rowspan).attr('colspan', point.colspan);\n      }\n    }\n  }\n}\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnDraw(oSettings, ajaxComplete) {\n  // Allow for state saving and a custom start position\n  _fnStart(oSettings);\n  /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\n\n  var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n\n  if (aPreDraw.indexOf(false) !== -1) {\n    _fnProcessingDisplay(oSettings, false);\n\n    return;\n  }\n\n  var anRows = [];\n  var iRowCount = 0;\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var aiDisplay = oSettings.aiDisplay;\n  var iDisplayStart = oSettings._iDisplayStart;\n  var iDisplayEnd = oSettings.fnDisplayEnd();\n  var columns = oSettings.aoColumns;\n  var body = $(oSettings.nTBody);\n  oSettings.bDrawing = true;\n  /* Server-side processing draw intercept */\n\n  if (!bServerSide) {\n    oSettings.iDraw++;\n  } else if (!oSettings.bDestroying && !ajaxComplete) {\n    // Show loading message for server-side processing\n    if (oSettings.iDraw === 0) {\n      body.empty().append(_emptyRow(oSettings));\n    }\n\n    _fnAjaxUpdate(oSettings);\n\n    return;\n  }\n\n  if (aiDisplay.length !== 0) {\n    var iStart = bServerSide ? 0 : iDisplayStart;\n    var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n    for (var j = iStart; j < iEnd; j++) {\n      var iDataIndex = aiDisplay[j];\n      var aoData = oSettings.aoData[iDataIndex];\n\n      if (aoData.nTr === null) {\n        _fnCreateTr(oSettings, iDataIndex);\n      }\n\n      var nRow = aoData.nTr; // Add various classes as needed\n\n      for (var i = 0; i < columns.length; i++) {\n        var col = columns[i];\n        var td = aoData.anCells[i];\n\n        _addClass(td, _ext.type.className[col.sType]); // auto class\n\n\n        _addClass(td, col.sClass); // column class\n\n\n        _addClass(td, oSettings.oClasses.tbody.cell); // all cells\n\n      } // Row callback functions - might want to manipulate the row\n      // iRowCount and j are not currently documented. Are they at all\n      // useful?\n\n\n      _fnCallbackFire(oSettings, 'aoRowCallback', null, [nRow, aoData._aData, iRowCount, j, iDataIndex]);\n\n      anRows.push(nRow);\n      iRowCount++;\n    }\n  } else {\n    anRows[0] = _emptyRow(oSettings);\n  }\n  /* Header and footer callbacks */\n\n\n  _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n  _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n  body.children().detach();\n  body.append($(anRows)); // Empty table needs a specific class\n\n  $(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n  /* Call all required callback functions for the end of a draw */\n\n  _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings], true);\n  /* Draw is complete, sorting and filtering must be as well */\n\n\n  oSettings.bSorted = false;\n  oSettings.bFiltered = false;\n  oSettings.bDrawing = false;\n}\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnReDraw(settings, holdPosition, recompute) {\n  var features = settings.oFeatures,\n      sort = features.bSort,\n      filter = features.bFilter;\n\n  if (recompute === undefined || recompute === true) {\n    if (sort) {\n      _fnSort(settings);\n    }\n\n    if (filter) {\n      _fnFilterComplete(settings, settings.oPreviousSearch);\n    } else {\n      // No filtering, so we want to just use the display master\n      settings.aiDisplay = settings.aiDisplayMaster.slice();\n    }\n  }\n\n  if (holdPosition !== true) {\n    settings._iDisplayStart = 0;\n  } // Let any modules know about the draw hold position state (used by\n  // scrolling internally)\n\n\n  settings._drawHold = holdPosition;\n\n  _fnDraw(settings);\n\n  settings._drawHold = false;\n}\n/*\n * Table is empty - create a row with an empty message in it\n */\n\n\nfunction _emptyRow(settings) {\n  var oLang = settings.oLanguage;\n  var zero = oLang.sZeroRecords;\n\n  var dataSrc = _fnDataSource(settings);\n\n  if (settings.iDraw < 1 && dataSrc === 'ssp' || settings.iDraw <= 1 && dataSrc === 'ajax') {\n    zero = oLang.sLoadingRecords;\n  } else if (oLang.sEmptyTable && settings.fnRecordsTotal() === 0) {\n    zero = oLang.sEmptyTable;\n  }\n\n  return $('<tr/>').append($('<td />', {\n    'colSpan': _fnVisbleColumns(settings),\n    'class': settings.oClasses.empty.row\n  }).html(zero))[0];\n}\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\n\n\nfunction _layoutArray(settings, layout, side) {\n  var groups = {}; // Combine into like groups (e.g. `top`, `top2`, etc)\n\n  $.each(layout, function (pos, val) {\n    if (val === null) {\n      return;\n    }\n\n    var splitPos = pos.replace(/([A-Z])/g, ' $1').split(' ');\n\n    if (!groups[splitPos[0]]) {\n      groups[splitPos[0]] = {};\n    }\n\n    var align = splitPos.length === 1 ? 'full' : splitPos[1].toLowerCase();\n    var group = groups[splitPos[0]];\n\n    var groupRun = function (contents, innerVal) {\n      // If it is an object, then there can be multiple features contained in it\n      if ($.isPlainObject(innerVal)) {\n        Object.keys(innerVal).map(function (key) {\n          contents.push({\n            feature: key,\n            opts: innerVal[key]\n          });\n        });\n      } else {\n        contents.push(innerVal);\n      }\n    }; // Transform to an object with a contents property\n\n\n    if (!group[align] || !group[align].contents) {\n      group[align] = {\n        contents: []\n      };\n    } // Allow for an array or just a single object\n\n\n    if (Array.isArray(val)) {\n      for (var i = 0; i < val.length; i++) {\n        groupRun(group[align].contents, val[i]);\n      }\n    } else {\n      groupRun(group[align].contents, val);\n    } // And make contents an array\n\n\n    if (!Array.isArray(group[align].contents)) {\n      group[align].contents = [group[align].contents];\n    }\n  });\n  var filtered = Object.keys(groups).map(function (pos) {\n    // Filter to only the side we need\n    if (pos.indexOf(side) !== 0) {\n      return null;\n    }\n\n    return {\n      name: pos,\n      val: groups[pos]\n    };\n  }).filter(function (item) {\n    return item !== null;\n  }); // Order by item identifier\n\n  filtered.sort(function (a, b) {\n    var order1 = a.name.replace(/[^0-9]/g, '') * 1;\n    var order2 = b.name.replace(/[^0-9]/g, '') * 1;\n    return order2 - order1;\n  });\n\n  if (side === 'bottom') {\n    filtered.reverse();\n  } // Split into rows\n\n\n  var rows = [];\n\n  for (var i = 0, ien = filtered.length; i < ien; i++) {\n    if (filtered[i].val.full) {\n      rows.push({\n        full: filtered[i].val.full\n      });\n\n      _layoutResolve(settings, rows[rows.length - 1]);\n\n      delete filtered[i].val.full;\n    }\n\n    if (Object.keys(filtered[i].val).length) {\n      rows.push(filtered[i].val);\n\n      _layoutResolve(settings, rows[rows.length - 1]);\n    }\n  }\n\n  return rows;\n}\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\n\n\nfunction _layoutResolve(settings, row) {\n  var getFeature = function (feature, opts) {\n    if (!_ext.features[feature]) {\n      _fnLog(settings, 0, 'Unknown feature: ' + feature);\n    }\n\n    return _ext.features[feature].apply(this, [settings, opts]);\n  };\n\n  var resolve = function (item) {\n    var line = row[item].contents;\n\n    for (var i = 0, ien = line.length; i < ien; i++) {\n      if (!line[i]) {\n        continue;\n      } else if (typeof line[i] === 'string') {\n        line[i] = getFeature(line[i], null);\n      } else if ($.isPlainObject(line[i])) {\n        // If it's an object, it just has feature and opts properties from\n        // the transform in _layoutArray\n        line[i] = getFeature(line[i].feature, line[i].opts);\n      } else if (typeof line[i].node === 'function') {\n        line[i] = line[i].node(settings);\n      } else if (typeof line[i] === 'function') {\n        var inst = line[i](settings);\n        line[i] = typeof inst.node === 'function' ? inst.node() : inst;\n      }\n    }\n  };\n\n  $.each(row, function (key) {\n    resolve(key);\n  });\n}\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAddOptionsHtml(settings) {\n  var classes = settings.oClasses;\n  var table = $(settings.nTable); // Wrapper div around everything DataTables controls\n\n  var insert = $('<div/>').attr({\n    id: settings.sTableId + '_wrapper',\n    'class': classes.container\n  }).insertBefore(table);\n  settings.nTableWrapper = insert[0];\n\n  var top = _layoutArray(settings, settings.layout, 'top');\n\n  var bottom = _layoutArray(settings, settings.layout, 'bottom');\n\n  var renderer = _fnRenderer(settings, 'layout');\n\n  if (settings.sDom) {\n    // Legacy\n    _fnLayoutDom(settings, settings.sDom, insert);\n  } else {\n    // Everything above - the renderer will actually insert the contents into the document\n    top.forEach(function (item) {\n      renderer(settings, insert, item);\n    }); // The table - always the center of attention\n\n    renderer(settings, insert, {\n      full: {\n        table: true,\n        contents: [_fnFeatureHtmlTable(settings)]\n      }\n    }); // Everything below\n\n    bottom.forEach(function (item) {\n      renderer(settings, insert, item);\n    });\n  } // Processing floats on top, so it isn't an inserted feature\n\n\n  _processingHtml(settings);\n}\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\n\n\nfunction _fnLayoutDom(settings, dom, insert) {\n  var parts = dom.match(/(\".*?\")|('.*?')|./g);\n  var featureNode, option, newNode, next, attr;\n\n  for (var i = 0; i < parts.length; i++) {\n    featureNode = null;\n    option = parts[i];\n\n    if (option == '<') {\n      // New container div\n      newNode = $('<div/>'); // Check to see if we should append an id and/or a class name to the container\n\n      next = parts[i + 1];\n\n      if (next[0] == \"'\" || next[0] == '\"') {\n        attr = next.replace(/['\"]/g, '');\n        var id = '',\n            className;\n        /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n         * breaks the string into parts and applies them as needed\n         */\n\n        if (attr.indexOf('.') != -1) {\n          var split = attr.split('.');\n          id = split[0];\n          className = split[1];\n        } else if (attr[0] == \"#\") {\n          id = attr;\n        } else {\n          className = attr;\n        }\n\n        newNode.attr('id', id.substring(1)).addClass(className);\n        i++; // Move along the position array\n      }\n\n      insert.append(newNode);\n      insert = newNode;\n    } else if (option == '>') {\n      // End container div\n      insert = insert.parent();\n    } else if (option == 't') {\n      // Table\n      featureNode = _fnFeatureHtmlTable(settings);\n    } else {\n      DataTable.ext.feature.forEach(function (feature) {\n        if (option == feature.cFeature) {\n          featureNode = feature.fnInit(settings);\n        }\n      });\n    } // Add to the display\n\n\n    if (featureNode) {\n      insert.append(featureNode);\n    }\n  }\n}\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnDetectHeader(settings, thead, write) {\n  var columns = settings.aoColumns;\n  var rows = $(thead).children('tr');\n  var row, cell;\n  var i, k, l, iLen, shifted, column, colspan, rowspan;\n  var isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n  var layout = [];\n  var unique;\n\n  var shift = function (a, i, j) {\n    var k = a[i];\n\n    while (k[j]) {\n      j++;\n    }\n\n    return j;\n  }; // We know how many rows there are in the layout - so prep it\n\n\n  for (i = 0, iLen = rows.length; i < iLen; i++) {\n    layout.push([]);\n  }\n\n  for (i = 0, iLen = rows.length; i < iLen; i++) {\n    row = rows[i];\n    column = 0; // For every cell in the row..\n\n    cell = row.firstChild;\n\n    while (cell) {\n      if (cell.nodeName.toUpperCase() == 'TD' || cell.nodeName.toUpperCase() == 'TH') {\n        var cols = []; // Get the col and rowspan attributes from the DOM and sanitise them\n\n        colspan = cell.getAttribute('colspan') * 1;\n        rowspan = cell.getAttribute('rowspan') * 1;\n        colspan = !colspan || colspan === 0 || colspan === 1 ? 1 : colspan;\n        rowspan = !rowspan || rowspan === 0 || rowspan === 1 ? 1 : rowspan; // There might be colspan cells already in this row, so shift our target\n        // accordingly\n\n        shifted = shift(layout, i, column); // Cache calculation for unique columns\n\n        unique = colspan === 1 ? true : false; // Perform header setup\n\n        if (write) {\n          if (unique) {\n            // Allow column options to be set from HTML attributes\n            _fnColumnOptions(settings, shifted, $(cell).data()); // Get the width for the column. This can be defined from the\n            // width attribute, style attribute or `columns.width` option\n\n\n            var columnDef = columns[shifted];\n            var width = cell.getAttribute('width') || null;\n            var t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n\n            if (t) {\n              width = t[1];\n            }\n\n            columnDef.sWidthOrig = columnDef.sWidth || width;\n\n            if (isHeader) {\n              // Column title handling - can be user set, or read from the DOM\n              // This happens before the render, so the original is still in place\n              if (columnDef.sTitle !== null && !columnDef.autoTitle) {\n                cell.innerHTML = columnDef.sTitle;\n              }\n\n              if (!columnDef.sTitle && unique) {\n                columnDef.sTitle = cell.innerHTML.replace(/<.*?>/g, \"\");\n                columnDef.autoTitle = true;\n              }\n            } else {\n              // Footer specific operations\n              if (columnDef.footer) {\n                cell.innerHTML = columnDef.footer;\n              }\n            } // Fall back to the aria-label attribute on the table header if no ariaTitle is\n            // provided.\n\n\n            if (!columnDef.ariaTitle) {\n              columnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\n            } // Column specific class names\n\n\n            if (columnDef.className) {\n              $(cell).addClass(columnDef.className);\n            }\n          } // Wrap the column title so we can write to it in future\n\n\n          if ($('span.dt-column-title', cell).length === 0) {\n            $('<span>').addClass('dt-column-title').append(cell.childNodes).appendTo(cell);\n          }\n\n          if (isHeader && $('span.dt-column-order', cell).length === 0) {\n            $('<span>').addClass('dt-column-order').appendTo(cell);\n          }\n        } // If there is col / rowspan, copy the information into the layout grid\n\n\n        for (l = 0; l < colspan; l++) {\n          for (k = 0; k < rowspan; k++) {\n            layout[i + k][shifted + l] = {\n              cell: cell,\n              unique: unique\n            };\n            layout[i + k].row = row;\n          }\n\n          cols.push(shifted + l);\n        } // Assign an attribute so spanning cells can still be identified\n        // as belonging to a column\n\n\n        cell.setAttribute('data-dt-column', _unique(cols).join(','));\n      }\n\n      cell = cell.nextSibling;\n    }\n  }\n\n  return layout;\n}\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\n\n\nfunction _fnStart(oSettings) {\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var iInitDisplayStart = oSettings.iInitDisplayStart; // Check and see if we have an initial draw position from state saving\n\n  if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n    oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;\n    oSettings.iInitDisplayStart = -1;\n  }\n}\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\n\n\nfunction _fnBuildAjax(oSettings, data, fn) {\n  var ajaxData;\n  var ajax = oSettings.ajax;\n  var instance = oSettings.oInstance;\n\n  var callback = function (json) {\n    var status = oSettings.jqXHR ? oSettings.jqXHR.status : null;\n\n    if (json === null || typeof status === 'number' && status == 204) {\n      json = {};\n\n      _fnAjaxDataSrc(oSettings, json, []);\n    }\n\n    var error = json.error || json.sError;\n\n    if (error) {\n      _fnLog(oSettings, 0, error);\n    }\n\n    oSettings.json = json;\n\n    _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true);\n\n    fn(json);\n  };\n\n  if ($.isPlainObject(ajax) && ajax.data) {\n    ajaxData = ajax.data;\n    var newData = typeof ajaxData === 'function' ? ajaxData(data, oSettings) : // fn can manipulate data or return\n    ajaxData; // an object object or array to merge\n    // If the function returned something, use that alone\n\n    data = typeof ajaxData === 'function' && newData ? newData : $.extend(true, data, newData); // Remove the data property as we've resolved it already and don't want\n    // jQuery to do it again (it is restored at the end of the function)\n\n    delete ajax.data;\n  }\n\n  var baseAjax = {\n    \"url\": typeof ajax === 'string' ? ajax : '',\n    \"data\": data,\n    \"success\": callback,\n    \"dataType\": \"json\",\n    \"cache\": false,\n    \"type\": oSettings.sServerMethod,\n    \"error\": function (xhr, error) {\n      var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true);\n\n      if (ret.indexOf(true) === -1) {\n        if (error == \"parsererror\") {\n          _fnLog(oSettings, 0, 'Invalid JSON response', 1);\n        } else if (xhr.readyState === 4) {\n          _fnLog(oSettings, 0, 'Ajax error', 7);\n        }\n      }\n\n      _fnProcessingDisplay(oSettings, false);\n    }\n  }; // If `ajax` option is an object, extend and override our default base\n\n  if ($.isPlainObject(ajax)) {\n    $.extend(baseAjax, ajax);\n  } // Store the data submitted for the API\n\n\n  oSettings.oAjaxData = data; // Allow plug-ins and external processes to modify the data\n\n  _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data, baseAjax], true);\n\n  if (typeof ajax === 'function') {\n    // Is a function - let the caller define what needs to be done\n    oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n  } else if (ajax.url === '') {\n    // No url, so don't load any data. Just apply an empty data array\n    // to the object for the callback.\n    var empty = {};\n    DataTable.util.set(ajax.dataSrc)(empty, []);\n    callback(empty);\n  } else {\n    // Object to extend the base settings\n    oSettings.jqXHR = $.ajax(baseAjax); // Restore for next time around\n\n    if (ajaxData) {\n      ajax.data = ajaxData;\n    }\n  }\n}\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAjaxUpdate(settings) {\n  settings.iDraw++;\n\n  _fnProcessingDisplay(settings, true);\n\n  _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n    _fnAjaxUpdateDraw(settings, json);\n  });\n}\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAjaxParameters(settings) {\n  var columns = settings.aoColumns,\n      features = settings.oFeatures,\n      preSearch = settings.oPreviousSearch,\n      preColSearch = settings.aoPreSearchCols,\n      colData = function (idx, prop) {\n    return typeof columns[idx][prop] === 'function' ? 'function' : columns[idx][prop];\n  };\n\n  return {\n    draw: settings.iDraw,\n    columns: columns.map(function (column, i) {\n      return {\n        data: colData(i, 'mData'),\n        name: column.sName,\n        searchable: column.bSearchable,\n        orderable: column.bSortable,\n        search: {\n          value: preColSearch[i].search,\n          regex: preColSearch[i].regex,\n          fixed: Object.keys(column.searchFixed).map(function (name) {\n            return {\n              name: name,\n              term: column.searchFixed[name].toString()\n            };\n          })\n        }\n      };\n    }),\n    order: _fnSortFlatten(settings).map(function (val) {\n      return {\n        column: val.col,\n        dir: val.dir,\n        name: colData(val.col, 'sName')\n      };\n    }),\n    start: settings._iDisplayStart,\n    length: features.bPaginate ? settings._iDisplayLength : -1,\n    search: {\n      value: preSearch.search,\n      regex: preSearch.regex,\n      fixed: Object.keys(settings.searchFixed).map(function (name) {\n        return {\n          name: name,\n          term: settings.searchFixed[name].toString()\n        };\n      })\n    }\n  };\n}\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnAjaxUpdateDraw(settings, json) {\n  var data = _fnAjaxDataSrc(settings, json);\n\n  var draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n\n  var recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n\n  var recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n\n  if (draw !== undefined) {\n    // Protect against out of sequence returns\n    if (draw * 1 < settings.iDraw) {\n      return;\n    }\n\n    settings.iDraw = draw * 1;\n  } // No data in returned object, so rather than an array, we show an empty table\n\n\n  if (!data) {\n    data = [];\n  }\n\n  _fnClearTable(settings);\n\n  settings._iRecordsTotal = parseInt(recordsTotal, 10);\n  settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n  for (var i = 0, ien = data.length; i < ien; i++) {\n    _fnAddData(settings, data[i]);\n  }\n\n  settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n  _fnDraw(settings, true);\n\n  _fnInitComplete(settings);\n\n  _fnProcessingDisplay(settings, false);\n}\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\n\n\nfunction _fnAjaxDataSrc(settings, json, write) {\n  var dataProp = 'data';\n\n  if ($.isPlainObject(settings.ajax) && settings.ajax.dataSrc !== undefined) {\n    // Could in inside a `dataSrc` object, or not!\n    var dataSrc = settings.ajax.dataSrc; // string, function and object are valid types\n\n    if (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n      dataProp = dataSrc;\n    } else if (dataSrc.data !== undefined) {\n      dataProp = dataSrc.data;\n    }\n  }\n\n  if (!write) {\n    if (dataProp === 'data') {\n      // If the default, then we still want to support the old style, and safely ignore\n      // it if possible\n      return json.aaData || json[dataProp];\n    }\n\n    return dataProp !== \"\" ? _fnGetObjectDataFn(dataProp)(json) : json;\n  } // set\n\n\n  _fnSetObjectDataFn(dataProp)(json, write);\n}\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\n\n\nfunction _fnAjaxDataSrcParam(settings, param, json) {\n  var dataSrc = $.isPlainObject(settings.ajax) ? settings.ajax.dataSrc : null;\n\n  if (dataSrc && dataSrc[param]) {\n    // Get from custom location\n    return _fnGetObjectDataFn(dataSrc[param])(json);\n  } // else - Default behaviour\n\n\n  var old = ''; // Legacy support\n\n  if (param === 'draw') {\n    old = 'sEcho';\n  } else if (param === 'recordsTotal') {\n    old = 'iTotalRecords';\n  } else if (param === 'recordsFiltered') {\n    old = 'iTotalDisplayRecords';\n  }\n\n  return json[old] !== undefined ? json[old] : json[param];\n}\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFilterComplete(settings, input) {\n  var columnsSearch = settings.aoPreSearchCols; // Resolve any column types that are unknown due to addition or invalidation\n  // @todo As per sort - can this be moved into an event handler?\n\n  _fnColumnTypes(settings); // In server-side processing all filtering is done by the server, so no point hanging around here\n\n\n  if (_fnDataSource(settings) != 'ssp') {\n    // Check if any of the rows were invalidated\n    _fnFilterData(settings); // Start from the full data set\n\n\n    settings.aiDisplay = settings.aiDisplayMaster.slice(); // Global filter first\n\n    _fnFilter(settings.aiDisplay, settings, input.search, input);\n\n    $.each(settings.searchFixed, function (name, term) {\n      _fnFilter(settings.aiDisplay, settings, term, {});\n    }); // Then individual column filters\n\n    for (var i = 0; i < columnsSearch.length; i++) {\n      var col = columnsSearch[i];\n\n      _fnFilter(settings.aiDisplay, settings, col.search, col, i);\n\n      $.each(settings.aoColumns[i].searchFixed, function (name, term) {\n        _fnFilter(settings.aiDisplay, settings, term, {}, i);\n      });\n    } // And finally global filtering\n\n\n    _fnFilterCustom(settings);\n  } // Tell the draw function we have been filtering\n\n\n  settings.bFiltered = true;\n\n  _fnCallbackFire(settings, null, 'search', [settings]);\n}\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFilterCustom(settings) {\n  var filters = DataTable.ext.search;\n  var displayRows = settings.aiDisplay;\n  var row, rowIdx;\n\n  for (var i = 0, ien = filters.length; i < ien; i++) {\n    var rows = []; // Loop over each row and see if it should be included\n\n    for (var j = 0, jen = displayRows.length; j < jen; j++) {\n      rowIdx = displayRows[j];\n      row = settings.aoData[rowIdx];\n\n      if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n        rows.push(rowIdx);\n      }\n    } // So the array reference doesn't break set the results into the\n    // existing array\n\n\n    displayRows.length = 0;\n    displayRows.push.apply(displayRows, rows);\n  }\n}\n/**\n * Filter the data table based on user input and draw the table\n */\n\n\nfunction _fnFilter(searchRows, settings, input, options, column) {\n  if (input === '') {\n    return;\n  }\n\n  var i = 0; // Search term can be a function, regex or string - if a string we apply our\n  // smart filtering regex (assuming the options require that)\n\n  var searchFunc = typeof input === 'function' ? input : null;\n  var rpSearch = input instanceof RegExp ? input : searchFunc ? null : _fnFilterCreateSearch(input, options); // Then for each row, does the test pass. If not, lop the row from the array\n\n  while (i < searchRows.length) {\n    var row = settings.aoData[searchRows[i]];\n    var data = column === undefined ? row._sFilterRow : row._aFilterData[column];\n\n    if (searchFunc && !searchFunc(data, row._aData, searchRows[i], column) || rpSearch && !rpSearch.test(data)) {\n      searchRows.splice(i, 1);\n      i--;\n    }\n\n    i++;\n  }\n}\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFilterCreateSearch(search, inOpts) {\n  var not = [];\n  var options = $.extend({}, {\n    boundary: false,\n    caseInsensitive: true,\n    exact: false,\n    regex: false,\n    smart: true\n  }, inOpts);\n\n  if (typeof search !== 'string') {\n    search = search.toString();\n  } // Remove diacritics if normalize is set up to do so\n\n\n  search = _normalize(search);\n\n  if (options.exact) {\n    return new RegExp('^' + _fnEscapeRegex(search) + '$', options.caseInsensitive ? 'i' : '');\n  }\n\n  search = options.regex ? search : _fnEscapeRegex(search);\n\n  if (options.smart) {\n    /* For smart filtering we want to allow the search to work regardless of\n     * word order. We also want double quoted text to be preserved, so word\n     * order is important - a la google. And a negative look around for\n     * finding rows which don't contain a given string.\n     * \n     * So this is the sort of thing we want to generate:\n     * \n     * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n     */\n    var parts = search.match(/!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g) || [''];\n    var a = parts.map(function (word) {\n      var negative = false;\n      var m; // Determine if it is a \"does not include\"\n\n      if (word.charAt(0) === '!') {\n        negative = true;\n        word = word.substring(1);\n      } // Strip the quotes from around matched phrases\n\n\n      if (word.charAt(0) === '\"') {\n        m = word.match(/^\"(.*)\"$/);\n        word = m ? m[1] : word;\n      } else if (word.charAt(0) === '\\u201C') {\n        // Smart quote match (iPhone users)\n        m = word.match(/^\\u201C(.*)\\u201D$/);\n        word = m ? m[1] : word;\n      } // For our \"not\" case, we need to modify the string that is\n      // allowed to match at the end of the expression.\n\n\n      if (negative) {\n        if (word.length > 1) {\n          not.push('(?!' + word + ')');\n        }\n\n        word = '';\n      }\n\n      return word.replace('\"', '');\n    });\n    var match = not.length ? not.join('') : '';\n    var boundary = options.boundary ? '\\\\b' : '';\n    search = '^(?=.*?' + boundary + a.join(')(?=.*?' + boundary) + ')(' + match + '.)*$';\n  }\n\n  return new RegExp(search, options.caseInsensitive ? 'i' : '');\n}\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\n\n\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\nvar __filter_div = $('<div>')[0];\n\nvar __filter_div_textContent = __filter_div.textContent !== undefined; // Update the filtering data for each row if needed (by invalidation or first run)\n\n\nfunction _fnFilterData(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var column;\n  var j, jen, filterData, cellData, row;\n  var wasInvalidated = false;\n\n  for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n    if (!data[rowIdx]) {\n      continue;\n    }\n\n    row = data[rowIdx];\n\n    if (!row._aFilterData) {\n      filterData = [];\n\n      for (j = 0, jen = columns.length; j < jen; j++) {\n        column = columns[j];\n\n        if (column.bSearchable) {\n          cellData = _fnGetCellData(settings, rowIdx, j, 'filter'); // Search in DataTables is string based\n\n          if (cellData === null) {\n            cellData = '';\n          }\n\n          if (typeof cellData !== 'string' && cellData.toString) {\n            cellData = cellData.toString();\n          }\n        } else {\n          cellData = '';\n        } // If it looks like there is an HTML entity in the string,\n        // attempt to decode it so sorting works as expected. Note that\n        // we could use a single line of jQuery to do this, but the DOM\n        // method used here is much faster https://jsperf.com/html-decode\n\n\n        if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n          __filter_div.innerHTML = cellData;\n          cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText;\n        }\n\n        if (cellData.replace) {\n          cellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n        }\n\n        filterData.push(cellData);\n      }\n\n      row._aFilterData = filterData;\n      row._sFilterRow = filterData.join('  ');\n      wasInvalidated = true;\n    }\n  }\n\n  return wasInvalidated;\n}\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnInitialise(settings) {\n  var i,\n      iAjaxStart = settings.iInitDisplayStart;\n  /* Ensure that the table data is fully initialised */\n\n  if (!settings.bInitialised) {\n    setTimeout(function () {\n      _fnInitialise(settings);\n    }, 200);\n    return;\n  }\n  /* Build and draw the header / footer for the table */\n\n\n  _fnBuildHead(settings, 'header');\n\n  _fnBuildHead(settings, 'footer');\n\n  _fnDrawHead(settings, settings.aoHeader);\n\n  _fnDrawHead(settings, settings.aoFooter); // Enable features\n\n\n  _fnAddOptionsHtml(settings);\n\n  _fnSortInit(settings);\n\n  _colGroup(settings);\n  /* Okay to show that something is going on now */\n\n\n  _fnProcessingDisplay(settings, true);\n\n  _fnCallbackFire(settings, null, 'preInit', [settings], true); // If there is default sorting required - let's do it. The sort function\n  // will do the drawing for us. Otherwise we draw the table regardless of the\n  // Ajax source - this allows the table to look initialised for Ajax sourcing\n  // data (show 'loading' message possibly)\n\n\n  _fnReDraw(settings);\n\n  var dataSrc = _fnDataSource(settings); // Server-side processing init complete is done by _fnAjaxUpdateDraw\n\n\n  if (dataSrc != 'ssp') {\n    // if there is an ajax source load the data\n    if (dataSrc == 'ajax') {\n      _fnBuildAjax(settings, {}, function (json) {\n        var aData = _fnAjaxDataSrc(settings, json); // Got the data - add it to the table\n\n\n        for (i = 0; i < aData.length; i++) {\n          _fnAddData(settings, aData[i]);\n        } // Reset the init display for cookie saving. We've already done\n        // a filter, and therefore cleared it before. So we need to make\n        // it appear 'fresh'\n\n\n        settings.iInitDisplayStart = iAjaxStart;\n\n        _fnReDraw(settings);\n\n        _fnProcessingDisplay(settings, false);\n\n        _fnInitComplete(settings);\n      }, settings);\n    } else {\n      _fnInitComplete(settings);\n\n      _fnProcessingDisplay(settings, false);\n    }\n  }\n}\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnInitComplete(settings) {\n  if (settings._bInitComplete) {\n    return;\n  }\n\n  var args = [settings, settings.json];\n  settings._bInitComplete = true; // Table is fully set up and we have data, so calculate the\n  // column widths\n\n  _fnAdjustColumnSizing(settings);\n\n  _fnCallbackFire(settings, null, 'plugin-init', args, true);\n\n  _fnCallbackFire(settings, 'aoInitComplete', 'init', args, true);\n}\n\nfunction _fnLengthChange(settings, val) {\n  var len = parseInt(val, 10);\n  settings._iDisplayLength = len;\n\n  _fnLengthOverflow(settings); // Fire length change event\n\n\n  _fnCallbackFire(settings, null, 'length', [settings, len]);\n}\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnPageChange(settings, action, redraw) {\n  var start = settings._iDisplayStart,\n      len = settings._iDisplayLength,\n      records = settings.fnRecordsDisplay();\n\n  if (records === 0 || len === -1) {\n    start = 0;\n  } else if (typeof action === \"number\") {\n    start = action * len;\n\n    if (start > records) {\n      start = 0;\n    }\n  } else if (action == \"first\") {\n    start = 0;\n  } else if (action == \"previous\") {\n    start = len >= 0 ? start - len : 0;\n\n    if (start < 0) {\n      start = 0;\n    }\n  } else if (action == \"next\") {\n    if (start + len < records) {\n      start += len;\n    }\n  } else if (action == \"last\") {\n    start = Math.floor((records - 1) / len) * len;\n  } else if (action === 'ellipsis') {\n    return;\n  } else {\n    _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n  }\n\n  var changed = settings._iDisplayStart !== start;\n  settings._iDisplayStart = start;\n\n  _fnCallbackFire(settings, null, changed ? 'page' : 'page-nc', [settings]);\n\n  if (changed && redraw) {\n    _fnDraw(settings);\n  }\n\n  return changed;\n}\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\n\n\nfunction _processingHtml(settings) {\n  var table = settings.nTable;\n\n  if (settings.oFeatures.bProcessing) {\n    var n = $('<div/>', {\n      'id': settings.sTableId + '_processing',\n      'class': settings.oClasses.processing.container,\n      'role': 'status'\n    }).html(settings.oLanguage.sProcessing).append('<div><div></div><div></div><div></div><div></div></div>').insertBefore(table);\n    $(table).on('processing.dt.DT', function (e, s, show) {\n      n.css('display', show ? 'block' : 'none');\n    });\n  }\n}\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\n\n\nfunction _fnProcessingDisplay(settings, show) {\n  _fnCallbackFire(settings, null, 'processing', [settings, show]);\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnFeatureHtmlTable(settings) {\n  var table = $(settings.nTable); // Scrolling from here on in\n\n  var scroll = settings.oScroll;\n\n  if (scroll.sX === '' && scroll.sY === '') {\n    return settings.nTable;\n  }\n\n  var scrollX = scroll.sX;\n  var scrollY = scroll.sY;\n  var classes = settings.oClasses.scrolling;\n  var caption = settings.captionNode;\n  var captionSide = caption ? caption._captionSide : null;\n  var headerClone = $(table[0].cloneNode(false));\n  var footerClone = $(table[0].cloneNode(false));\n  var footer = table.children('tfoot');\n  var _div = '<div/>';\n\n  var size = function (s) {\n    return !s ? null : _fnStringToCss(s);\n  };\n\n  if (!footer.length) {\n    footer = null;\n  }\n  /*\n   * The HTML structure that we want to generate in this function is:\n   *  div - scroller\n   *    div - scroll head\n   *      div - scroll head inner\n   *        table - scroll head table\n   *          thead - thead\n   *    div - scroll body\n   *      table - table (master table)\n   *        thead - thead clone for sizing\n   *        tbody - tbody\n   *    div - scroll foot\n   *      div - scroll foot inner\n   *        table - scroll foot table\n   *          tfoot - tfoot\n   */\n\n\n  var scroller = $(_div, {\n    'class': classes.container\n  }).append($(_div, {\n    'class': classes.header.self\n  }).css({\n    overflow: 'hidden',\n    position: 'relative',\n    border: 0,\n    width: scrollX ? size(scrollX) : '100%'\n  }).append($(_div, {\n    'class': classes.header.inner\n  }).css({\n    'box-sizing': 'content-box',\n    width: scroll.sXInner || '100%'\n  }).append(headerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'top' ? caption : null).append(table.children('thead'))))).append($(_div, {\n    'class': classes.body\n  }).css({\n    position: 'relative',\n    overflow: 'auto',\n    width: size(scrollX)\n  }).append(table));\n\n  if (footer) {\n    scroller.append($(_div, {\n      'class': classes.footer.self\n    }).css({\n      overflow: 'hidden',\n      border: 0,\n      width: scrollX ? size(scrollX) : '100%'\n    }).append($(_div, {\n      'class': classes.footer.inner\n    }).append(footerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'bottom' ? caption : null).append(table.children('tfoot')))));\n  }\n\n  var children = scroller.children();\n  var scrollHead = children[0];\n  var scrollBody = children[1];\n  var scrollFoot = footer ? children[2] : null; // When the body is scrolled, then we also want to scroll the headers\n\n  $(scrollBody).on('scroll.DT', function () {\n    var scrollLeft = this.scrollLeft;\n    scrollHead.scrollLeft = scrollLeft;\n\n    if (footer) {\n      scrollFoot.scrollLeft = scrollLeft;\n    }\n  }); // When focus is put on the header cells, we might need to scroll the body\n\n  $('th, td', scrollHead).on('focus', function () {\n    var scrollLeft = scrollHead.scrollLeft;\n    scrollBody.scrollLeft = scrollLeft;\n\n    if (footer) {\n      scrollBody.scrollLeft = scrollLeft;\n    }\n  });\n  $(scrollBody).css('max-height', scrollY);\n\n  if (!scroll.bCollapse) {\n    $(scrollBody).css('height', scrollY);\n  }\n\n  settings.nScrollHead = scrollHead;\n  settings.nScrollBody = scrollBody;\n  settings.nScrollFoot = scrollFoot; // On redraw - align columns\n\n  settings.aoDrawCallback.push(_fnScrollDraw);\n  return scroller[0];\n}\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnScrollDraw(settings) {\n  // Given that this is such a monster function, a lot of variables are use\n  // to try and keep the minimised size as small as possible\n  var scroll = settings.oScroll,\n      barWidth = scroll.iBarWidth,\n      divHeader = $(settings.nScrollHead),\n      divHeaderInner = divHeader.children('div'),\n      divHeaderTable = divHeaderInner.children('table'),\n      divBodyEl = settings.nScrollBody,\n      divBody = $(divBodyEl),\n      divFooter = $(settings.nScrollFoot),\n      divFooterInner = divFooter.children('div'),\n      divFooterTable = divFooterInner.children('table'),\n      header = $(settings.nTHead),\n      table = $(settings.nTable),\n      footer = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n      browser = settings.oBrowser,\n      headerCopy,\n      footerCopy; // If the scrollbar visibility has changed from the last draw, we need to\n  // adjust the column sizes as the table width will have changed to account\n  // for the scrollbar\n\n  var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\n  if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n    settings.scrollBarVis = scrollBarVis;\n\n    _fnAdjustColumnSizing(settings);\n\n    return; // adjust column sizing will call this function again\n  } else {\n    settings.scrollBarVis = scrollBarVis;\n  } // 1. Re-create the table inside the scrolling div\n  // Remove the old minimised thead and tfoot elements in the inner table\n\n\n  table.children('thead, tfoot').remove(); // Clone the current header and footer elements and then place it into the inner table\n\n  headerCopy = header.clone().prependTo(table);\n  headerCopy.find('th, td').removeAttr('tabindex');\n  headerCopy.find('[id]').removeAttr('id');\n\n  if (footer) {\n    footerCopy = footer.clone().prependTo(table);\n    footerCopy.find('[id]').removeAttr('id');\n  } // 2. Correct colgroup > col values if needed\n  // It is possible that the cell sizes are smaller than the content, so we need to\n  // correct colgroup>col for such cases. This can happen if the auto width detection\n  // uses a cell which has a longer string, but isn't the widest! For example \n  // \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n  // \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n\n\n  if (settings.aiDisplay.length) {\n    // Get the column sizes from the first row in the table\n    var colSizes = table.find('tbody tr').eq(0).find('th, td').map(function () {\n      return $(this).outerWidth();\n    }); // Check against what the colgroup > col is set to and correct if needed\n\n    $('col', settings.colgroup).each(function (i) {\n      var colWidth = this.style.width.replace('px', '');\n\n      if (colWidth !== colSizes[i]) {\n        this.style.width = colSizes[i] + 'px';\n      }\n    });\n  } // 3. Copy the colgroup over to the header and footer\n\n\n  divHeaderTable.find('colgroup').remove();\n  divHeaderTable.append(settings.colgroup.clone());\n\n  if (footer) {\n    divFooterTable.find('colgroup').remove();\n    divFooterTable.append(settings.colgroup.clone());\n  } // \"Hide\" the header and footer that we used for the sizing. We need to keep\n  // the content of the cell so that the width applied to the header and body\n  // both match, but we want to hide it completely.\n\n\n  $('th, td', headerCopy).each(function () {\n    $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n  });\n\n  if (footer) {\n    $('th, td', footerCopy).each(function () {\n      $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n    });\n  } // 4. Clean up\n  // Figure out if there are scrollbar present - if so then we need a the header and footer to\n  // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\n\n  var isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n  var paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right'); // Set the width's of the header and footer tables\n\n  var outerWidth = table.outerWidth();\n  divHeaderTable.css('width', _fnStringToCss(outerWidth));\n  divHeaderInner.css('width', _fnStringToCss(outerWidth)).css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n\n  if (footer) {\n    divFooterTable.css('width', _fnStringToCss(outerWidth));\n    divFooterInner.css('width', _fnStringToCss(outerWidth)).css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n  } // Correct DOM ordering for colgroup - comes before the thead\n\n\n  table.children('colgroup').prependTo(table); // Adjust the position of the header in case we loose the y-scrollbar\n\n  divBody.trigger('scroll'); // If sorting or filtering has occurred, jump the scrolling back to the top\n  // only if we aren't holding the position\n\n  if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n    divBodyEl.scrollTop = 0;\n  }\n}\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCalculateColumnWidths(settings) {\n  // Not interested in doing column width calculation if auto-width is disabled\n  if (!settings.oFeatures.bAutoWidth) {\n    return;\n  }\n\n  var table = settings.nTable,\n      columns = settings.aoColumns,\n      scroll = settings.oScroll,\n      scrollY = scroll.sY,\n      scrollX = scroll.sX,\n      scrollXInner = scroll.sXInner,\n      visibleColumns = _fnGetColumns(settings, 'bVisible'),\n      tableWidthAttr = table.getAttribute('width'),\n      // from DOM element\n  tableContainer = table.parentNode,\n      i,\n      column,\n      columnIdx;\n\n  var styleWidth = table.style.width;\n\n  if (styleWidth && styleWidth.indexOf('%') !== -1) {\n    tableWidthAttr = styleWidth;\n  } // Let plug-ins know that we are doing a recalc, in case they have changed any of the\n  // visible columns their own way (e.g. Responsive uses display:none).\n\n\n  _fnCallbackFire(settings, null, 'column-calc', {\n    visible: visibleColumns\n  }, false); // Construct a single row, worst case, table with the widest\n  // node in the data, assign any user defined widths, then insert it into\n  // the DOM and allow the browser to do all the hard work of calculating\n  // table widths\n\n\n  var tmpTable = $(table.cloneNode()).css('visibility', 'hidden').removeAttr('id'); // Clean up the table body\n\n  tmpTable.append('<tbody>');\n  var tr = $('<tr/>').appendTo(tmpTable.find('tbody')); // Clone the table header and footer - we can't use the header / footer\n  // from the cloned table, since if scrolling is active, the table's\n  // real header and footer are contained in different table tags\n\n  tmpTable.append($(settings.nTHead).clone()).append($(settings.nTFoot).clone()); // Remove any assigned widths from the footer (from scrolling)\n\n  tmpTable.find('tfoot th, tfoot td').css('width', ''); // Apply custom sizing to the cloned header\n\n  tmpTable.find('thead th, thead td').each(function () {\n    // Get the `width` from the header layout\n    var width = _fnColumnsSumWidth(settings, this, true, false);\n\n    if (width) {\n      this.style.width = width; // For scrollX we need to force the column width otherwise the\n      // browser will collapse it. If this width is smaller than the\n      // width the column requires, then it will have no effect\n\n      if (scrollX) {\n        $(this).append($('<div/>').css({\n          width: width,\n          margin: 0,\n          padding: 0,\n          border: 0,\n          height: 1\n        }));\n      }\n    } else {\n      this.style.width = '';\n    }\n  }); // Find the widest piece of data for each column and put it into the table\n\n  for (i = 0; i < visibleColumns.length; i++) {\n    columnIdx = visibleColumns[i];\n    column = columns[columnIdx];\n\n    var longest = _fnGetMaxLenString(settings, columnIdx);\n\n    var autoClass = _ext.type.className[column.sType];\n    var text = longest + column.sContentPadding;\n    var insert = longest.indexOf('<') === -1 ? document.createTextNode(text) : text;\n    $('<td/>').addClass(autoClass).addClass(column.sClass).append(insert).appendTo(tr);\n  } // Tidy the temporary table - remove name attributes so there aren't\n  // duplicated in the dom (radio elements for example)\n\n\n  $('[name]', tmpTable).removeAttr('name'); // Table has been built, attach to the document so we can work with it.\n  // A holding element is used, positioned at the top of the container\n  // with minimal height, so it has no effect on if the container scrolls\n  // or not. Otherwise it might trigger scrolling when it actually isn't\n  // needed\n\n  var holder = $('<div/>').css(scrollX || scrollY ? {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: 1,\n    right: 0,\n    overflow: 'hidden'\n  } : {}).append(tmpTable).appendTo(tableContainer); // When scrolling (X or Y) we want to set the width of the table as \n  // appropriate. However, when not scrolling leave the table width as it\n  // is. This results in slightly different, but I think correct behaviour\n\n  if (scrollX && scrollXInner) {\n    tmpTable.width(scrollXInner);\n  } else if (scrollX) {\n    tmpTable.css('width', 'auto');\n    tmpTable.removeAttr('width'); // If there is no width attribute or style, then allow the table to\n    // collapse\n\n    if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n      tmpTable.width(tableContainer.clientWidth);\n    }\n  } else if (scrollY) {\n    tmpTable.width(tableContainer.clientWidth);\n  } else if (tableWidthAttr) {\n    tmpTable.width(tableWidthAttr);\n  } // Get the width of each column in the constructed table\n\n\n  var total = 0;\n  var bodyCells = tmpTable.find('tbody tr').eq(0).children();\n\n  for (i = 0; i < visibleColumns.length; i++) {\n    // Use getBounding for sub-pixel accuracy, which we then want to round up!\n    var bounding = bodyCells[i].getBoundingClientRect().width; // Total is tracked to remove any sub-pixel errors as the outerWidth\n    // of the table might not equal the total given here\n\n    total += bounding; // Width for each column to use\n\n    columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding);\n  }\n\n  table.style.width = _fnStringToCss(total); // Finished with the table - ditch it\n\n  holder.remove(); // If there is a width attr, we want to attach an event listener which\n  // allows the table sizing to automatically adjust when the window is\n  // resized. Use the width attr rather than CSS, since we can't know if the\n  // CSS is a relative value or absolute - DOM read is always px.\n\n  if (tableWidthAttr) {\n    table.style.width = _fnStringToCss(tableWidthAttr);\n  }\n\n  if ((tableWidthAttr || scrollX) && !settings._reszEvt) {\n    var bindResize = function () {\n      $(window).on('resize.DT-' + settings.sInstance, DataTable.util.throttle(function () {\n        if (!settings.bDestroying) {\n          _fnAdjustColumnSizing(settings);\n        }\n      }));\n    };\n\n    bindResize();\n    settings._reszEvt = true;\n  }\n}\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnGetMaxLenString(settings, colIdx) {\n  var column = settings.aoColumns[colIdx];\n\n  if (!column.maxLenString) {\n    var s,\n        max = '',\n        maxLen = -1;\n\n    for (var i = 0, ien = settings.aiDisplayMaster.length; i < ien; i++) {\n      var rowIdx = settings.aiDisplayMaster[i];\n\n      var data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n\n      var cellString = data && typeof data === 'object' && data.nodeType ? data.innerHTML : data + ''; // Remove id / name attributes from elements so they\n      // don't interfere with existing elements\n\n      cellString = cellString.replace(/id=\".*?\"/g, '').replace(/name=\".*?\"/g, '');\n      s = _stripHtml(cellString).replace(/&nbsp;/g, ' ');\n\n      if (s.length > maxLen) {\n        // We want the HTML in the string, but the length that\n        // is important is the stripped string\n        max = cellString;\n        maxLen = s.length;\n      }\n    }\n\n    column.maxLenString = max;\n  }\n\n  return column.maxLenString;\n}\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnStringToCss(s) {\n  if (s === null) {\n    return '0px';\n  }\n\n  if (typeof s == 'number') {\n    return s < 0 ? '0px' : s + 'px';\n  } // Check it has a unit character already\n\n\n  return s.match(/\\d$/) ? s + 'px' : s;\n}\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\n\n\nfunction _colGroup(settings) {\n  var cols = settings.aoColumns;\n  settings.colgroup.empty();\n\n  for (i = 0; i < cols.length; i++) {\n    if (cols[i].bVisible) {\n      settings.colgroup.append(cols[i].colEl);\n    }\n  }\n}\n\nfunction _fnSortInit(settings) {\n  var target = settings.nTHead;\n  var headerRows = target.querySelectorAll('tr');\n  var legacyTop = settings.bSortCellsTop;\n  var notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])'; // Legacy support for `orderCellsTop`\n\n  if (legacyTop === true) {\n    target = headerRows[0];\n  } else if (legacyTop === false) {\n    target = headerRows[headerRows.length - 1];\n  }\n\n  _fnSortAttachListener(settings, target, target === settings.nTHead ? 'tr' + notSelector + ' th' + notSelector + ', tr' + notSelector + ' td' + notSelector : 'th' + notSelector + ', td' + notSelector); // Need to resolve the user input array into our internal structure\n\n\n  var order = [];\n\n  _fnSortResolve(settings, order, settings.aaSorting);\n\n  settings.aaSorting = order;\n}\n\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n  _fnBindAction(node, selector, function (e) {\n    var run = false;\n    var columns = column === undefined ? _fnColumnsFromHeader(e.target) : [column];\n\n    if (columns.length) {\n      for (var i = 0, ien = columns.length; i < ien; i++) {\n        var ret = _fnSortAdd(settings, columns[i], i, e.shiftKey);\n\n        if (ret !== false) {\n          run = true;\n        } // If the first entry is no sort, then subsequent\n        // sort columns are ignored\n\n\n        if (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n          break;\n        }\n      }\n\n      if (run) {\n        _fnProcessingDisplay(settings, true); // Allow the processing display to show\n\n\n        setTimeout(function () {\n          _fnSort(settings);\n\n          _fnSortDisplay(settings);\n\n          _fnReDraw(settings, false, false);\n\n          _fnProcessingDisplay(settings, false);\n\n          if (callback) {\n            callback();\n          }\n        }, 0);\n      }\n    }\n  });\n}\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\n\n\nfunction _fnSortDisplay(settings) {\n  var display = settings.aiDisplay;\n  var master = settings.aiDisplayMaster;\n  var masterMap = {};\n  var map = {};\n  var i; // Rather than needing an `indexOf` on master array, we can create a map\n\n  for (i = 0; i < master.length; i++) {\n    masterMap[master[i]] = i;\n  } // And then cache what would be the indexOf fom the display\n\n\n  for (i = 0; i < display.length; i++) {\n    map[display[i]] = masterMap[display[i]];\n  }\n\n  display.sort(function (a, b) {\n    // Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n    return map[a] - map[b];\n  });\n}\n\nfunction _fnSortResolve(settings, nestedSort, sort) {\n  var push = function (a) {\n    if ($.isPlainObject(a)) {\n      if (a.idx !== undefined) {\n        // Index based ordering\n        nestedSort.push([a.idx, a.dir]);\n      } else if (a.name) {\n        // Name based ordering\n        var cols = _pluck(settings.aoColumns, 'sName');\n\n        var idx = cols.indexOf(a.name);\n\n        if (idx !== -1) {\n          nestedSort.push([idx, a.dir]);\n        }\n      }\n    } else {\n      // Plain column index and direction pair\n      nestedSort.push(a);\n    }\n  };\n\n  if ($.isPlainObject(sort)) {\n    // Object\n    push(sort);\n  } else if (sort.length && typeof sort[0] === 'number') {\n    // 1D array\n    push(sort);\n  } else if (sort.length) {\n    // 2D array\n    for (var z = 0; z < sort.length; z++) {\n      push(sort[z]); // Object or array\n    }\n  }\n}\n\nfunction _fnSortFlatten(settings) {\n  var i,\n      k,\n      kLen,\n      aSort = [],\n      extSort = DataTable.ext.type.order,\n      aoColumns = settings.aoColumns,\n      aDataSort,\n      iCol,\n      sType,\n      srcCol,\n      fixed = settings.aaSortingFixed,\n      fixedObj = $.isPlainObject(fixed),\n      nestedSort = [];\n\n  if (!settings.oFeatures.bSort) {\n    return aSort;\n  } // Build the sort array, with pre-fix and post-fix options if they have been\n  // specified\n\n\n  if (Array.isArray(fixed)) {\n    _fnSortResolve(settings, nestedSort, fixed);\n  }\n\n  if (fixedObj && fixed.pre) {\n    _fnSortResolve(settings, nestedSort, fixed.pre);\n  }\n\n  _fnSortResolve(settings, nestedSort, settings.aaSorting);\n\n  if (fixedObj && fixed.post) {\n    _fnSortResolve(settings, nestedSort, fixed.post);\n  }\n\n  for (i = 0; i < nestedSort.length; i++) {\n    srcCol = nestedSort[i][0];\n\n    if (aoColumns[srcCol]) {\n      aDataSort = aoColumns[srcCol].aDataSort;\n\n      for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n        iCol = aDataSort[k];\n        sType = aoColumns[iCol].sType || 'string';\n\n        if (nestedSort[i]._idx === undefined) {\n          nestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n        }\n\n        if (nestedSort[i][1]) {\n          aSort.push({\n            src: srcCol,\n            col: iCol,\n            dir: nestedSort[i][1],\n            index: nestedSort[i]._idx,\n            type: sType,\n            formatter: extSort[sType + \"-pre\"],\n            sorter: extSort[sType + \"-\" + nestedSort[i][1]]\n          });\n        }\n      }\n    }\n  }\n\n  return aSort;\n}\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSort(oSettings, col, dir) {\n  var i,\n      ien,\n      iLen,\n      aiOrig = [],\n      extSort = DataTable.ext.type.order,\n      aoData = oSettings.aoData,\n      sortCol,\n      displayMaster = oSettings.aiDisplayMaster,\n      aSort; // Resolve any column types that are unknown due to addition or invalidation\n  // @todo Can this be moved into a 'data-ready' handler which is called when\n  //   data is going to be used in the table?\n\n  _fnColumnTypes(oSettings); // Allow a specific column to be sorted, which will _not_ alter the display\n  // master\n\n\n  if (col !== undefined) {\n    var srcCol = oSettings.aoColumns[col];\n    aSort = [{\n      src: col,\n      col: col,\n      dir: dir,\n      index: 0,\n      type: srcCol.sType,\n      formatter: extSort[srcCol.sType + \"-pre\"],\n      sorter: extSort[srcCol.sType + \"-\" + dir]\n    }];\n    displayMaster = displayMaster.slice();\n  } else {\n    aSort = _fnSortFlatten(oSettings);\n  }\n\n  for (i = 0, ien = aSort.length; i < ien; i++) {\n    sortCol = aSort[i]; // Load the data needed for the sort, for each cell\n\n    _fnSortData(oSettings, sortCol.col);\n  }\n  /* No sorting required if server-side or no sorting array */\n\n\n  if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n    // Reset the initial positions on each pass so we get a stable sort\n    for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n      aiOrig[i] = i;\n    } // If the first sort is desc, then reverse the array to preserve original\n    // order, just in reverse\n\n\n    if (aSort.length && aSort[0].dir === 'desc') {\n      aiOrig.reverse();\n    }\n    /* Do the sort - here we want multi-column sorting based on a given data source (column)\n     * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n     * follow on it's own, but this is what we want (example two column sorting):\n     *  fnLocalSorting = function(a,b){\n     *    var test;\n     *    test = oSort['string-asc']('data11', 'data12');\n     *      if (test !== 0)\n     *        return test;\n     *    test = oSort['numeric-desc']('data21', 'data22');\n     *    if (test !== 0)\n     *      return test;\n     *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n     *  }\n     * Basically we have a test for each sorting column, if the data in that column is equal,\n     * test the next column. If all columns match, then we use a numeric sort on the row\n     * positions in the original data array to provide a stable sort.\n     */\n\n\n    displayMaster.sort(function (a, b) {\n      var x,\n          y,\n          k,\n          test,\n          sort,\n          len = aSort.length,\n          dataA = aoData[a]._aSortData,\n          dataB = aoData[b]._aSortData;\n\n      for (k = 0; k < len; k++) {\n        sort = aSort[k]; // Data, which may have already been through a `-pre` function\n\n        x = dataA[sort.col];\n        y = dataB[sort.col];\n\n        if (sort.sorter) {\n          // If there is a custom sorter (`-asc` or `-desc`) for this\n          // data type, use it\n          test = sort.sorter(x, y);\n\n          if (test !== 0) {\n            return test;\n          }\n        } else {\n          // Otherwise, use generic sorting\n          test = x < y ? -1 : x > y ? 1 : 0;\n\n          if (test !== 0) {\n            return sort.dir === 'asc' ? test : -test;\n          }\n        }\n      }\n\n      x = aiOrig[a];\n      y = aiOrig[b];\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  } else if (aSort.length === 0) {\n    // Apply index order\n    displayMaster.sort(function (x, y) {\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  }\n\n  if (col === undefined) {\n    // Tell the draw function that we have sorted the data\n    oSettings.bSorted = true;\n\n    _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort]);\n  }\n\n  return displayMaster;\n}\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {int} addIndex Counter\n *  @param {boolean} [shift=false] Shift click add\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSortAdd(settings, colIdx, addIndex, shift) {\n  var col = settings.aoColumns[colIdx];\n  var sorting = settings.aaSorting;\n  var asSorting = col.asSorting;\n  var nextSortIdx;\n\n  var next = function (a, overflow) {\n    var idx = a._idx;\n\n    if (idx === undefined) {\n      idx = asSorting.indexOf(a[1]);\n    }\n\n    return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;\n  };\n\n  if (!col.bSortable) {\n    return false;\n  } // Convert to 2D array if needed\n\n\n  if (typeof sorting[0] === 'number') {\n    sorting = settings.aaSorting = [sorting];\n  } // If appending the sort then we are multi-column sorting\n\n\n  if ((shift || addIndex) && settings.oFeatures.bSortMulti) {\n    // Are we already doing some kind of sort on this column?\n    var sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n\n    if (sortIdx !== -1) {\n      // Yes, modify the sort\n      nextSortIdx = next(sorting[sortIdx], true);\n\n      if (nextSortIdx === null && sorting.length === 1) {\n        nextSortIdx = 0; // can't remove sorting completely\n      }\n\n      if (nextSortIdx === null) {\n        sorting.splice(sortIdx, 1);\n      } else {\n        sorting[sortIdx][1] = asSorting[nextSortIdx];\n        sorting[sortIdx]._idx = nextSortIdx;\n      }\n    } else if (shift) {\n      // No sort on this column yet, being added by shift click\n      // add it as itself\n      sorting.push([colIdx, asSorting[0], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    } else {\n      // No sort on this column yet, being added from a colspan\n      // so add with same direction as first column\n      sorting.push([colIdx, sorting[0][1], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    }\n  } else if (sorting.length && sorting[0][0] == colIdx) {\n    // Single column - already sorting on this column, modify the sort\n    nextSortIdx = next(sorting[0]);\n    sorting.length = 1;\n    sorting[0][1] = asSorting[nextSortIdx];\n    sorting[0]._idx = nextSortIdx;\n  } else {\n    // Single column - sort only on this column\n    sorting.length = 0;\n    sorting.push([colIdx, asSorting[0]]);\n    sorting[0]._idx = 0;\n  }\n}\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnSortingClasses(settings) {\n  var oldSort = settings.aLastSort;\n  var sortClass = settings.oClasses.order.position;\n\n  var sort = _fnSortFlatten(settings);\n\n  var features = settings.oFeatures;\n  var i, ien, colIdx;\n\n  if (features.bSort && features.bSortClasses) {\n    // Remove old sorting classes\n    for (i = 0, ien = oldSort.length; i < ien; i++) {\n      colIdx = oldSort[i].src; // Remove column sorting\n\n      $(_pluck(settings.aoData, 'anCells', colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3));\n    } // Add new column sorting\n\n\n    for (i = 0, ien = sort.length; i < ien; i++) {\n      colIdx = sort[i].src;\n      $(_pluck(settings.aoData, 'anCells', colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n  }\n\n  settings.aLastSort = sort;\n} // Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\n\n\nfunction _fnSortData(settings, colIdx) {\n  // Custom sorting function - provided by the sort data type\n  var column = settings.aoColumns[colIdx];\n  var customSort = DataTable.ext.order[column.sSortDataType];\n  var customData;\n\n  if (customSort) {\n    customData = customSort.call(settings.oInstance, settings, colIdx, _fnColumnIndexToVisible(settings, colIdx));\n  } // Use / populate cache\n\n\n  var row, cellData;\n  var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n  var data = settings.aoData;\n\n  for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n    // Sparse array\n    if (!data[rowIdx]) {\n      continue;\n    }\n\n    row = data[rowIdx];\n\n    if (!row._aSortData) {\n      row._aSortData = [];\n    }\n\n    if (!row._aSortData[colIdx] || customSort) {\n      cellData = customSort ? customData[rowIdx] : // If there was a custom sort function, use data from there\n      _fnGetCellData(settings, rowIdx, colIdx, 'sort');\n      row._aSortData[colIdx] = formatter ? formatter(cellData, settings) : cellData;\n    }\n  }\n}\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\n\n\nfunction _fnSaveState(settings) {\n  if (settings._bLoadingState) {\n    return;\n  }\n  /* Store the interesting variables */\n\n\n  var state = {\n    time: +new Date(),\n    start: settings._iDisplayStart,\n    length: settings._iDisplayLength,\n    order: $.extend(true, [], settings.aaSorting),\n    search: $.extend({}, settings.oPreviousSearch),\n    columns: settings.aoColumns.map(function (col, i) {\n      return {\n        visible: col.bVisible,\n        search: $.extend({}, settings.aoPreSearchCols[i])\n      };\n    })\n  };\n  settings.oSavedState = state;\n\n  _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n\n  if (settings.oFeatures.bStateSave && !settings.bDestroying) {\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n  }\n}\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnLoadState(settings, init, callback) {\n  if (!settings.oFeatures.bStateSave) {\n    callback();\n    return;\n  }\n\n  var loaded = function (state) {\n    _fnImplementState(settings, state, callback);\n  };\n\n  var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n\n  if (state !== undefined) {\n    _fnImplementState(settings, state, callback);\n  } // otherwise, wait for the loaded callback to be executed\n\n\n  return true;\n}\n\nfunction _fnImplementState(settings, s, callback) {\n  var i, ien;\n  var columns = settings.aoColumns;\n  settings._bLoadingState = true; // When StateRestore was introduced the state could now be implemented at any time\n  // Not just initialisation. To do this an api instance is required in some places\n\n  var api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n  if (!s || !s.time) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  } // Reject old data\n\n\n  var duration = settings.iStateDuration;\n\n  if (duration > 0 && s.time < +new Date() - duration * 1000) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  } // Allow custom and plug-in manipulation functions to alter the saved data set and\n  // cancelling of loading by returning false\n\n\n  var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n\n  if (abStateLoad.indexOf(false) !== -1) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  } // Number of columns have changed - all bets are off, no restore of settings\n\n\n  if (s.columns && columns.length !== s.columns.length) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  } // Store the saved state so it might be accessed at any time\n\n\n  settings.oLoadedState = $.extend(true, {}, s); // This is needed for ColReorder, which has to happen first to allow all\n  // the stored indexes to be usable. It is not publicly documented.\n\n  _fnCallbackFire(settings, null, 'stateLoadInit', [settings, s], true); // Page Length\n\n\n  if (s.length !== undefined) {\n    // If already initialised just set the value directly so that the select element is also updated\n    if (api) {\n      api.page.len(s.length);\n    } else {\n      settings._iDisplayLength = s.length;\n    }\n  } // Restore key features - todo - for 1.11 this needs to be done by\n  // subscribed events\n\n\n  if (s.start !== undefined) {\n    if (api === null) {\n      settings._iDisplayStart = s.start;\n      settings.iInitDisplayStart = s.start;\n    } else {\n      _fnPageChange(settings, s.start / settings._iDisplayLength);\n    }\n  } // Order\n\n\n  if (s.order !== undefined) {\n    settings.aaSorting = [];\n    $.each(s.order, function (i, col) {\n      settings.aaSorting.push(col[0] >= columns.length ? [0, col[1]] : col);\n    });\n  } // Search\n\n\n  if (s.search !== undefined) {\n    $.extend(settings.oPreviousSearch, s.search);\n  } // Columns\n\n\n  if (s.columns) {\n    for (i = 0, ien = s.columns.length; i < ien; i++) {\n      var col = s.columns[i]; // Visibility\n\n      if (col.visible !== undefined) {\n        // If the api is defined, the table has been initialised so we need to use it rather than internal settings\n        if (api) {\n          // Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n          api.column(i).visible(col.visible, false);\n        } else {\n          columns[i].bVisible = col.visible;\n        }\n      } // Search\n\n\n      if (col.search !== undefined) {\n        $.extend(settings.aoPreSearchCols[i], col.search);\n      }\n    } // If the api is defined then we need to adjust the columns once the visibility has been changed\n\n\n    if (api) {\n      api.columns.adjust();\n    }\n  }\n\n  settings._bLoadingState = false;\n\n  _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n\n  callback();\n}\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnLog(settings, level, msg, tn) {\n  msg = 'DataTables warning: ' + (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n\n  if (tn) {\n    msg += '. For more information about this error, please see ' + 'https://datatables.net/tn/' + tn;\n  }\n\n  if (!level) {\n    // Backwards compatibility pre 1.10\n    var ext = DataTable.ext;\n    var type = ext.sErrMode || ext.errMode;\n\n    if (settings) {\n      _fnCallbackFire(settings, null, 'dt-error', [settings, tn, msg], true);\n    }\n\n    if (type == 'alert') {\n      alert(msg);\n    } else if (type == 'throw') {\n      throw new Error(msg);\n    } else if (typeof type == 'function') {\n      type(settings, tn, msg);\n    }\n  } else if (window.console && console.log) {\n    console.log(msg);\n  }\n}\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnMap(ret, src, name, mappedName) {\n  if (Array.isArray(name)) {\n    $.each(name, function (i, val) {\n      if (Array.isArray(val)) {\n        _fnMap(ret, src, val[0], val[1]);\n      } else {\n        _fnMap(ret, src, val);\n      }\n    });\n    return;\n  }\n\n  if (mappedName === undefined) {\n    mappedName = name;\n  }\n\n  if (src[name] !== undefined) {\n    ret[mappedName] = src[name];\n  }\n}\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\n\n\nfunction _fnExtend(out, extender, breakRefs) {\n  var val;\n\n  for (var prop in extender) {\n    if (Object.prototype.hasOwnProperty.call(extender, prop)) {\n      val = extender[prop];\n\n      if ($.isPlainObject(val)) {\n        if (!$.isPlainObject(out[prop])) {\n          out[prop] = {};\n        }\n\n        $.extend(true, out[prop], val);\n      } else if (breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val)) {\n        out[prop] = val.slice();\n      } else {\n        out[prop] = val;\n      }\n    }\n  }\n\n  return out;\n}\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnBindAction(n, selector, fn) {\n  $(n).on('click.DT', selector, function (e) {\n    fn(e);\n  }).on('keypress.DT', selector, function (e) {\n    if (e.which === 13) {\n      e.preventDefault();\n      fn(e);\n    }\n  }).on('selectstart.DT', selector, function () {\n    // Don't want a double click resulting in text selection\n    return false;\n  });\n}\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCallbackReg(settings, store, fn) {\n  if (fn) {\n    settings[store].push(fn);\n  }\n}\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnCallbackFire(settings, callbackArr, eventName, args, bubbles) {\n  var ret = [];\n\n  if (callbackArr) {\n    ret = settings[callbackArr].slice().reverse().map(function (val) {\n      return val.apply(settings.oInstance, args);\n    });\n  }\n\n  if (eventName !== null) {\n    var e = $.Event(eventName + '.dt');\n    var table = $(settings.nTable); // Expose the DataTables API on the event object for easy access\n\n    e.dt = settings.api;\n    table[bubbles ? 'trigger' : 'triggerHandler'](e, args); // If not yet attached to the document, trigger the event\n    // on the body directly to sort of simulate the bubble\n\n    if (bubbles && table.parents('body').length === 0) {\n      $('body').trigger(e, args);\n    }\n\n    ret.push(e.result);\n  }\n\n  return ret;\n}\n\nfunction _fnLengthOverflow(settings) {\n  var start = settings._iDisplayStart,\n      end = settings.fnDisplayEnd(),\n      len = settings._iDisplayLength;\n  /* If we have space to show extra rows (backing up from the end point - then do so */\n\n  if (start >= end) {\n    start = end - len;\n  } // Keep the start record on the current page\n\n\n  start -= start % len;\n\n  if (len === -1 || start < 0) {\n    start = 0;\n  }\n\n  settings._iDisplayStart = start;\n}\n\nfunction _fnRenderer(settings, type) {\n  var renderer = settings.renderer;\n  var host = DataTable.ext.renderer[type];\n\n  if ($.isPlainObject(renderer) && renderer[type]) {\n    // Specific renderer for this type. If available use it, otherwise use\n    // the default.\n    return host[renderer[type]] || host._;\n  } else if (typeof renderer === 'string') {\n    // Common renderer - if there is one available for this type use it,\n    // otherwise use the default\n    return host[renderer] || host._;\n  } // Use the default\n\n\n  return host._;\n}\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\n\n\nfunction _fnDataSource(settings) {\n  if (settings.oFeatures.bServerSide) {\n    return 'ssp';\n  } else if (settings.ajax) {\n    return 'ajax';\n  }\n\n  return 'dom';\n}\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\n\n\nfunction _fnMacros(settings, str, entries) {\n  // When infinite scrolling, we are always starting at 1. _iDisplayStart is\n  // used only internally\n  var formatter = settings.fnFormatNumber,\n      start = settings._iDisplayStart + 1,\n      len = settings._iDisplayLength,\n      vis = settings.fnRecordsDisplay(),\n      max = settings.fnRecordsTotal(),\n      all = len === -1;\n  return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, max)).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len))).replace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries)).replace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max)).replace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis));\n}\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\n\n\nvar __apiStruct = [];\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\n\nvar __arrayProto = Array.prototype;\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\n\nvar _toSettings = function (mixed) {\n  var idx, jq;\n  var settings = DataTable.settings;\n\n  var tables = _pluck(settings, 'nTable');\n\n  if (!mixed) {\n    return [];\n  } else if (mixed.nTable && mixed.oFeatures) {\n    // DataTables settings object\n    return [mixed];\n  } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n    // Table node\n    idx = tables.indexOf(mixed);\n    return idx !== -1 ? [settings[idx]] : null;\n  } else if (mixed && typeof mixed.settings === 'function') {\n    return mixed.settings().toArray();\n  } else if (typeof mixed === 'string') {\n    // jQuery selector\n    jq = $(mixed).get();\n  } else if (mixed instanceof $) {\n    // jQuery object (also DataTables instance)\n    jq = mixed.get();\n  }\n\n  if (jq) {\n    return settings.filter(function (v, idx) {\n      return jq.includes(tables[idx]);\n    });\n  }\n};\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n\n\n_Api = function (context, data) {\n  if (!(this instanceof _Api)) {\n    return new _Api(context, data);\n  }\n\n  var settings = [];\n\n  var ctxSettings = function (o) {\n    var a = _toSettings(o);\n\n    if (a) {\n      settings.push.apply(settings, a);\n    }\n  };\n\n  if (Array.isArray(context)) {\n    for (var i = 0, ien = context.length; i < ien; i++) {\n      ctxSettings(context[i]);\n    }\n  } else {\n    ctxSettings(context);\n  } // Remove duplicates\n\n\n  this.context = settings.length > 1 ? _unique(settings) : settings; // Initial data\n\n  if (data) {\n    this.push.apply(this, data);\n  } // selector\n\n\n  this.selector = {\n    rows: null,\n    cols: null,\n    opts: null\n  };\n\n  _Api.extend(this, this, __apiStruct);\n};\n\nDataTable.Api = _Api; // Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n\n$.extend(_Api.prototype, {\n  any: function () {\n    return this.count() !== 0;\n  },\n  context: [],\n  // array of table settings objects\n  count: function () {\n    return this.flatten().length;\n  },\n  each: function (fn) {\n    for (var i = 0, ien = this.length; i < ien; i++) {\n      fn.call(this, this[i], i, this);\n    }\n\n    return this;\n  },\n  eq: function (idx) {\n    var ctx = this.context;\n    return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null;\n  },\n  filter: function (fn) {\n    var a = __arrayProto.filter.call(this, fn, this);\n\n    return new _Api(this.context, a);\n  },\n  flatten: function () {\n    var a = [];\n    return new _Api(this.context, a.concat.apply(a, this.toArray()));\n  },\n  get: function (idx) {\n    return this[idx];\n  },\n  join: __arrayProto.join,\n  includes: function (find) {\n    return this.indexOf(find) === -1 ? false : true;\n  },\n  indexOf: __arrayProto.indexOf,\n  iterator: function (flatten, type, fn, alwaysNew) {\n    var a = [],\n        ret,\n        i,\n        ien,\n        j,\n        jen,\n        context = this.context,\n        rows,\n        items,\n        item,\n        selector = this.selector; // Argument shifting\n\n    if (typeof flatten === 'string') {\n      alwaysNew = fn;\n      fn = type;\n      type = flatten;\n      flatten = false;\n    }\n\n    for (i = 0, ien = context.length; i < ien; i++) {\n      var apiInst = new _Api(context[i]);\n\n      if (type === 'table') {\n        ret = fn.call(apiInst, context[i], i);\n\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'columns' || type === 'rows') {\n        // this has same length as context - one entry for each table\n        ret = fn.call(apiInst, context[i], this[i], i);\n\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n        // columns and rows share the same structure.\n        // 'this' is an array of column indexes for each context\n        items = this[i];\n\n        if (type === 'column-rows') {\n          rows = _selector_row_indexes(context[i], selector.opts);\n        }\n\n        for (j = 0, jen = items.length; j < jen; j++) {\n          item = items[j];\n\n          if (type === 'cell') {\n            ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n          } else {\n            ret = fn.call(apiInst, context[i], item, i, j, rows);\n          }\n\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        }\n      }\n    }\n\n    if (a.length || alwaysNew) {\n      var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n      var apiSelector = api.selector;\n      apiSelector.rows = selector.rows;\n      apiSelector.cols = selector.cols;\n      apiSelector.opts = selector.opts;\n      return api;\n    }\n\n    return this;\n  },\n  lastIndexOf: __arrayProto.lastIndexOf,\n  length: 0,\n  map: function (fn) {\n    var a = __arrayProto.map.call(this, fn, this);\n\n    return new _Api(this.context, a);\n  },\n  pluck: function (prop) {\n    var fn = DataTable.util.get(prop);\n    return this.map(function (el) {\n      return fn(el);\n    });\n  },\n  pop: __arrayProto.pop,\n  push: __arrayProto.push,\n  reduce: __arrayProto.reduce,\n  reduceRight: __arrayProto.reduceRight,\n  reverse: __arrayProto.reverse,\n  // Object with rows, columns and opts\n  selector: null,\n  shift: __arrayProto.shift,\n  slice: function () {\n    return new _Api(this.context, this);\n  },\n  sort: __arrayProto.sort,\n  splice: __arrayProto.splice,\n  toArray: function () {\n    return __arrayProto.slice.call(this);\n  },\n  to$: function () {\n    return $(this);\n  },\n  toJQuery: function () {\n    return $(this);\n  },\n  unique: function () {\n    return new _Api(this.context, _unique(this.toArray()));\n  },\n  unshift: __arrayProto.unshift\n});\n\nfunction _api_scope(scope, fn, struc) {\n  return function () {\n    var ret = fn.apply(scope || this, arguments); // Method extension\n\n    _Api.extend(ret, ret, struc.methodExt);\n\n    return ret;\n  };\n}\n\nfunction _api_find(src, name) {\n  for (var i = 0, ien = src.length; i < ien; i++) {\n    if (src[i].name === name) {\n      return src[i];\n    }\n  }\n\n  return null;\n}\n\nwindow.__apiStruct = __apiStruct;\n\n_Api.extend = function (scope, obj, ext) {\n  // Only extend API instances and static properties of the API\n  if (!ext.length || !obj || !(obj instanceof _Api) && !obj.__dt_wrapper) {\n    return;\n  }\n\n  var i, ien, struct;\n\n  for (i = 0, ien = ext.length; i < ien; i++) {\n    struct = ext[i]; // Value\n\n    obj[struct.name] = struct.type === 'function' ? _api_scope(scope, struct.val, struct) : struct.type === 'object' ? {} : struct.val;\n    obj[struct.name].__dt_wrapper = true; // Property extension\n\n    _Api.extend(scope, obj[struct.name], struct.propExt);\n  }\n}; //     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n\n_Api.register = _api_register = function (name, val) {\n  if (Array.isArray(name)) {\n    for (var j = 0, jen = name.length; j < jen; j++) {\n      _Api.register(name[j], val);\n    }\n\n    return;\n  }\n\n  var i,\n      ien,\n      heir = name.split('.'),\n      struct = __apiStruct,\n      key,\n      method;\n\n  for (i = 0, ien = heir.length; i < ien; i++) {\n    method = heir[i].indexOf('()') !== -1;\n    key = method ? heir[i].replace('()', '') : heir[i];\n\n    var src = _api_find(struct, key);\n\n    if (!src) {\n      src = {\n        name: key,\n        val: {},\n        methodExt: [],\n        propExt: [],\n        type: 'object'\n      };\n      struct.push(src);\n    }\n\n    if (i === ien - 1) {\n      src.val = val;\n      src.type = typeof val === 'function' ? 'function' : $.isPlainObject(val) ? 'object' : 'other';\n    } else {\n      struct = method ? src.methodExt : src.propExt;\n    }\n  }\n};\n\n_Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n  _Api.register(pluralName, val);\n\n  _Api.register(singularName, function () {\n    var ret = val.apply(this, arguments);\n\n    if (ret === this) {\n      // Returned item is the API instance that was passed in, return it\n      return this;\n    } else if (ret instanceof _Api) {\n      // New API instance returned, want the value from the first item\n      // in the returned array for the singular result.\n      return ret.length ? Array.isArray(ret[0]) ? new _Api(ret.context, ret[0]) : // Array results are 'enhanced'\n      ret[0] : undefined;\n    } // Non-API return - just fire it back\n\n\n    return ret;\n  });\n};\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\n\n\nvar __table_selector = function (selector, a) {\n  if (Array.isArray(selector)) {\n    var result = [];\n    selector.forEach(function (sel) {\n      var inner = __table_selector(sel, a);\n\n      result.push.apply(result, inner);\n    });\n    return result.filter(function (item) {\n      return item;\n    });\n  } // Integer is used to pick out a table by index\n\n\n  if (typeof selector === 'number') {\n    return [a[selector]];\n  } // Perform a jQuery selector on the table nodes\n\n\n  var nodes = a.map(function (el) {\n    return el.nTable;\n  });\n  return $(nodes).filter(selector).map(function () {\n    // Need to translate back from the table node to the settings\n    var idx = nodes.indexOf(this);\n    return a[idx];\n  }).toArray();\n};\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n\n\n_api_register('tables()', function (selector) {\n  // A new instance is created if there was a selector specified\n  return selector !== undefined && selector !== null ? new _Api(__table_selector(selector, this.context)) : this;\n});\n\n_api_register('table()', function (selector) {\n  var tables = this.tables(selector);\n  var ctx = tables.context; // Truncate to the first matched table\n\n  return ctx.length ? new _Api(ctx[0]) : tables;\n}); // Common methods, combined to reduce size\n\n\n[['nodes', 'node', 'nTable'], ['body', 'body', 'nTBody'], ['header', 'header', 'nTHead'], ['footer', 'footer', 'nTFoot']].forEach(function (item) {\n  _api_registerPlural('tables().' + item[0] + '()', 'table().' + item[1] + '()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx[item[2]];\n    }, 1);\n  });\n}); // Structure methods\n\n[['header', 'aoHeader'], ['footer', 'aoFooter']].forEach(function (item) {\n  _api_register('table().' + item[0] + '.structure()', function (selector) {\n    var indexes = this.columns(selector).indexes().flatten();\n    var ctx = this.context[0];\n    return _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n  });\n});\n\n_api_registerPlural('tables().containers()', 'table().container()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTableWrapper;\n  }, 1);\n});\n\n_api_register('tables().every()', function (fn) {\n  var that = this;\n  return this.iterator('table', function (s, i) {\n    fn.call(that.table(i), i);\n  });\n});\n\n_api_register('caption()', function (value, side) {\n  var context = this.context; // Getter - return existing node's content\n\n  if (value === undefined) {\n    var caption = context[0].captionNode;\n    return caption && context.length ? caption.innerHTML : null;\n  }\n\n  return this.iterator('table', function (ctx) {\n    var table = $(ctx.nTable);\n    var caption = $(ctx.captionNode);\n    var container = $(ctx.nTableWrapper); // Create the node if it doesn't exist yet\n\n    if (!caption.length) {\n      caption = $('<caption/>').html(value);\n      ctx.captionNode = caption[0]; // If side isn't set, we need to insert into the document to let the\n      // CSS decide so we can read it back, otherwise there is no way to\n      // know if the CSS would put it top or bottom for scrolling\n\n      if (!side) {\n        table.prepend(caption);\n        side = caption.css('caption-side');\n      }\n    }\n\n    caption.html(value);\n\n    if (side) {\n      caption.css('caption-side', side);\n      caption[0]._captionSide = side;\n    }\n\n    if (container.find('div.dataTables_scroll').length) {\n      var selector = side === 'top' ? 'Head' : 'Foot';\n      container.find('div.dataTables_scroll' + selector + ' table').prepend(caption);\n    } else {\n      table.prepend(caption);\n    }\n  }, 1);\n});\n\n_api_register('caption.node()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].captionNode : null;\n});\n/**\n * Redraw the tables in the current context.\n */\n\n\n_api_register('draw()', function (paging) {\n  return this.iterator('table', function (settings) {\n    if (paging === 'page') {\n      _fnDraw(settings);\n    } else {\n      if (typeof paging === 'string') {\n        paging = paging === 'full-hold' ? false : true;\n      }\n\n      _fnReDraw(settings, paging === false);\n    }\n  });\n});\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n */\n\n/**\n* Set the current page.\n*\n* Note that if you attempt to show a page which does not exist, DataTables will\n* not throw an error, but rather reset the paging.\n*\n* @param {integer|string} action The paging action to take. This can be one of:\n*  * `integer` - The page index to jump to\n*  * `string` - An action to take:\n*    * `first` - Jump to first page.\n*    * `next` - Jump to the next page\n*    * `previous` - Jump to previous page\n*    * `last` - Jump to the last page.\n* @returns {DataTables.Api} this\n*/\n\n\n_api_register('page()', function (action) {\n  if (action === undefined) {\n    return this.page.info().page; // not an expensive call\n  } // else, have an action to take on all tables\n\n\n  return this.iterator('table', function (settings) {\n    _fnPageChange(settings, action);\n  });\n});\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n\n\n_api_register('page.info()', function () {\n  if (this.context.length === 0) {\n    return undefined;\n  }\n\n  var settings = this.context[0],\n      start = settings._iDisplayStart,\n      len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n      visRecords = settings.fnRecordsDisplay(),\n      all = len === -1;\n  return {\n    \"page\": all ? 0 : Math.floor(start / len),\n    \"pages\": all ? 1 : Math.ceil(visRecords / len),\n    \"start\": start,\n    \"end\": settings.fnDisplayEnd(),\n    \"length\": len,\n    \"recordsTotal\": settings.fnRecordsTotal(),\n    \"recordsDisplay\": visRecords,\n    \"serverSide\": _fnDataSource(settings) === 'ssp'\n  };\n});\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n */\n\n/**\n* Set the current page length.\n*\n* @param {integer} Page length to set. Use `-1` to show all records.\n* @returns {DataTables.Api} this\n*/\n\n\n_api_register('page.len()', function (len) {\n  // Note that we can't call this function 'length()' because `length`\n  // is a Javascript property of functions which defines how many arguments\n  // the function expects.\n  if (len === undefined) {\n    return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined;\n  } // else, set the page length\n\n\n  return this.iterator('table', function (settings) {\n    _fnLengthChange(settings, len);\n  });\n});\n\nvar __reload = function (settings, holdPosition, callback) {\n  // Use the draw event to trigger a callback\n  if (callback) {\n    var api = new _Api(settings);\n    api.one('draw', function () {\n      callback(api.ajax.json());\n    });\n  }\n\n  if (_fnDataSource(settings) == 'ssp') {\n    _fnReDraw(settings, holdPosition);\n  } else {\n    _fnProcessingDisplay(settings, true); // Cancel an existing request\n\n\n    var xhr = settings.jqXHR;\n\n    if (xhr && xhr.readyState !== 4) {\n      xhr.abort();\n    } // Trigger xhr\n\n\n    _fnBuildAjax(settings, {}, function (json) {\n      _fnClearTable(settings);\n\n      var data = _fnAjaxDataSrc(settings, json);\n\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        _fnAddData(settings, data[i]);\n      }\n\n      _fnReDraw(settings, holdPosition);\n\n      _fnInitComplete(settings);\n\n      _fnProcessingDisplay(settings, false);\n    });\n  }\n};\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n\n\n_api_register('ajax.json()', function () {\n  var ctx = this.context;\n\n  if (ctx.length > 0) {\n    return ctx[0].json;\n  } // else return undefined;\n\n});\n/**\n * Get the data submitted in the last Ajax request\n */\n\n\n_api_register('ajax.params()', function () {\n  var ctx = this.context;\n\n  if (ctx.length > 0) {\n    return ctx[0].oAjaxData;\n  } // else return undefined;\n\n});\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n\n\n_api_register('ajax.reload()', function (callback, resetPaging) {\n  return this.iterator('table', function (settings) {\n    __reload(settings, resetPaging === false, callback);\n  });\n});\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n */\n\n/**\n* Set the Ajax URL. Note that this will set the URL for all tables in the\n* current context.\n*\n* @param {string} url URL to set.\n* @returns {DataTables.Api} this\n*/\n\n\n_api_register('ajax.url()', function (url) {\n  var ctx = this.context;\n\n  if (url === undefined) {\n    // get\n    if (ctx.length === 0) {\n      return undefined;\n    }\n\n    ctx = ctx[0];\n    return $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax;\n  } // set\n\n\n  return this.iterator('table', function (settings) {\n    if ($.isPlainObject(settings.ajax)) {\n      settings.ajax.url = url;\n    } else {\n      settings.ajax = url;\n    }\n  });\n});\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n\n\n_api_register('ajax.url().load()', function (callback, resetPaging) {\n  // Same as a reload, but makes sense to present it for easy access after a\n  // url change\n  return this.iterator('table', function (ctx) {\n    __reload(ctx, resetPaging === false, callback);\n  });\n});\n\nvar _selector_run = function (type, selector, selectFn, settings, opts) {\n  var out = [],\n      res,\n      a,\n      i,\n      ien,\n      j,\n      jen,\n      selectorType = typeof selector; // Can't just check for isArray here, as an API or jQuery instance might be\n  // given with their array like look\n\n  if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n    selector = [selector];\n  }\n\n  for (i = 0, ien = selector.length; i < ien; i++) {\n    // Only split on simple strings - complex expressions will be jQuery selectors\n    a = selector[i] && selector[i].split && !selector[i].match(/[[(:]/) ? selector[i].split(',') : [selector[i]];\n\n    for (j = 0, jen = a.length; j < jen; j++) {\n      res = selectFn(typeof a[j] === 'string' ? a[j].trim() : a[j]); // Remove empty items\n\n      res = res.filter(function (item) {\n        return item !== null && item !== undefined;\n      });\n\n      if (res && res.length) {\n        out = out.concat(res);\n      }\n    }\n  } // selector extensions\n\n\n  var ext = _ext.selector[type];\n\n  if (ext.length) {\n    for (i = 0, ien = ext.length; i < ien; i++) {\n      out = ext[i](settings, opts, out);\n    }\n  }\n\n  return _unique(out);\n};\n\nvar _selector_opts = function (opts) {\n  if (!opts) {\n    opts = {};\n  } // Backwards compatibility for 1.9- which used the terminology filter rather\n  // than search\n\n\n  if (opts.filter && opts.search === undefined) {\n    opts.search = opts.filter;\n  }\n\n  return $.extend({\n    search: 'none',\n    order: 'current',\n    page: 'all'\n  }, opts);\n}; // Reduce the API instance to the first item found\n\n\nvar _selector_first = function (old) {\n  let inst = new _Api(old.context[0]); // Use a push rather than passing to the constructor, since it will\n  // merge arrays down automatically, which isn't what is wanted here\n\n  if (old.length) {\n    inst.push(old[0]);\n  }\n\n  inst.selector = old.selector; // Limit to a single row / column / cell\n\n  if (inst.length && inst[0].length > 1) {\n    inst[0].splice(1);\n  }\n\n  return inst;\n};\n\nvar _selector_row_indexes = function (settings, opts) {\n  var i,\n      ien,\n      tmp,\n      a = [],\n      displayFiltered = settings.aiDisplay,\n      displayMaster = settings.aiDisplayMaster;\n  var search = opts.search,\n      // none, applied, removed\n  order = opts.order,\n      // applied, current, index (original - compatibility with 1.9)\n  page = opts.page; // all, current\n\n  if (_fnDataSource(settings) == 'ssp') {\n    // In server-side processing mode, most options are irrelevant since\n    // rows not shown don't exist and the index order is the applied order\n    // Removed is a special case - for consistency just return an empty\n    // array\n    return search === 'removed' ? [] : _range(0, displayMaster.length);\n  } else if (page == 'current') {\n    // Current page implies that order=current and filter=applied, since it is\n    // fairly senseless otherwise, regardless of what order and search actually\n    // are\n    for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n      a.push(displayFiltered[i]);\n    }\n  } else if (order == 'current' || order == 'applied') {\n    if (search == 'none') {\n      a = displayMaster.slice();\n    } else if (search == 'applied') {\n      a = displayFiltered.slice();\n    } else if (search == 'removed') {\n      // O(n+m) solution by creating a hash map\n      var displayFilteredMap = {};\n\n      for (i = 0, ien = displayFiltered.length; i < ien; i++) {\n        displayFilteredMap[displayFiltered[i]] = null;\n      }\n\n      displayMaster.forEach(function (item) {\n        if (!Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n          a.push(item);\n        }\n      });\n    }\n  } else if (order == 'index' || order == 'original') {\n    for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n      if (!settings.aoData[i]) {\n        continue;\n      }\n\n      if (search == 'none') {\n        a.push(i);\n      } else {\n        // applied | removed\n        tmp = displayFiltered.indexOf(i);\n\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(i);\n        }\n      }\n    }\n  } else if (typeof order === 'number') {\n    // Order the rows by the given column\n    var ordered = _fnSort(settings, order, 'asc');\n\n    if (search === 'none') {\n      a = ordered;\n    } else {\n      // applied | removed\n      for (i = 0; i < ordered.length; i++) {\n        tmp = displayFiltered.indexOf(ordered[i]);\n\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(ordered[i]);\n        }\n      }\n    }\n  }\n\n  return a;\n};\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\n\n\nvar __row_selector = function (settings, selector, opts) {\n  var rows;\n\n  var run = function (sel) {\n    var selInt = _intVal(sel);\n\n    var aoData = settings.aoData; // Short cut - selector is a number and no options provided (default is\n    // all records, so no need to check if the index is in there, since it\n    // must be - dev error if the index doesn't exist).\n\n    if (selInt !== null && !opts) {\n      return [selInt];\n    }\n\n    if (!rows) {\n      rows = _selector_row_indexes(settings, opts);\n    }\n\n    if (selInt !== null && rows.indexOf(selInt) !== -1) {\n      // Selector - integer\n      return [selInt];\n    } else if (sel === null || sel === undefined || sel === '') {\n      // Selector - none\n      return rows;\n    } // Selector - function\n\n\n    if (typeof sel === 'function') {\n      return rows.map(function (idx) {\n        var row = aoData[idx];\n        return sel(idx, row._aData, row.nTr) ? idx : null;\n      });\n    } // Selector - node\n\n\n    if (sel.nodeName) {\n      var rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n\n      var cellIdx = sel._DT_CellIndex;\n\n      if (rowIdx !== undefined) {\n        // Make sure that the row is actually still present in the table\n        return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];\n      } else if (cellIdx) {\n        return aoData[cellIdx.row] && aoData[cellIdx.row].nTr === sel.parentNode ? [cellIdx.row] : [];\n      } else {\n        var host = $(sel).closest('*[data-dt-row]');\n        return host.length ? [host.data('dt-row')] : [];\n      }\n    } // ID selector. Want to always be able to select rows by id, regardless\n    // of if the tr element has been created or not, so can't rely upon\n    // jQuery here - hence a custom implementation. This does not match\n    // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n    // but to select it using a CSS selector engine (like Sizzle or\n    // querySelect) it would need to need to be escaped for some characters.\n    // DataTables simplifies this for row selectors since you can select\n    // only a row. A # indicates an id any anything that follows is the id -\n    // unescaped.\n\n\n    if (typeof sel === 'string' && sel.charAt(0) === '#') {\n      // get row index from id\n      var rowObj = settings.aIds[sel.replace(/^#/, '')];\n\n      if (rowObj !== undefined) {\n        return [rowObj.idx];\n      } // need to fall through to jQuery in case there is DOM id that\n      // matches\n\n    } // Get nodes in the order from the `rows` array with null values removed\n\n\n    var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, 'nTr')); // Selector - jQuery selector string, array of nodes or jQuery object/\n    // As jQuery's .filter() allows jQuery objects to be passed in filter,\n    // it also allows arrays, so this will cope with all three options\n\n\n    return $(nodes).filter(sel).map(function () {\n      return this._DT_RowIndex;\n    }).toArray();\n  };\n\n  var matched = _selector_run('row', selector, run, settings, opts);\n\n  if (opts.order === 'current' || opts.order === 'applied') {\n    var master = settings.aiDisplayMaster;\n    matched.sort(function (a, b) {\n      return master.indexOf(a) - master.indexOf(b);\n    });\n  }\n\n  return matched;\n};\n\n_api_register('rows()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __row_selector(settings, selector, opts);\n  }, 1); // Want argument shifting here and in __row_selector?\n\n  inst.selector.rows = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n\n_api_register('rows().nodes()', function () {\n  return this.iterator('row', function (settings, row) {\n    return settings.aoData[row].nTr || undefined;\n  }, 1);\n});\n\n_api_register('rows().data()', function () {\n  return this.iterator(true, 'rows', function (settings, rows) {\n    return _pluck_order(settings.aoData, rows, '_aData');\n  }, 1);\n});\n\n_api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n  return this.iterator('row', function (settings, row) {\n    var r = settings.aoData[row];\n    return type === 'search' ? r._aFilterData : r._aSortData;\n  }, 1);\n});\n\n_api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n  return this.iterator('row', function (settings, row) {\n    _fnInvalidate(settings, row, src);\n  });\n});\n\n_api_registerPlural('rows().indexes()', 'row().index()', function () {\n  return this.iterator('row', function (settings, row) {\n    return row;\n  }, 1);\n});\n\n_api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n  var a = [];\n  var context = this.context; // `iterator` will drop undefined values, but in this case we want them\n\n  for (var i = 0, ien = context.length; i < ien; i++) {\n    for (var j = 0, jen = this[i].length; j < jen; j++) {\n      var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n      a.push((hash === true ? '#' : '') + id);\n    }\n  }\n\n  return new _Api(context, a);\n});\n\n_api_registerPlural('rows().remove()', 'row().remove()', function () {\n  this.iterator('row', function (settings, row) {\n    var data = settings.aoData;\n    var rowData = data[row]; // Delete from the display arrays\n\n    var idx = settings.aiDisplayMaster.indexOf(row);\n\n    if (idx !== -1) {\n      settings.aiDisplayMaster.splice(idx, 1);\n    }\n\n    idx = settings.aiDisplay.indexOf(row);\n\n    if (idx !== -1) {\n      settings.aiDisplay.splice(idx, 1);\n    } // For server-side processing tables - subtract the deleted row from the count\n\n\n    if (settings._iRecordsDisplay > 0) {\n      settings._iRecordsDisplay--;\n    } // Check for an 'overflow' they case for displaying the table\n\n\n    _fnLengthOverflow(settings); // Remove the row's ID reference if there is one\n\n\n    var id = settings.rowIdFn(rowData._aData);\n\n    if (id !== undefined) {\n      delete settings.aIds[id];\n    }\n\n    data[row] = null;\n  });\n  return this;\n});\n\n_api_register('rows.add()', function (rows) {\n  var newRows = this.iterator('table', function (settings) {\n    var row, i, ien;\n    var out = [];\n\n    for (i = 0, ien = rows.length; i < ien; i++) {\n      row = rows[i];\n\n      if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n        out.push(_fnAddTr(settings, row)[0]);\n      } else {\n        out.push(_fnAddData(settings, row));\n      }\n    }\n\n    return out;\n  }, 1); // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\n  var modRows = this.rows(-1);\n  modRows.pop();\n  modRows.push.apply(modRows, newRows);\n  return modRows;\n});\n/**\n *\n */\n\n\n_api_register('row()', function (selector, opts) {\n  return _selector_first(this.rows(selector, opts));\n});\n\n_api_register('row().data()', function (data) {\n  var ctx = this.context;\n\n  if (data === undefined) {\n    // Get\n    return ctx.length && this.length && this[0].length ? ctx[0].aoData[this[0]]._aData : undefined;\n  } // Set\n\n\n  var row = ctx[0].aoData[this[0]];\n  row._aData = data; // If the DOM has an id, and the data source is an array\n\n  if (Array.isArray(data) && row.nTr && row.nTr.id) {\n    _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n  } // Automatically invalidate\n\n\n  _fnInvalidate(ctx[0], this[0], 'data');\n\n  return this;\n});\n\n_api_register('row().node()', function () {\n  var ctx = this.context;\n  return ctx.length && this.length && this[0].length ? ctx[0].aoData[this[0]].nTr || null : null;\n});\n\n_api_register('row.add()', function (row) {\n  // Allow a jQuery object to be passed in - only a single row is added from\n  // it though - the first element in the set\n  if (row instanceof $ && row.length) {\n    row = row[0];\n  }\n\n  var rows = this.iterator('table', function (settings) {\n    if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n      return _fnAddTr(settings, row)[0];\n    }\n\n    return _fnAddData(settings, row);\n  }); // Return an Api.rows() extended instance, with the newly added row selected\n\n  return this.row(rows[0]);\n});\n\n$(document).on('plugin-init.dt', function (e, context) {\n  var api = new _Api(context);\n  api.on('stateSaveParams.DT', function (e, settings, d) {\n    // This could be more compact with the API, but it is a lot faster as a simple\n    // internal loop\n    var idFn = settings.rowIdFn;\n    var rows = settings.aiDisplayMaster;\n    var ids = [];\n\n    for (var i = 0; i < rows.length; i++) {\n      var rowIdx = rows[i];\n      var data = settings.aoData[rowIdx];\n\n      if (data._detailsShow) {\n        ids.push('#' + idFn(data._aData));\n      }\n    }\n\n    d.childRows = ids;\n  }); // For future state loads (e.g. with StateRestore)\n\n  api.on('stateLoaded.DT', function (e, settings, state) {\n    __details_state_load(api, state);\n  }); // And the initial load state\n\n  __details_state_load(api, api.state.loaded());\n});\n\nvar __details_state_load = function (api, state) {\n  if (state && state.childRows) {\n    api.rows(state.childRows.map(function (id) {\n      return id.replace(/:/g, '\\\\:');\n    })).every(function () {\n      _fnCallbackFire(api.settings()[0], null, 'requestChild', [this]);\n    });\n  }\n};\n\nvar __details_add = function (ctx, row, data, klass) {\n  // Convert to array of TR elements\n  var rows = [];\n\n  var addRow = function (r, k) {\n    // Recursion to allow for arrays of jQuery objects\n    if (Array.isArray(r) || r instanceof $) {\n      for (var i = 0, ien = r.length; i < ien; i++) {\n        addRow(r[i], k);\n      }\n\n      return;\n    } // If we get a TR element, then just add it directly - up to the dev\n    // to add the correct number of columns etc\n\n\n    if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n      r.setAttribute('data-dt-row', row.idx);\n      rows.push(r);\n    } else {\n      // Otherwise create a row with a wrapper\n      var created = $('<tr><td></td></tr>').attr('data-dt-row', row.idx).addClass(k);\n      $('td', created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);\n      rows.push(created[0]);\n    }\n  };\n\n  addRow(data, klass);\n\n  if (row._details) {\n    row._details.detach();\n  }\n\n  row._details = $(rows); // If the children were already shown, that state should be retained\n\n  if (row._detailsShow) {\n    row._details.insertAfter(row.nTr);\n  }\n}; // Make state saving of child row details async to allow them to be batch processed\n\n\nvar __details_state = DataTable.util.throttle(function (ctx) {\n  _fnSaveState(ctx[0]);\n}, 500);\n\nvar __details_remove = function (api, idx) {\n  var ctx = api.context;\n\n  if (ctx.length) {\n    var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n\n    if (row && row._details) {\n      row._details.remove();\n\n      row._detailsShow = undefined;\n      row._details = undefined;\n      $(row.nTr).removeClass('dt-hasChild');\n\n      __details_state(ctx);\n    }\n  }\n};\n\nvar __details_display = function (api, show) {\n  var ctx = api.context;\n\n  if (ctx.length && api.length) {\n    var row = ctx[0].aoData[api[0]];\n\n    if (row._details) {\n      row._detailsShow = show;\n\n      if (show) {\n        row._details.insertAfter(row.nTr);\n\n        $(row.nTr).addClass('dt-hasChild');\n      } else {\n        row._details.detach();\n\n        $(row.nTr).removeClass('dt-hasChild');\n      }\n\n      _fnCallbackFire(ctx[0], null, 'childRow', [show, api.row(api[0])]);\n\n      __details_events(ctx[0]);\n\n      __details_state(ctx);\n    }\n  }\n};\n\nvar __details_events = function (settings) {\n  var api = new _Api(settings);\n  var namespace = '.dt.DT_details';\n  var drawEvent = 'draw' + namespace;\n  var colvisEvent = 'column-sizing' + namespace;\n  var destroyEvent = 'destroy' + namespace;\n  var data = settings.aoData;\n  api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n\n  if (_pluck(data, '_details').length > 0) {\n    // On each draw, insert the required elements into the document\n    api.on(drawEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n\n      api.rows({\n        page: 'current'\n      }).eq(0).each(function (idx) {\n        // Internal data grab\n        var row = data[idx];\n\n        if (row._detailsShow) {\n          row._details.insertAfter(row.nTr);\n        }\n      });\n    }); // Column visibility change - update the colspan\n\n    api.on(colvisEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      } // Update the colspan for the details rows (note, only if it already has\n      // a colspan)\n\n\n      var row,\n          visible = _fnVisbleColumns(ctx);\n\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        row = data[i];\n\n        if (row && row._details) {\n          row._details.each(function () {\n            var el = $(this).children('td');\n\n            if (el.length == 1) {\n              el.attr('colspan', visible);\n            }\n          });\n        }\n      }\n    }); // Table destroyed - nuke any child rows\n\n    api.on(destroyEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        if (data[i] && data[i]._details) {\n          __details_remove(api, i);\n        }\n      }\n    });\n  }\n}; // Strings for the method names to help minification\n\n\nvar _emp = '';\n\nvar _child_obj = _emp + 'row().child';\n\nvar _child_mth = _child_obj + '()'; // data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n\n\n_api_register(_child_mth, function (data, klass) {\n  var ctx = this.context;\n\n  if (data === undefined) {\n    // get\n    return ctx.length && this.length && ctx[0].aoData[this[0]] ? ctx[0].aoData[this[0]]._details : undefined;\n  } else if (data === true) {\n    // show\n    this.child.show();\n  } else if (data === false) {\n    // remove\n    __details_remove(this);\n  } else if (ctx.length && this.length) {\n    // set\n    __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n  }\n\n  return this;\n});\n\n_api_register([_child_obj + '.show()', _child_mth + '.show()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, true);\n\n  return this;\n});\n\n_api_register([_child_obj + '.hide()', _child_mth + '.hide()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, false);\n\n  return this;\n});\n\n_api_register([_child_obj + '.remove()', _child_mth + '.remove()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_remove(this);\n\n  return this;\n});\n\n_api_register(_child_obj + '.isShown()', function () {\n  var ctx = this.context;\n\n  if (ctx.length && this.length) {\n    // _detailsShown as false or undefined will fall through to return false\n    return ctx[0].aoData[this[0]]._detailsShow || false;\n  }\n\n  return false;\n});\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\n\nvar __re_column_selector = /^([^:]+):(name|title|visIdx|visible)$/; // r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\n\nvar __columnData = function (settings, column, r1, r2, rows, type) {\n  var a = [];\n\n  for (var row = 0, ien = rows.length; row < ien; row++) {\n    a.push(_fnGetCellData(settings, rows[row], column, type));\n  }\n\n  return a;\n};\n\nvar __column_selector = function (settings, selector, opts) {\n  var columns = settings.aoColumns,\n      names = _pluck(columns, 'sName'),\n      titles = _pluck(columns, 'sTitle'),\n      cells = DataTable.util.get('[].[].cell')(settings.aoHeader),\n      nodes = _unique(_flatten([], cells));\n\n  var run = function (s) {\n    var selInt = _intVal(s); // Selector - all\n\n\n    if (s === '') {\n      return _range(columns.length);\n    } // Selector - index\n\n\n    if (selInt !== null) {\n      return [selInt >= 0 ? selInt : // Count from left\n      columns.length + selInt // Count from right (+ because its a negative value)\n      ];\n    } // Selector = function\n\n\n    if (typeof s === 'function') {\n      var rows = _selector_row_indexes(settings, opts);\n\n      return columns.map(function (col, idx) {\n        return s(idx, __columnData(settings, idx, 0, 0, rows)) ? idx : null;\n      });\n    } // jQuery or string selector\n\n\n    var match = typeof s === 'string' ? s.match(__re_column_selector) : '';\n\n    if (match) {\n      switch (match[2]) {\n        case 'visIdx':\n        case 'visible':\n          var idx = parseInt(match[1], 10); // Visible index given, convert to column index\n\n          if (idx < 0) {\n            // Counting from the right\n            var visColumns = columns.map(function (col, i) {\n              return col.bVisible ? i : null;\n            });\n            return [visColumns[visColumns.length + idx]];\n          } // Counting from the left\n\n\n          return [_fnVisibleToColumnIndex(settings, idx)];\n\n        case 'name':\n          // match by name. `names` is column index complete and in order\n          return names.map(function (name, i) {\n            return name === match[1] ? i : null;\n          });\n\n        case 'title':\n          // match by column title\n          return titles.map(function (title, i) {\n            return title === match[1] ? i : null;\n          });\n\n        default:\n          return [];\n      }\n    } // Cell in the table body\n\n\n    if (s.nodeName && s._DT_CellIndex) {\n      return [s._DT_CellIndex.column];\n    } // jQuery selector on the TH elements for the columns\n\n\n    var jqResult = $(nodes).filter(s).map(function () {\n      return _fnColumnsFromHeader(this); // `nodes` is column index complete and in order\n    }).toArray();\n\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    } // Otherwise a node which might have a `dt-column` data attribute, or be\n    // a child or such an element\n\n\n    var host = $(s).closest('*[data-dt-column]');\n    return host.length ? [host.data('dt-column')] : [];\n  };\n\n  return _selector_run('column', selector, run, settings, opts);\n};\n\nvar __setColumnVis = function (settings, column, vis) {\n  var cols = settings.aoColumns,\n      col = cols[column],\n      data = settings.aoData,\n      cells,\n      i,\n      ien,\n      tr; // Get\n\n  if (vis === undefined) {\n    return col.bVisible;\n  } // Set\n  // No change\n\n\n  if (col.bVisible === vis) {\n    return false;\n  }\n\n  if (vis) {\n    // Insert column\n    // Need to decide if we should use appendChild or insertBefore\n    var insertBefore = _pluck(cols, 'bVisible').indexOf(true, column + 1);\n\n    for (i = 0, ien = data.length; i < ien; i++) {\n      if (data[i]) {\n        tr = data[i].nTr;\n        cells = data[i].anCells;\n\n        if (tr) {\n          // insertBefore can act like appendChild if 2nd arg is null\n          tr.insertBefore(cells[column], cells[insertBefore] || null);\n        }\n      }\n    }\n  } else {\n    // Remove column\n    $(_pluck(settings.aoData, 'anCells', column)).detach();\n  } // Common actions\n\n\n  col.bVisible = vis;\n\n  _colGroup(settings);\n\n  return true;\n};\n\n_api_register('columns()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __column_selector(settings, selector, opts);\n  }, 1); // Want argument shifting here and in _row_selector?\n\n  inst.selector.cols = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n\n_api_registerPlural('columns().header()', 'column().header()', function (row) {\n  return this.iterator('column', function (settings, column) {\n    var header = settings.aoHeader;\n    var target = row !== undefined ? row : settings.bSortCellsTop // legacy support\n    ? 0 : header.length - 1;\n    return header[target][column].cell;\n  }, 1);\n});\n\n_api_registerPlural('columns().footer()', 'column().footer()', function (row) {\n  return this.iterator('column', function (settings, column) {\n    var footer = settings.aoFooter;\n\n    if (!footer.length) {\n      return null;\n    }\n\n    return settings.aoFooter[row !== undefined ? row : 0][column].cell;\n  }, 1);\n});\n\n_api_registerPlural('columns().data()', 'column().data()', function () {\n  return this.iterator('column-rows', __columnData, 1);\n});\n\n_api_registerPlural('columns().render()', 'column().render()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return __columnData(settings, column, i, j, rows, type);\n  }, 1);\n});\n\n_api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].mData;\n  }, 1);\n});\n\n_api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, type === 'search' ? '_aFilterData' : '_aSortData', column);\n  }, 1);\n});\n\n_api_registerPlural('columns().init()', 'column().init()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column];\n  }, 1);\n});\n\n_api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, 'anCells', column);\n  }, 1);\n});\n\n_api_registerPlural('columns().titles()', 'column().title()', function (title, row) {\n  return this.iterator('column', function (settings, column) {\n    // Argument shifting\n    if (typeof title === 'number') {\n      row = title;\n      title = undefined;\n    }\n\n    var span = $('span.dt-column-title', this.column(column).header(row));\n\n    if (title !== undefined) {\n      span.html(title);\n      return this;\n    }\n\n    return span.html();\n  }, 1);\n});\n\n_api_registerPlural('columns().types()', 'column().type()', function () {\n  return this.iterator('column', function (settings, column) {\n    var type = settings.aoColumns[column].sType; // If the type was invalidated, then resolve it. This actually does\n    // all columns at the moment. Would only happen once if getting all\n    // column's data types.\n\n    if (!type) {\n      _fnColumnTypes(settings);\n    }\n\n    return type;\n  }, 1);\n});\n\n_api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n  var that = this;\n  var changed = [];\n  var ret = this.iterator('column', function (settings, column) {\n    if (vis === undefined) {\n      return settings.aoColumns[column].bVisible;\n    } // else\n\n\n    if (__setColumnVis(settings, column, vis)) {\n      changed.push(column);\n    }\n  }); // Group the column visibility changes\n\n  if (vis !== undefined) {\n    this.iterator('table', function (settings) {\n      // Redraw the header after changes\n      _fnDrawHead(settings, settings.aoHeader);\n\n      _fnDrawHead(settings, settings.aoFooter); // Update colspan for no records display. Child rows and extensions will use their own\n      // listeners to do this - only need to update the empty table item here\n\n\n      if (!settings.aiDisplay.length) {\n        $(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n      }\n\n      _fnSaveState(settings); // Second loop once the first is done for events\n\n\n      that.iterator('column', function (settings, column) {\n        if (changed.includes(column)) {\n          _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n        }\n      });\n\n      if (changed.length && (calc === undefined || calc)) {\n        that.columns.adjust();\n      }\n    });\n  }\n\n  return ret;\n});\n\n_api_registerPlural('columns().widths()', 'column().width()', function () {\n  // Injects a fake row into the table for just a moment so the widths can\n  // be read, regardless of colspan in the header and rows being present in\n  // the body\n  var columns = this.columns(':visible').count();\n  var row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n  $(this.table().body()).append(row);\n  var widths = row.children().map(function () {\n    return $(this).outerWidth();\n  });\n  row.remove();\n  return this.iterator('column', function (settings, column) {\n    var visIdx = _fnColumnIndexToVisible(settings, column);\n\n    return visIdx !== null ? widths[visIdx] : 0;\n  }, 1);\n});\n\n_api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n  return this.iterator('column', function (settings, column) {\n    return type === 'visible' ? _fnColumnIndexToVisible(settings, column) : column;\n  }, 1);\n});\n\n_api_register('columns.adjust()', function () {\n  return this.iterator('table', function (settings) {\n    _fnAdjustColumnSizing(settings);\n  }, 1);\n});\n\n_api_register('column.index()', function (type, idx) {\n  if (this.context.length !== 0) {\n    var ctx = this.context[0];\n\n    if (type === 'fromVisible' || type === 'toData') {\n      return _fnVisibleToColumnIndex(ctx, idx);\n    } else if (type === 'fromData' || type === 'toVisible') {\n      return _fnColumnIndexToVisible(ctx, idx);\n    }\n  }\n});\n\n_api_register('column()', function (selector, opts) {\n  return _selector_first(this.columns(selector, opts));\n});\n\nvar __cell_selector = function (settings, selector, opts) {\n  var data = settings.aoData;\n\n  var rows = _selector_row_indexes(settings, opts);\n\n  var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n\n  var allCells = $(_flatten([], cells));\n  var row;\n  var columns = settings.aoColumns.length;\n  var a, i, ien, j, o, host;\n\n  var run = function (s) {\n    var fnSelector = typeof s === 'function';\n\n    if (s === null || s === undefined || fnSelector) {\n      // All cells and function selectors\n      a = [];\n\n      for (i = 0, ien = rows.length; i < ien; i++) {\n        row = rows[i];\n\n        for (j = 0; j < columns; j++) {\n          o = {\n            row: row,\n            column: j\n          };\n\n          if (fnSelector) {\n            // Selector - function\n            host = data[row];\n\n            if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n              a.push(o);\n            }\n          } else {\n            // Selector - all\n            a.push(o);\n          }\n        }\n      }\n\n      return a;\n    } // Selector - index\n\n\n    if ($.isPlainObject(s)) {\n      // Valid cell index and its in the array of selectable rows\n      return s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ? [s] : [];\n    } // Selector - jQuery filtered cells\n\n\n    var jqResult = allCells.filter(s).map(function (i, el) {\n      return {\n        // use a new object, in case someone changes the values\n        row: el._DT_CellIndex.row,\n        column: el._DT_CellIndex.column\n      };\n    }).toArray();\n\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    } // Otherwise the selector is a node, and there is one last option - the\n    // element might be a child of an element which has dt-row and dt-column\n    // data attributes\n\n\n    host = $(s).closest('*[data-dt-row]');\n    return host.length ? [{\n      row: host.data('dt-row'),\n      column: host.data('dt-column')\n    }] : [];\n  };\n\n  return _selector_run('cell', selector, run, settings, opts);\n};\n\n_api_register('cells()', function (rowSelector, columnSelector, opts) {\n  // Argument shifting\n  if ($.isPlainObject(rowSelector)) {\n    // Indexes\n    if (rowSelector.row === undefined) {\n      // Selector options in first parameter\n      opts = rowSelector;\n      rowSelector = null;\n    } else {\n      // Cell index objects in first parameter\n      opts = columnSelector;\n      columnSelector = null;\n    }\n  }\n\n  if ($.isPlainObject(columnSelector)) {\n    opts = columnSelector;\n    columnSelector = null;\n  } // Cell selector\n\n\n  if (columnSelector === null || columnSelector === undefined) {\n    return this.iterator('table', function (settings) {\n      return __cell_selector(settings, rowSelector, _selector_opts(opts));\n    });\n  } // The default built in options need to apply to row and columns\n\n\n  var internalOpts = opts ? {\n    page: opts.page,\n    order: opts.order,\n    search: opts.search\n  } : {}; // Row + column selector\n\n  var columns = this.columns(columnSelector, internalOpts);\n  var rows = this.rows(rowSelector, internalOpts);\n  var i, ien, j, jen;\n  var cellsNoOpts = this.iterator('table', function (settings, idx) {\n    var a = [];\n\n    for (i = 0, ien = rows[idx].length; i < ien; i++) {\n      for (j = 0, jen = columns[idx].length; j < jen; j++) {\n        a.push({\n          row: rows[idx][i],\n          column: columns[idx][j]\n        });\n      }\n    }\n\n    return a;\n  }, 1); // There is currently only one extension which uses a cell selector extension\n  // It is a _major_ performance drag to run this if it isn't needed, so this is\n  // an extension specific check at the moment\n\n  var cells = opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;\n  $.extend(cells.selector, {\n    cols: columnSelector,\n    rows: rowSelector,\n    opts: opts\n  });\n  return cells;\n});\n\n_api_registerPlural('cells().nodes()', 'cell().node()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    var data = settings.aoData[row];\n    return data && data.anCells ? data.anCells[column] : undefined;\n  }, 1);\n});\n\n_api_register('cells().data()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column);\n  }, 1);\n});\n\n_api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n  type = type === 'search' ? '_aFilterData' : '_aSortData';\n  return this.iterator('cell', function (settings, row, column) {\n    return settings.aoData[row][type][column];\n  }, 1);\n});\n\n_api_registerPlural('cells().render()', 'cell().render()', function (type) {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column, type);\n  }, 1);\n});\n\n_api_registerPlural('cells().indexes()', 'cell().index()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return {\n      row: row,\n      column: column,\n      columnVisible: _fnColumnIndexToVisible(settings, column)\n    };\n  }, 1);\n});\n\n_api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n  return this.iterator('cell', function (settings, row, column) {\n    _fnInvalidate(settings, row, src, column);\n  });\n});\n\n_api_register('cell()', function (rowSelector, columnSelector, opts) {\n  return _selector_first(this.cells(rowSelector, columnSelector, opts));\n});\n\n_api_register('cell().data()', function (data) {\n  var ctx = this.context;\n  var cell = this[0];\n\n  if (data === undefined) {\n    // Get\n    return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined;\n  } // Set\n\n\n  _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n\n  _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n\n  return this;\n});\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n */\n\n/**\n* Set the ordering for the table.\n*\n* @param {integer} order Column index to sort upon.\n* @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n* @returns {DataTables.Api} this\n*/\n\n/**\n* Set the ordering for the table.\n*\n* @param {array} order 1D array of sorting information to be applied.\n* @param {array} [...] Optional additional sorting conditions\n* @returns {DataTables.Api} this\n*/\n\n/**\n* Set the ordering for the table.\n*\n* @param {array} order 2D array of sorting information to be applied.\n* @returns {DataTables.Api} this\n*/\n\n\n_api_register('order()', function (order, dir) {\n  var ctx = this.context;\n  var args = Array.prototype.slice.call(arguments);\n\n  if (order === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].aaSorting : undefined;\n  } // set\n\n\n  if (typeof order === 'number') {\n    // Simple column / direction passed in\n    order = [[order, dir]];\n  } else if (args.length > 1) {\n    // Arguments passed in (list of 1D arrays)\n    order = args;\n  } // otherwise a 2D array was passed in\n\n\n  return this.iterator('table', function (settings) {\n    settings.aaSorting = Array.isArray(order) ? order.slice() : order;\n  });\n});\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n\n\n_api_register('order.listener()', function (node, column, callback) {\n  return this.iterator('table', function (settings) {\n    _fnSortAttachListener(settings, node, {}, column, callback);\n  });\n});\n\n_api_register('order.fixed()', function (set) {\n  if (!set) {\n    var ctx = this.context;\n    var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;\n    return Array.isArray(fixed) ? {\n      pre: fixed\n    } : fixed;\n  }\n\n  return this.iterator('table', function (settings) {\n    settings.aaSortingFixed = $.extend(true, {}, set);\n  });\n}); // Order by the selected column(s)\n\n\n_api_register(['columns().order()', 'column().order()'], function (dir) {\n  var that = this;\n\n  if (!dir) {\n    return this.iterator('column', function (settings, idx) {\n      var sort = _fnSortFlatten(settings);\n\n      for (var i = 0, ien = sort.length; i < ien; i++) {\n        if (sort[i].col === idx) {\n          return sort[i].dir;\n        }\n      }\n\n      return null;\n    }, 1);\n  } else {\n    return this.iterator('table', function (settings, i) {\n      settings.aaSorting = that[i].map(function (col) {\n        return [col, dir];\n      });\n    });\n  }\n});\n\n_api_registerPlural('columns().orderable()', 'column().orderable()', function (directions) {\n  return this.iterator('column', function (settings, idx) {\n    var col = settings.aoColumns[idx];\n    return directions ? col.asSorting : col.bSortable;\n  }, 1);\n});\n\n_api_register('processing()', function (show) {\n  return this.iterator('table', function (ctx) {\n    _fnProcessingDisplay(ctx, show);\n  });\n});\n\n_api_register('search()', function (input, regex, smart, caseInsen) {\n  var ctx = this.context;\n\n  if (input === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].oPreviousSearch.search : undefined;\n  } // set\n\n\n  return this.iterator('table', function (settings) {\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n\n    if (typeof regex === 'object') {\n      // New style options to pass to the search builder\n      _fnFilterComplete(settings, $.extend(settings.oPreviousSearch, regex, {\n        search: input\n      }));\n    } else {\n      // Compat for the old options\n      _fnFilterComplete(settings, $.extend(settings.oPreviousSearch, {\n        search: input,\n        regex: regex === null ? false : regex,\n        smart: smart === null ? true : smart,\n        caseInsensitive: caseInsen === null ? true : caseInsen\n      }));\n    }\n  });\n});\n\n_api_register('search.fixed()', function (name, search) {\n  var ret = this.iterator(true, 'table', function (settings) {\n    var fixed = settings.searchFixed;\n\n    if (!name) {\n      return Object.keys(fixed);\n    } else if (search === undefined) {\n      return fixed[name];\n    } else if (search === null) {\n      delete fixed[name];\n    } else {\n      fixed[name] = search;\n    }\n\n    return this;\n  });\n  return name !== undefined && search === undefined ? ret[0] : ret;\n});\n\n_api_registerPlural('columns().search()', 'column().search()', function (input, regex, smart, caseInsen) {\n  return this.iterator('column', function (settings, column) {\n    var preSearch = settings.aoPreSearchCols;\n\n    if (input === undefined) {\n      // get\n      return preSearch[column].search;\n    } // set\n\n\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n\n    if (typeof regex === 'object') {\n      // New style options to pass to the search builder\n      $.extend(preSearch[column], regex, {\n        search: input\n      });\n    } else {\n      // Old style (with not all options available)\n      $.extend(preSearch[column], {\n        search: input,\n        regex: regex === null ? false : regex,\n        smart: smart === null ? true : smart,\n        caseInsensitive: caseInsen === null ? true : caseInsen\n      });\n    }\n\n    _fnFilterComplete(settings, settings.oPreviousSearch);\n  });\n});\n\n_api_register(['columns().search.fixed()', 'column().search.fixed()'], function (name, search) {\n  var ret = this.iterator(true, 'column', function (settings, colIdx) {\n    var fixed = settings.aoColumns[colIdx].searchFixed;\n\n    if (!name) {\n      return Object.keys(fixed);\n    } else if (search === undefined) {\n      return fixed[name];\n    } else if (search === null) {\n      delete fixed[name];\n    } else {\n      fixed[name] = search;\n    }\n\n    return this;\n  });\n  return name !== undefined && search === undefined ? ret[0] : ret;\n});\n/*\n * State API methods\n */\n\n\n_api_register('state()', function (set, ignoreTime) {\n  // getter\n  if (!set) {\n    return this.context.length ? this.context[0].oSavedState : null;\n  }\n\n  var setMutate = $.extend(true, {}, set); // setter\n\n  return this.iterator('table', function (settings) {\n    if (ignoreTime !== false) {\n      setMutate.time = +new Date() + 100;\n    }\n\n    _fnImplementState(settings, setMutate, function () {});\n  });\n});\n\n_api_register('state.clear()', function () {\n  return this.iterator('table', function (settings) {\n    // Save an empty object\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n  });\n});\n\n_api_register('state.loaded()', function () {\n  return this.context.length ? this.context[0].oLoadedState : null;\n});\n\n_api_register('state.save()', function () {\n  return this.iterator('table', function (settings) {\n    _fnSaveState(settings);\n  });\n});\n/**\n * Set the jQuery or window object to be used by DataTables\n *\n * @param {*} module Library / container object\n * @param {string} [type] Library or container type `lib`, `win` or `datetime`.\n *   If not provided, automatic detection is attempted.\n */\n\n\nDataTable.use = function (module, type) {\n  if (type === 'lib' || module.fn) {\n    $ = module;\n  } else if (type == 'win' || module.document) {\n    window = module;\n    document = module.document;\n  } else if (type === 'datetime' || module.type === 'DateTime') {\n    DataTable.DateTime = module;\n  }\n};\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\n\n\nDataTable.factory = function (root, jq) {\n  var is = false; // Test if the first parameter is a window object\n\n  if (root && root.document) {\n    window = root;\n    document = root.document;\n  } // Test if the second parameter is a jQuery object\n\n\n  if (jq && jq.fn && jq.fn.jquery) {\n    $ = jq;\n    is = true;\n  }\n\n  return is;\n};\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\n\n\nDataTable.versionCheck = function (version, version2) {\n  var aThis = version2 ? version2.split('.') : DataTable.version.split('.');\n  var aThat = version.split('.');\n  var iThis, iThat;\n\n  for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n    iThis = parseInt(aThis[i], 10) || 0;\n    iThat = parseInt(aThat[i], 10) || 0; // Parts are the same, keep comparing\n\n    if (iThis === iThat) {\n      continue;\n    } // Parts are different, return immediately\n\n\n    return iThis > iThat;\n  }\n\n  return true;\n};\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\n\n\nDataTable.isDataTable = function (table) {\n  var t = $(table).get(0);\n  var is = false;\n\n  if (table instanceof DataTable.Api) {\n    return true;\n  }\n\n  $.each(DataTable.settings, function (i, o) {\n    var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n    var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n    if (o.nTable === t || head === t || foot === t) {\n      is = true;\n    }\n  });\n  return is;\n};\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\n\n\nDataTable.tables = function (visible) {\n  var api = false;\n\n  if ($.isPlainObject(visible)) {\n    api = visible.api;\n    visible = visible.visible;\n  }\n\n  var a = DataTable.settings.filter(function (o) {\n    return !visible || visible && $(o.nTable).is(':visible') ? true : false;\n  }).map(function (o) {\n    return o.nTable;\n  });\n  return api ? new _Api(a) : a;\n};\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\n\n\nDataTable.camelToHungarian = _fnCamelToHungarian;\n/**\n *\n */\n\n_api_register('$()', function (selector, opts) {\n  var rows = this.rows(opts).nodes(),\n      // Get all rows\n  jqRows = $(rows);\n  return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()));\n}); // jQuery functions to operate on the tables\n\n\n$.each(['on', 'one', 'off'], function (i, key) {\n  _api_register(key + '()', function () {\n    var args = Array.prototype.slice.call(arguments); // Add the `dt` namespace automatically if it isn't already present\n\n    args[0] = args[0].split(/\\s/).map(function (e) {\n      return !e.match(/\\.dt\\b/) ? e + '.dt' : e;\n    }).join(' ');\n    var inst = $(this.tables().nodes());\n    inst[key].apply(inst, args);\n    return this;\n  });\n});\n\n_api_register('clear()', function () {\n  return this.iterator('table', function (settings) {\n    _fnClearTable(settings);\n  });\n});\n\n_api_register('error()', function (msg) {\n  return this.iterator('table', function (settings) {\n    _fnLog(settings, 0, msg);\n  });\n});\n\n_api_register('settings()', function () {\n  return new _Api(this.context, this.context);\n});\n\n_api_register('init()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].oInit : null;\n});\n\n_api_register('data()', function () {\n  return this.iterator('table', function (settings) {\n    return _pluck(settings.aoData, '_aData');\n  }).flatten();\n});\n\n_api_register('trigger()', function (name, args, bubbles) {\n  return this.iterator('table', function (settings) {\n    return _fnCallbackFire(settings, null, name, args, bubbles);\n  }).flatten();\n});\n\n_api_register('ready()', function (fn) {\n  var ctx = this.context; // Get status of first table\n\n  if (!fn) {\n    return ctx.length ? ctx[0]._bInitComplete || false : null;\n  } // Function to run either once the table becomes ready or\n  // immediately if it is already ready.\n\n\n  return this.tables().every(function () {\n    if (this.context[0]._bInitComplete) {\n      fn.call(this);\n    } else {\n      this.on('init', function () {\n        fn.call(this);\n      });\n    }\n  });\n});\n\n_api_register('destroy()', function (remove) {\n  remove = remove || false;\n  return this.iterator('table', function (settings) {\n    var classes = settings.oClasses;\n    var table = settings.nTable;\n    var tbody = settings.nTBody;\n    var thead = settings.nTHead;\n    var tfoot = settings.nTFoot;\n    var jqTable = $(table);\n    var jqTbody = $(tbody);\n    var jqWrapper = $(settings.nTableWrapper);\n    var rows = settings.aoData.map(function (r) {\n      return r ? r.nTr : null;\n    });\n    var orderClasses = classes.order; // Flag to note that the table is currently being destroyed - no action\n    // should be taken\n\n    settings.bDestroying = true; // Fire off the destroy callbacks for plug-ins etc\n\n    _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings], true); // If not being removed from the document, make all columns visible\n\n\n    if (!remove) {\n      new _Api(settings).columns().visible(true);\n    } // Blitz all `DT` namespaced events (these are internal events, the\n    // lowercase, `dt` events are user subscribed and they are responsible\n    // for removing them\n\n\n    jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n    $(window).off('.DT-' + settings.sInstance); // When scrolling we had to break the table up - restore it\n\n    if (table != thead.parentNode) {\n      jqTable.children('thead').detach();\n      jqTable.append(thead);\n    }\n\n    if (tfoot && table != tfoot.parentNode) {\n      jqTable.children('tfoot').detach();\n      jqTable.append(tfoot);\n    }\n\n    settings.colgroup.remove();\n    settings.aaSorting = [];\n    settings.aaSortingFixed = [];\n\n    _fnSortingClasses(settings);\n\n    $('th, td', thead).removeClass(orderClasses.canAsc + ' ' + orderClasses.canDesc + ' ' + orderClasses.isAsc + ' ' + orderClasses.isDesc).css('width', ''); // Add the TR elements back into the table in their original order\n\n    jqTbody.children().detach();\n    jqTbody.append(rows);\n    var orig = settings.nTableWrapper.parentNode;\n    var insertBefore = settings.nTableWrapper.nextSibling; // Remove the DataTables generated nodes, events and classes\n\n    var removedMethod = remove ? 'remove' : 'detach';\n    jqTable[removedMethod]();\n    jqWrapper[removedMethod](); // If we need to reattach the table to the document\n\n    if (!remove && orig) {\n      // insertBefore acts like appendChild if !arg[1]\n      orig.insertBefore(table, insertBefore); // Restore the width of the original table - was read from the style property,\n      // so we can restore directly to that\n\n      jqTable.css('width', settings.sDestroyWidth).removeClass(classes.table);\n    }\n    /* Remove the settings object from the settings array */\n\n\n    var idx = DataTable.settings.indexOf(settings);\n\n    if (idx !== -1) {\n      DataTable.settings.splice(idx, 1);\n    }\n  });\n}); // Add the `every()` method for rows, columns and cells in a compact form\n\n\n$.each(['column', 'row', 'cell'], function (i, type) {\n  _api_register(type + 's().every()', function (fn) {\n    var opts = this.selector.opts;\n    var api = this;\n    var inst;\n    var counter = 0;\n    return this.iterator('every', function (settings, selectedIdx, tableIdx) {\n      inst = api[type](selectedIdx, opts);\n\n      if (type === 'cell') {\n        fn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n      } else {\n        fn.call(inst, selectedIdx, tableIdx, counter);\n      }\n\n      counter++;\n    });\n  });\n}); // i18n method for extensions to be able to use the language object from the\n// DataTable\n\n_api_register('i18n()', function (token, def, plural) {\n  var ctx = this.context[0];\n\n  var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n\n  if (resolved === undefined) {\n    resolved = def;\n  }\n\n  if ($.isPlainObject(resolved)) {\n    resolved = plural !== undefined && resolved[plural] !== undefined ? resolved[plural] : resolved._;\n  }\n\n  return typeof resolved === 'string' ? resolved.replace('%d', plural) // nb: plural might be undefined,\n  : resolved;\n});\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\n\n\nDataTable.version = \"2.0.2\";\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\n\nDataTable.settings = [];\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\n\nDataTable.models = {};\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\n\nDataTable.models.oSearch = {\n  /**\n   * Flag to indicate if the filtering should be case insensitive or not\n   */\n  \"caseInsensitive\": true,\n\n  /**\n   * Applied search term\n   */\n  \"search\": \"\",\n\n  /**\n   * Flag to indicate if the search term should be interpreted as a\n   * regular expression (true) or not (false) and therefore and special\n   * regex characters escaped.\n   */\n  \"regex\": false,\n\n  /**\n   * Flag to indicate if DataTables is to use its smart filtering or not.\n   */\n  \"smart\": true,\n\n  /**\n   * Flag to indicate if DataTables should only trigger a search when\n   * the return key is pressed.\n   */\n  \"return\": false\n};\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\n\nDataTable.models.oRow = {\n  /**\n   * TR element for the row\n   */\n  \"nTr\": null,\n\n  /**\n   * Array of TD elements for each row. This is null until the row has been\n   * created.\n   */\n  \"anCells\": null,\n\n  /**\n   * Data object from the original data source for the row. This is either\n   * an array if using the traditional form of DataTables, or an object if\n   * using mData options. The exact type will depend on the passed in\n   * data from the data source, or will be an array if using DOM a data\n   * source.\n   */\n  \"_aData\": [],\n\n  /**\n   * Sorting data cache - this array is ostensibly the same length as the\n   * number of columns (although each index is generated only as it is\n   * needed), and holds the data that is used for sorting each column in the\n   * row. We do this cache generation at the start of the sort in order that\n   * the formatting of the sort data need be done only once for each cell\n   * per sort. This array should not be read from or written to by anything\n   * other than the master sorting methods.\n   */\n  \"_aSortData\": null,\n\n  /**\n   * Per cell filtering data cache. As per the sort data cache, used to\n   * increase the performance of the filtering in DataTables\n   */\n  \"_aFilterData\": null,\n\n  /**\n   * Filtering data cache. This is the same as the cell filtering cache, but\n   * in this case a string rather than an array. This is easily computed with\n   * a join on `_aFilterData`, but is provided as a cache so the join isn't\n   * needed on every search (memory traded for performance)\n   */\n  \"_sFilterRow\": null,\n\n  /**\n   * Denote if the original data source was from the DOM, or the data source\n   * object. This is used for invalidating data, so DataTables can\n   * automatically read data from the original source, unless uninstructed\n   * otherwise.\n   */\n  \"src\": null,\n\n  /**\n   * Index in the aoData array. This saves an indexOf lookup when we have the\n   * object, but want to know the index\n   */\n  \"idx\": -1,\n\n  /**\n   * Cached display value\n   */\n  displayData: null\n};\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\n\nDataTable.models.oColumn = {\n  /**\n   * Column index.\n   */\n  \"idx\": null,\n\n  /**\n   * A list of the columns that sorting should occur on when this column\n   * is sorted. That this property is an array allows multi-column sorting\n   * to be defined for a column (for example first name / last name columns\n   * would benefit from this). The values are integers pointing to the\n   * columns to be sorted on (typically it will be a single integer pointing\n   * at itself, but that doesn't need to be the case).\n   */\n  \"aDataSort\": null,\n\n  /**\n   * Define the sorting directions that are applied to the column, in sequence\n   * as the column is repeatedly sorted upon - i.e. the first value is used\n   * as the sorting direction when the column if first sorted (clicked on).\n   * Sort it again (click again) and it will move on to the next index.\n   * Repeat until loop.\n   */\n  \"asSorting\": null,\n\n  /**\n   * Flag to indicate if the column is searchable, and thus should be included\n   * in the filtering or not.\n   */\n  \"bSearchable\": null,\n\n  /**\n   * Flag to indicate if the column is sortable or not.\n   */\n  \"bSortable\": null,\n\n  /**\n   * Flag to indicate if the column is currently visible in the table or not\n   */\n  \"bVisible\": null,\n\n  /**\n   * Store for manual type assignment using the `column.type` option. This\n   * is held in store so we can manipulate the column's `sType` property.\n   */\n  \"_sManualType\": null,\n\n  /**\n   * Flag to indicate if HTML5 data attributes should be used as the data\n   * source for filtering or sorting. True is either are.\n   */\n  \"_bAttrSrc\": false,\n\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   */\n  \"fnCreatedCell\": null,\n\n  /**\n   * Function to get data from a cell in a column. You should <b>never</b>\n   * access data directly through _aData internally in DataTables - always use\n   * the method attached to this property. It allows mData to function as\n   * required. This function is automatically assigned by the column\n   * initialisation method\n   */\n  \"fnGetData\": null,\n\n  /**\n   * Function to set data for a cell in the column. You should <b>never</b>\n   * set the data directly to _aData internally in DataTables - always use\n   * this method. It allows mData to function as required. This function\n   * is automatically assigned by the column initialisation method\n   */\n  \"fnSetData\": null,\n\n  /**\n   * Property to read the value for the cells in the column from the data\n   * source array / object. If null, then the default content is used, if a\n   * function is given then the return from the function is used.\n   */\n  \"mData\": null,\n\n  /**\n   * Partner property to mData which is used (only when defined) to get\n   * the data - i.e. it is basically the same as mData, but without the\n   * 'set' option, and also the data fed to it is the result from mData.\n   * This is the rendering method to match the data method of mData.\n   */\n  \"mRender\": null,\n\n  /**\n   * The class to apply to all TD elements in the table's TBODY for the column\n   */\n  \"sClass\": null,\n\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   */\n  \"sContentPadding\": null,\n\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because mData\n   * is set to null, or because the data source itself is null).\n   */\n  \"sDefaultContent\": null,\n\n  /**\n   * Name for the column, allowing reference to the column by name as well as\n   * by index (needs a lookup to work by name).\n   */\n  \"sName\": null,\n\n  /**\n   * Custom sorting data type - defines which of the available plug-ins in\n   * afnSortData the custom sorting will use - if any is defined.\n   */\n  \"sSortDataType\": 'std',\n\n  /**\n   * Class to be applied to the header element when sorting on this column\n   */\n  \"sSortingClass\": null,\n\n  /**\n   * Title of the column - what is seen in the TH element (nTh).\n   */\n  \"sTitle\": null,\n\n  /**\n   * Column sorting and filtering type\n   */\n  \"sType\": null,\n\n  /**\n   * Width of the column\n   */\n  \"sWidth\": null,\n\n  /**\n   * Width of the column when it was first \"encountered\"\n   */\n  \"sWidthOrig\": null,\n\n  /** Cached string which is the longest in the column */\n  maxLenString: null,\n\n  /**\n   * Store for named searches\n   */\n  searchFixed: null\n};\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\n\nDataTable.defaults = {\n  /**\n   * An array of data to use for the table, passed in at initialisation which\n   * will be used in preference to any data which is already in the DOM. This is\n   * particularly useful for constructing tables purely in Javascript, for\n   * example with a custom Ajax call.\n   */\n  \"aaData\": null,\n\n  /**\n   * If ordering is enabled, then DataTables will perform a first pass sort on\n   * initialisation. You can define which column(s) the sort is performed\n   * upon, and the sorting direction, with this variable. The `sorting` array\n   * should contain an array for each column to be sorted initially containing\n   * the column's index and a direction string ('asc' or 'desc').\n   */\n  \"aaSorting\": [[0, 'asc']],\n\n  /**\n   * This parameter is basically identical to the `sorting` parameter, but\n   * cannot be overridden by user interaction with the table. What this means\n   * is that you could have a column (visible or hidden) which the sorting\n   * will always be forced on first - any sorting after that (from the user)\n   * will then be performed as required. This can be useful for grouping rows\n   * together.\n   */\n  \"aaSortingFixed\": [],\n\n  /**\n   * DataTables can be instructed to load data to display in the table from a\n   * Ajax source. This option defines how that Ajax call is made and where to.\n   *\n   * The `ajax` property has three different modes of operation, depending on\n   * how it is defined. These are:\n   *\n   * * `string` - Set the URL from where the data should be loaded from.\n   * * `object` - Define properties for `jQuery.ajax`.\n   * * `function` - Custom data get function\n   *\n   * `string`\n   * --------\n   *\n   * As a string, the `ajax` property simply defines the URL from which\n   * DataTables will load data.\n   *\n   * `object`\n   * --------\n   *\n   * As an object, the parameters in the object are passed to\n   * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n   * of the Ajax request. DataTables has a number of default parameters which\n   * you can override using this option. Please refer to the jQuery\n   * documentation for a full description of the options available, although\n   * the following parameters provide additional options in DataTables or\n   * require special consideration:\n   *\n   * * `data` - As with jQuery, `data` can be provided as an object, but it\n   *   can also be used as a function to manipulate the data DataTables sends\n   *   to the server. The function takes a single parameter, an object of\n   *   parameters with the values that DataTables has readied for sending. An\n   *   object may be returned which will be merged into the DataTables\n   *   defaults, or you can add the items to the object that was passed in and\n   *   not return anything from the function. This supersedes `fnServerParams`\n   *   from DataTables 1.9-.\n   *\n   * * `dataSrc` - By default DataTables will look for the property `data` (or\n   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n   *   from an Ajax source or for server-side processing - this parameter\n   *   allows that property to be changed. You can use Javascript dotted\n   *   object notation to get a data source for multiple levels of nesting, or\n   *   it my be used as a function. As a function it takes a single parameter,\n   *   the JSON returned from the server, which can be manipulated as\n   *   required, with the returned value being that used by DataTables as the\n   *   data source for the table.\n   *\n   * * `success` - Should not be overridden it is used internally in\n   *   DataTables. To manipulate / transform the data returned by the server\n   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n   *\n   * `function`\n   * ----------\n   *\n   * As a function, making the Ajax call is left up to yourself allowing\n   * complete control of the Ajax request. Indeed, if desired, a method other\n   * than Ajax could be used to obtain the required data, such as Web storage\n   * or an AIR database.\n   *\n   * The function is given four parameters and no return is required. The\n   * parameters are:\n   *\n   * 1. _object_ - Data to send to the server\n   * 2. _function_ - Callback function that must be executed when the required\n   *    data has been obtained. That data should be passed into the callback\n   *    as the only parameter\n   * 3. _object_ - DataTables settings object for the table\n   */\n  \"ajax\": null,\n\n  /**\n   * This parameter allows you to readily specify the entries in the length drop\n   * down menu that DataTables shows when pagination is enabled. It can be\n   * either a 1D array of options which will be used for both the displayed\n   * option and the value, or a 2D array which will use the array in the first\n   * position as the value, and the array in the second position as the\n   * displayed options (useful for language strings such as 'All').\n   *\n   * Note that the `pageLength` property will be automatically set to the\n   * first value given in this array, unless `pageLength` is also provided.\n   */\n  \"aLengthMenu\": [10, 25, 50, 100],\n\n  /**\n   * The `columns` option in the initialisation parameter allows you to define\n   * details about the way individual columns behave. For a full list of\n   * column options that can be set, please see\n   * {@link DataTable.defaults.column}. Note that if you use `columns` to\n   * define your columns, you must have an entry in the array for every single\n   * column that you have in your table (these can be null if you don't which\n   * to specify any options).\n   */\n  \"aoColumns\": null,\n\n  /**\n   * Very similar to `columns`, `columnDefs` allows you to target a specific\n   * column, multiple columns, or all columns, using the `targets` property of\n   * each object in the array. This allows great flexibility when creating\n   * tables, as the `columnDefs` arrays can be of any length, targeting the\n   * columns you specifically want. `columnDefs` may use any of the column\n   * options available: {@link DataTable.defaults.column}, but it _must_\n   * have `targets` defined in each object in the array. Values in the `targets`\n   * array may be:\n   *   <ul>\n   *     <li>a string - class name will be matched on the TH for the column</li>\n   *     <li>0 or a positive integer - column index counting from the left</li>\n   *     <li>a negative integer - column index counting from the right</li>\n   *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n   *   </ul>\n   */\n  \"aoColumnDefs\": null,\n\n  /**\n   * Basically the same as `search`, this parameter defines the individual column\n   * filtering state at initialisation time. The array must be of the same size\n   * as the number of columns, and each element be an object with the parameters\n   * `search` and `escapeRegex` (the latter is optional). 'null' is also\n   * accepted and the default will be used.\n   */\n  \"aoSearchCols\": [],\n\n  /**\n   * Enable or disable automatic column width calculation. This can be disabled\n   * as an optimisation (it takes some time to calculate the widths) if the\n   * tables widths are passed in using `columns`.\n   */\n  \"bAutoWidth\": true,\n\n  /**\n   * Deferred rendering can provide DataTables with a huge speed boost when you\n   * are using an Ajax or JS data source for the table. This option, when set to\n   * true, will cause DataTables to defer the creation of the table elements for\n   * each row until they are needed for a draw - saving a significant amount of\n   * time.\n   */\n  \"bDeferRender\": true,\n\n  /**\n   * Replace a DataTable which matches the given selector and replace it with\n   * one which has the properties of the new initialisation object passed. If no\n   * table matches the selector, then the new DataTable will be constructed as\n   * per normal.\n   */\n  \"bDestroy\": false,\n\n  /**\n   * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n   * that it allows the end user to input multiple words (space separated) and\n   * will match a row containing those words, even if not in the order that was\n   * specified (this allow matching across multiple columns). Note that if you\n   * wish to use filtering in DataTables this must remain 'true' - to remove the\n   * default filtering input box and retain filtering abilities, please use\n   * {@link DataTable.defaults.dom}.\n   */\n  \"bFilter\": true,\n\n  /**\n   * Used only for compatiblity with DT1\n   * @deprecated\n   */\n  \"bInfo\": true,\n\n  /**\n   * Used only for compatiblity with DT1\n   * @deprecated\n   */\n  \"bLengthChange\": true,\n\n  /**\n   * Enable or disable pagination.\n   */\n  \"bPaginate\": true,\n\n  /**\n   * Enable or disable the display of a 'processing' indicator when the table is\n   * being processed (e.g. a sort). This is particularly useful for tables with\n   * large amounts of data where it can take a noticeable amount of time to sort\n   * the entries.\n   */\n  \"bProcessing\": false,\n\n  /**\n   * Retrieve the DataTables object for the given selector. Note that if the\n   * table has already been initialised, this parameter will cause DataTables\n   * to simply return the object that has already been set up - it will not take\n   * account of any changes you might have made to the initialisation object\n   * passed to DataTables (setting this parameter to true is an acknowledgement\n   * that you understand this). `destroy` can be used to reinitialise a table if\n   * you need.\n   */\n  \"bRetrieve\": false,\n\n  /**\n   * When vertical (y) scrolling is enabled, DataTables will force the height of\n   * the table's viewport to the given height at all times (useful for layout).\n   * However, this can look odd when filtering data down to a small data set,\n   * and the footer is left \"floating\" further down. This parameter (when\n   * enabled) will cause DataTables to collapse the table's viewport down when\n   * the result set will fit within the given Y height.\n   */\n  \"bScrollCollapse\": false,\n\n  /**\n   * Configure DataTables to use server-side processing. Note that the\n   * `ajax` parameter must also be given in order to give DataTables a\n   * source to obtain the required data for each draw.\n   */\n  \"bServerSide\": false,\n\n  /**\n   * Enable or disable sorting of columns. Sorting of individual columns can be\n   * disabled by the `sortable` option for each column.\n   */\n  \"bSort\": true,\n\n  /**\n   * Enable or display DataTables' ability to sort multiple columns at the\n   * same time (activated by shift-click by the user).\n   */\n  \"bSortMulti\": true,\n\n  /**\n   * Allows control over whether DataTables should use the top (true) unique\n   * cell that is found for a single column, or the bottom (false - default).\n   * This is useful when using complex headers.\n   */\n  \"bSortCellsTop\": null,\n\n  /**\n   * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n   * `sorting\\_3` to the columns which are currently being sorted on. This is\n   * presented as a feature switch as it can increase processing time (while\n   * classes are removed and added) so for large data sets you might want to\n   * turn this off.\n   */\n  \"bSortClasses\": true,\n\n  /**\n   * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n   * used to save table display information such as pagination information,\n   * display length, filtering and sorting. As such when the end user reloads\n   * the page the display display will match what thy had previously set up.\n   */\n  \"bStateSave\": false,\n\n  /**\n   * This function is called when a TR element is created (and all TD child\n   * elements have been inserted), or registered if using a DOM source, allowing\n   * manipulation of the TR element (adding classes etc).\n   */\n  \"fnCreatedRow\": null,\n\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify any aspect you want about the created DOM.\n   */\n  \"fnDrawCallback\": null,\n\n  /**\n   * Identical to fnHeaderCallback() but for the table footer this function\n   * allows you to modify the table footer on every 'draw' event.\n   */\n  \"fnFooterCallback\": null,\n\n  /**\n   * When rendering large numbers in the information element for the table\n   * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n   * to have a comma separator for the 'thousands' units (e.g. 1 million is\n   * rendered as \"1,000,000\") to help readability for the end user. This\n   * function will override the default method DataTables uses.\n   */\n  \"fnFormatNumber\": function (toFormat) {\n    return toFormat.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands);\n  },\n\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify the header row. This can be used to calculate and\n   * display useful information about the table.\n   */\n  \"fnHeaderCallback\": null,\n\n  /**\n   * The information element can be used to convey information about the current\n   * state of the table. Although the internationalisation options presented by\n   * DataTables are quite capable of dealing with most customisations, there may\n   * be times where you wish to customise the string further. This callback\n   * allows you to do exactly that.\n   */\n  \"fnInfoCallback\": null,\n\n  /**\n   * Called when the table has been initialised. Normally DataTables will\n   * initialise sequentially and there will be no need for this function,\n   * however, this does not hold true when using external language information\n   * since that is obtained using an async XHR call.\n   */\n  \"fnInitComplete\": null,\n\n  /**\n   * Called at the very start of each table draw and can be used to cancel the\n   * draw by returning false, any other return (including undefined) results in\n   * the full draw occurring).\n   */\n  \"fnPreDrawCallback\": null,\n\n  /**\n   * This function allows you to 'post process' each row after it have been\n   * generated for each table draw, but before it is rendered on screen. This\n   * function might be used for setting the row class name etc.\n   */\n  \"fnRowCallback\": null,\n\n  /**\n   * Load the table state. With this function you can define from where, and how, the\n   * state of a table is loaded. By default DataTables will load from `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   */\n  \"fnStateLoadCallback\": function (settings) {\n    try {\n      return JSON.parse((settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem('DataTables_' + settings.sInstance + '_' + location.pathname));\n    } catch (e) {\n      return {};\n    }\n  },\n\n  /**\n   * Callback which allows modification of the saved state prior to loading that state.\n   * This callback is called when the table is loading state from the stored data, but\n   * prior to the settings object being modified by the saved state. Note that for\n   * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n   * a plug-in.\n   */\n  \"fnStateLoadParams\": null,\n\n  /**\n   * Callback that is called when the state has been loaded from the state saving method\n   * and the DataTables settings object has been modified as a result of the loaded state.\n   */\n  \"fnStateLoaded\": null,\n\n  /**\n   * Save the table state. This function allows you to define where and how the state\n   * information for the table is stored By default DataTables will use `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   */\n  \"fnStateSaveCallback\": function (settings, data) {\n    try {\n      (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem('DataTables_' + settings.sInstance + '_' + location.pathname, JSON.stringify(data));\n    } catch (e) {// noop\n    }\n  },\n\n  /**\n   * Callback which allows modification of the state to be saved. Called when the table\n   * has changed state a new state save is required. This method allows modification of\n   * the state saving object prior to actually doing the save, including addition or\n   * other state properties or modification. Note that for plug-in authors, you should\n   * use the `stateSaveParams` event to save parameters for a plug-in.\n   */\n  \"fnStateSaveParams\": null,\n\n  /**\n   * Duration for which the saved state information is considered valid. After this period\n   * has elapsed the state will be returned to the default.\n   * Value is given in seconds.\n   */\n  \"iStateDuration\": 7200,\n\n  /**\n   * Number of rows to display on a single page when using pagination. If\n   * feature enabled (`lengthChange`) then the end user will be able to override\n   * this to a custom setting using a pop-up menu.\n   */\n  \"iDisplayLength\": 10,\n\n  /**\n   * Define the starting point for data display when using DataTables with\n   * pagination. Note that this parameter is the number of records, rather than\n   * the page number, so if you have 10 records per page and want to start on\n   * the third page, it should be \"20\".\n   */\n  \"iDisplayStart\": 0,\n\n  /**\n   * By default DataTables allows keyboard navigation of the table (sorting, paging,\n   * and filtering) by adding a `tabindex` attribute to the required elements. This\n   * allows you to tab through the controls and press the enter key to activate them.\n   * The tabindex is default 0, meaning that the tab follows the flow of the document.\n   * You can overrule this using this parameter if you wish. Use a value of -1 to\n   * disable built-in keyboard navigation.\n   */\n  \"iTabIndex\": 0,\n\n  /**\n   * Classes that DataTables assigns to the various components and features\n   * that it adds to the HTML table. This allows classes to be configured\n   * during initialisation in addition to through the static\n   * {@link DataTable.ext.oStdClasses} object).\n   */\n  \"oClasses\": {},\n\n  /**\n   * All strings that DataTables uses in the user interface that it creates\n   * are defined in this object, allowing you to modified them individually or\n   * completely replace them all as required.\n   */\n  \"oLanguage\": {\n    /**\n     * Strings that are used for WAI-ARIA labels and controls only (these are not\n     * actually visible on the page, but will be read by screenreaders, and thus\n     * must be internationalised as well).\n     */\n    \"oAria\": {\n      /**\n       * ARIA label that is added to the table headers when the column may be sorted\n       */\n      \"orderable\": \": Activate to sort\",\n\n      /**\n       * ARIA label that is added to the table headers when the column is currently being sorted\n       */\n      \"orderableReverse\": \": Activate to invert sorting\",\n\n      /**\n       * ARIA label that is added to the table headers when the column is currently being \n       * sorted and next step is to remove sorting\n       */\n      \"orderableRemove\": \": Activate to remove sorting\",\n      paginate: {\n        first: 'First',\n        last: 'Last',\n        next: 'Next',\n        previous: 'Previous'\n      }\n    },\n\n    /**\n     * Pagination string used by DataTables for the built-in pagination\n     * control types.\n     */\n    \"oPaginate\": {\n      /**\n       * Label and character for first page button\n       */\n      \"sFirst\": \"Â«\",\n\n      /**\n       * Last page button\n       */\n      \"sLast\": \"Â»\",\n\n      /**\n       * Next page button\n       */\n      \"sNext\": \"âº\",\n\n      /**\n       * Previous page button\n       */\n      \"sPrevious\": \"â¹\"\n    },\n\n    /**\n     * Plural object for the data type the table is showing\n     */\n    entries: {\n      _: \"entries\",\n      1: \"entry\"\n    },\n\n    /**\n     * This string is shown in preference to `zeroRecords` when the table is\n     * empty of data (regardless of filtering). Note that this is an optional\n     * parameter - if it is not given, the value of `zeroRecords` will be used\n     * instead (either the default or given value).\n     */\n    \"sEmptyTable\": \"No data available in table\",\n\n    /**\n     * This string gives information to the end user about the information\n     * that is current on display on the page. The following tokens can be\n     * used in the string and will be dynamically replaced as the table\n     * display updates. This tokens can be placed anywhere in the string, or\n     * removed as needed by the language requires:\n     *\n     * * `\\_START\\_` - Display index of the first record on the current page\n     * * `\\_END\\_` - Display index of the last record on the current page\n     * * `\\_TOTAL\\_` - Number of records in the table after filtering\n     * * `\\_MAX\\_` - Number of records in the table without filtering\n     * * `\\_PAGE\\_` - Current page number\n     * * `\\_PAGES\\_` - Total number of pages of data in the table\n     */\n    \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n\n    /**\n     * Display information string for when the table is empty. Typically the\n     * format of this string should match `info`.\n     */\n    \"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n\n    /**\n     * When a user filters the information in a table, this string is appended\n     * to the information (`info`) to give an idea of how strong the filtering\n     * is. The variable _MAX_ is dynamically updated.\n     */\n    \"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n\n    /**\n     * If can be useful to append extra information to the info string at times,\n     * and this variable does exactly that. This information will be appended to\n     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n     * being used) at all times.\n     */\n    \"sInfoPostFix\": \"\",\n\n    /**\n     * This decimal place operator is a little different from the other\n     * language options since DataTables doesn't output floating point\n     * numbers, so it won't ever use this for display of a number. Rather,\n     * what this parameter does is modify the sort methods of the table so\n     * that numbers which are in a format which has a character other than\n     * a period (`.`) as a decimal place will be sorted numerically.\n     *\n     * Note that numbers with different decimal places cannot be shown in\n     * the same table and still be sortable, the table must be consistent.\n     * However, multiple different tables on the page can use different\n     * decimal place characters.\n     */\n    \"sDecimal\": \"\",\n\n    /**\n     * DataTables has a build in number formatter (`formatNumber`) which is\n     * used to format large numbers that are used in the table information.\n     * By default a comma is used, but this can be trivially changed to any\n     * character you wish with this parameter.\n     */\n    \"sThousands\": \",\",\n\n    /**\n     * Detail the action that will be taken when the drop down menu for the\n     * pagination length option is changed. The '_MENU_' variable is replaced\n     * with a default select list of 10, 25, 50 and 100, and can be replaced\n     * with a custom select box if required.\n     */\n    \"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n\n    /**\n     * When using Ajax sourced data and during the first draw when DataTables is\n     * gathering the data, this message is shown in an empty row in the table to\n     * indicate to the end user the the data is being loaded. Note that this\n     * parameter is not used when loading data by server-side processing, just\n     * Ajax sourced data with client-side processing.\n     */\n    \"sLoadingRecords\": \"Loading...\",\n\n    /**\n     * Text which is displayed when the table is processing a user action\n     * (usually a sort command or similar).\n     */\n    \"sProcessing\": \"\",\n\n    /**\n     * Details the actions that will be taken when the user types into the\n     * filtering input text box. The variable \"_INPUT_\", if used in the string,\n     * is replaced with the HTML text box for the filtering input allowing\n     * control over where it appears in the string. If \"_INPUT_\" is not given\n     * then the input box is appended to the string automatically.\n     */\n    \"sSearch\": \"Search:\",\n\n    /**\n     * Assign a `placeholder` attribute to the search `input` element\n     *  @type string\n     *  @default \n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.searchPlaceholder\n     */\n    \"sSearchPlaceholder\": \"\",\n\n    /**\n     * All of the language information can be stored in a file on the\n     * server-side, which DataTables will look up if this parameter is passed.\n     * It must store the URL of the language file, which is in a JSON format,\n     * and the object has the same properties as the oLanguage object in the\n     * initialiser object (i.e. the above parameters). Please refer to one of\n     * the example language files to see how this works in action.\n     */\n    \"sUrl\": \"\",\n\n    /**\n     * Text shown inside the table records when the is no information to be\n     * displayed after filtering. `emptyTable` is shown when there is simply no\n     * information in the table at all (regardless of filtering).\n     */\n    \"sZeroRecords\": \"No matching records found\"\n  },\n\n  /**\n   * This parameter allows you to have define the global filtering state at\n   * initialisation time. As an object the `search` parameter must be\n   * defined, but all other parameters are optional. When `regex` is true,\n   * the search string will be treated as a regular expression, when false\n   * (default) it will be treated as a straight string. When `smart`\n   * DataTables will use it's smart filtering methods (to word match at\n   * any point in the data), when false this will not be done.\n   */\n  \"oSearch\": $.extend({}, DataTable.models.oSearch),\n\n  /**\n   * Table and control layout. This replaces the legacy `dom` option.\n   */\n  layout: {\n    topStart: 'pageLength',\n    topEnd: 'search',\n    bottomStart: 'info',\n    bottomEnd: 'paging'\n  },\n\n  /**\n   * Legacy DOM layout option\n   */\n  \"sDom\": null,\n\n  /**\n   * Search delay option. This will throttle full table searches that use the\n   * DataTables provided search input element (it does not effect calls to\n   * `dt-api search()`, providing a delay before the search is made.\n   */\n  \"searchDelay\": null,\n\n  /**\n   * DataTables features six different built-in options for the buttons to\n   * display for pagination control:\n   *\n   * * `numbers` - Page number buttons only\n   * * `simple` - 'Previous' and 'Next' buttons only\n   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n   */\n  \"sPaginationType\": \"full_numbers\",\n\n  /**\n   * Enable horizontal scrolling. When a table is too wide to fit into a\n   * certain layout, or you have a large number of columns in the table, you\n   * can enable x-scrolling to show the table in a viewport, which can be\n   * scrolled. This property can be `true` which will allow the table to\n   * scroll horizontally when needed, or any CSS unit, or a number (in which\n   * case it will be treated as a pixel measurement). Setting as simply `true`\n   * is recommended.\n   */\n  \"sScrollX\": \"\",\n\n  /**\n   * This property can be used to force a DataTable to use more width than it\n   * might otherwise do when x-scrolling is enabled. For example if you have a\n   * table which requires to be well spaced, this parameter is useful for\n   * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n   * any CSS unit, or a number (in which case it will be treated as a pixel\n   * measurement).\n   */\n  \"sScrollXInner\": \"\",\n\n  /**\n   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n   * to the given height, and enable scrolling for any data which overflows the\n   * current viewport. This can be used as an alternative to paging to display\n   * a lot of data in a small area (although paging and scrolling can both be\n   * enabled at the same time). This property can be any CSS unit, or a number\n   * (in which case it will be treated as a pixel measurement).\n   */\n  \"sScrollY\": \"\",\n\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   * Set the HTTP method that is used to make the Ajax call for server-side\n   * processing or Ajax sourced data.\n   */\n  \"sServerMethod\": \"GET\",\n\n  /**\n   * DataTables makes use of renderers when displaying HTML elements for\n   * a table. These renderers can be added or modified by plug-ins to\n   * generate suitable mark-up for a site. For example the Bootstrap\n   * integration plug-in for DataTables uses a paging button renderer to\n   * display pagination buttons in the mark-up required by Bootstrap.\n   *\n   * For further information about the renderers available see\n   * DataTable.ext.renderer\n   */\n  \"renderer\": null,\n\n  /**\n   * Set the data property name that DataTables should use to get a row's id\n   * to set as the `id` property in the node.\n   */\n  \"rowId\": \"DT_RowId\",\n\n  /**\n   * Caption value\n   */\n  \"caption\": null\n};\n\n_fnHungarianMap(DataTable.defaults);\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\n\n\nDataTable.defaults.column = {\n  /**\n   * Define which column(s) an order will occur on for this column. This\n   * allows a column's ordering to take multiple columns into account when\n   * doing a sort or use the data from a different column. For example first\n   * name / last name columns make sense to do a multi-column sort over the\n   * two columns.\n   */\n  \"aDataSort\": null,\n  \"iDataSort\": -1,\n  ariaTitle: '',\n\n  /**\n   * You can control the default ordering direction, and even alter the\n   * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n   * using this parameter.\n   */\n  \"asSorting\": ['asc', 'desc', ''],\n\n  /**\n   * Enable or disable filtering on the data in this column.\n   */\n  \"bSearchable\": true,\n\n  /**\n   * Enable or disable ordering on this column.\n   */\n  \"bSortable\": true,\n\n  /**\n   * Enable or disable the display of this column.\n   */\n  \"bVisible\": true,\n\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   */\n  \"fnCreatedCell\": null,\n\n  /**\n   * This property can be used to read data from any data source property,\n   * including deeply nested objects / properties. `data` can be given in a\n   * number of different ways which effect its behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object. Note that\n   *      function notation is recommended for use in `render` rather than\n   *      `data` as it is much simpler to use as a renderer.\n   * * `null` - use the original data source for the row rather than plucking\n   *   data directly from it. This action has effects on two other\n   *   initialisation options:\n   *    * `defaultContent` - When null is given as the `data` option and\n   *      `defaultContent` is specified for the column, the value defined by\n   *      `defaultContent` will be used for the cell.\n   *    * `render` - When null is used for the `data` option and the `render`\n   *      option is specified for the column, the whole data source for the\n   *      row is used for the renderer.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * `{array|object}` The data source for the row\n   *      * `{string}` The type call data requested - this will be 'set' when\n   *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n   *        when gathering data. Note that when `undefined` is given for the\n   *        type DataTables expects to get the raw data for the object back<\n   *      * `{*}` Data to set when the second parameter is 'set'.\n   *    * Return:\n   *      * The return value from the function is not required when 'set' is\n   *        the type of call, but otherwise the return is what will be used\n   *        for the data requested.\n   *\n   * Note that `data` is a getter and setter option. If you just require\n   * formatting of data for output, you will likely want to use `render` which\n   * is simply a getter and thus simpler to use.\n   *\n   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n   * name change reflects the flexibility of this property and is consistent\n   * with the naming of mRender. If 'mDataProp' is given, then it will still\n   * be used by DataTables, as it automatically maps the old name to the new\n   * if required.\n   */\n  \"mData\": null,\n\n  /**\n   * This property is the rendering partner to `data` and it is suggested that\n   * when you want to manipulate data for display (including filtering,\n   * sorting etc) without altering the underlying data for the table, use this\n   * property. `render` can be considered to be the the read only companion to\n   * `data` which is read / write (then as such more complex). Like `data`\n   * this option can be given in a number of different ways to effect its\n   * behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object.\n   * * `object` - use different data for the different data types requested by\n   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n   *   of the object is the data type the property refers to and the value can\n   *   defined using an integer, string or function using the same rules as\n   *   `render` normally does. Note that an `_` option _must_ be specified.\n   *   This is the default value to use if you haven't specified a value for\n   *   the data type requested by DataTables.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * {array|object} The data source for the row (based on `data`)\n   *      * {string} The type call data requested - this will be 'filter',\n   *        'display', 'type' or 'sort'.\n   *      * {array|object} The full data source for the row (not based on\n   *        `data`)\n   *    * Return:\n   *      * The return value from the function is what will be used for the\n   *        data requested.\n   */\n  \"mRender\": null,\n\n  /**\n   * Change the cell type created for the column - either TD cells or TH cells. This\n   * can be useful as TH cells have semantic meaning in the table body, allowing them\n   * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n   */\n  \"sCellType\": \"td\",\n\n  /**\n   * Class to give to each cell in this column.\n   */\n  \"sClass\": \"\",\n\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   * Generally you shouldn't need this!\n   */\n  \"sContentPadding\": \"\",\n\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because `data`\n   * is set to null, or because the data source itself is null).\n   */\n  \"sDefaultContent\": null,\n\n  /**\n   * This parameter is only used in DataTables' server-side processing. It can\n   * be exceptionally useful to know what columns are being displayed on the\n   * client side, and to map these to database fields. When defined, the names\n   * also allow DataTables to reorder information from the server if it comes\n   * back in an unexpected order (i.e. if you switch your columns around on the\n   * client-side, your server-side code does not also need updating).\n   */\n  \"sName\": \"\",\n\n  /**\n   * Defines a data source type for the ordering which can be used to read\n   * real-time information from the table (updating the internally cached\n   * version) prior to ordering. This allows ordering to occur on user\n   * editable elements such as form inputs.\n   */\n  \"sSortDataType\": \"std\",\n\n  /**\n   * The title of this column.\n   */\n  \"sTitle\": null,\n\n  /**\n   * The type allows you to specify how the data for this column will be\n   * ordered. Four types (string, numeric, date and html (which will strip\n   * HTML tags before ordering)) are currently available. Note that only date\n   * formats understood by Javascript's Date() object will be accepted as type\n   * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n   * 'numeric', 'date' or 'html' (by default). Further types can be adding\n   * through plug-ins.\n   */\n  \"sType\": null,\n\n  /**\n   * Defining the width of the column, this parameter may take any CSS value\n   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n   * been given a specific width through this interface ensuring that the table\n   * remains readable.\n   */\n  \"sWidth\": null\n};\n\n_fnHungarianMap(DataTable.defaults.column);\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\n\n\nDataTable.models.oSettings = {\n  /**\n   * Primary features of DataTables and their enablement state.\n   */\n  \"oFeatures\": {\n    /**\n     * Flag to say if DataTables should automatically try to calculate the\n     * optimum table and columns widths (true) or not (false).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bAutoWidth\": null,\n\n    /**\n     * Delay the creation of TR and TD elements until they are actually\n     * needed by a driven page draw. This can give a significant speed\n     * increase for Ajax source and Javascript source data, but makes no\n     * difference at all for DOM and server-side processing tables.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bDeferRender\": null,\n\n    /**\n     * Enable filtering on the table or not. Note that if this is disabled\n     * then there is no filtering at all on the table, including fnFilter.\n     * To just remove the filtering input use sDom and remove the 'f' option.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bFilter\": null,\n\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    \"bInfo\": true,\n\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    \"bLengthChange\": true,\n\n    /**\n     * Pagination enabled or not. Note that if this is disabled then length\n     * changing must also be disabled.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bPaginate\": null,\n\n    /**\n     * Processing indicator enable flag whenever DataTables is enacting a\n     * user request - typically an Ajax request for server-side processing.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bProcessing\": null,\n\n    /**\n     * Server-side processing enabled flag - when enabled DataTables will\n     * get all data from the server for every draw - there is no filtering,\n     * sorting or paging done on the client-side.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bServerSide\": null,\n\n    /**\n     * Sorting enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSort\": null,\n\n    /**\n     * Multi-column sorting\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSortMulti\": null,\n\n    /**\n     * Apply a class to the columns which are being sorted to provide a\n     * visual highlight or not. This can slow things down when enabled since\n     * there is a lot of DOM interaction.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSortClasses\": null,\n\n    /**\n     * State saving enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bStateSave\": null\n  },\n\n  /**\n   * Scrolling settings for a table.\n   */\n  \"oScroll\": {\n    /**\n     * When the table is shorter in height than sScrollY, collapse the\n     * table container down to the height of the table (when true).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bCollapse\": null,\n\n    /**\n     * Width of the scrollbar for the web-browser's platform. Calculated\n     * during table initialisation.\n     */\n    \"iBarWidth\": 0,\n\n    /**\n     * Viewport width for horizontal scrolling. Horizontal scrolling is\n     * disabled if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"sX\": null,\n\n    /**\n     * Width to expand the table to when using x-scrolling. Typically you\n     * should not need to use this.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @deprecated\n     */\n    \"sXInner\": null,\n\n    /**\n     * Viewport height for vertical scrolling. Vertical scrolling is disabled\n     * if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"sY\": null\n  },\n\n  /**\n   * Language information for the table.\n   */\n  \"oLanguage\": {\n    /**\n     * Information callback function. See\n     * {@link DataTable.defaults.fnInfoCallback}\n     */\n    \"fnInfoCallback\": null\n  },\n\n  /**\n   * Browser support parameters\n   */\n  \"oBrowser\": {\n    /**\n     * Determine if the vertical scrollbar is on the right or left of the\n     * scrolling container - needed for rtl language layout, although not\n     * all browsers move the scrollbar (Safari).\n     */\n    \"bScrollbarLeft\": false,\n\n    /**\n     * Browser scrollbar width\n     */\n    \"barWidth\": 0\n  },\n  \"ajax\": null,\n\n  /**\n   * Array referencing the nodes which are used for the features. The\n   * parameters of this object match what is allowed by sDom - i.e.\n   *   <ul>\n   *     <li>'l' - Length changing</li>\n   *     <li>'f' - Filtering input</li>\n   *     <li>'t' - The table!</li>\n   *     <li>'i' - Information</li>\n   *     <li>'p' - Pagination</li>\n   *     <li>'r' - pRocessing</li>\n   *   </ul>\n   */\n  \"aanFeatures\": [],\n\n  /**\n   * Store data information - see {@link DataTable.models.oRow} for detailed\n   * information.\n   */\n  \"aoData\": [],\n\n  /**\n   * Array of indexes which are in the current display (after filtering etc)\n   */\n  \"aiDisplay\": [],\n\n  /**\n   * Array of indexes for display - no filtering\n   */\n  \"aiDisplayMaster\": [],\n\n  /**\n   * Map of row ids to data indexes\n   */\n  \"aIds\": {},\n\n  /**\n   * Store information about each column that is in use\n   */\n  \"aoColumns\": [],\n\n  /**\n   * Store information about the table's header\n   */\n  \"aoHeader\": [],\n\n  /**\n   * Store information about the table's footer\n   */\n  \"aoFooter\": [],\n\n  /**\n   * Store the applied global search information in case we want to force a\n   * research or compare the old search to a new one.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"oPreviousSearch\": {},\n\n  /**\n   * Store for named searches\n   */\n  searchFixed: {},\n\n  /**\n   * Store the applied search for each column - see\n   * {@link DataTable.models.oSearch} for the format that is used for the\n   * filtering information for each column.\n   */\n  \"aoPreSearchCols\": [],\n\n  /**\n   * Sorting that is applied to the table. Note that the inner arrays are\n   * used in the following manner:\n   * <ul>\n   *   <li>Index 0 - column number</li>\n   *   <li>Index 1 - current sorting direction</li>\n   * </ul>\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aaSorting\": null,\n\n  /**\n   * Sorting that is always applied to the table (i.e. prefixed in front of\n   * aaSorting).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aaSortingFixed\": [],\n\n  /**\n   * If restoring a table - we should restore its width\n   */\n  \"sDestroyWidth\": 0,\n\n  /**\n   * Callback functions array for every time a row is inserted (i.e. on a draw).\n   */\n  \"aoRowCallback\": [],\n\n  /**\n   * Callback functions for the header on each draw.\n   */\n  \"aoHeaderCallback\": [],\n\n  /**\n   * Callback function for the footer on each draw.\n   */\n  \"aoFooterCallback\": [],\n\n  /**\n   * Array of callback functions for draw callback functions\n   */\n  \"aoDrawCallback\": [],\n\n  /**\n   * Array of callback functions for row created function\n   */\n  \"aoRowCreatedCallback\": [],\n\n  /**\n   * Callback functions for just before the table is redrawn. A return of\n   * false will be used to cancel the draw.\n   */\n  \"aoPreDrawCallback\": [],\n\n  /**\n   * Callback functions for when the table has been initialised.\n   */\n  \"aoInitComplete\": [],\n\n  /**\n   * Callbacks for modifying the settings to be stored for state saving, prior to\n   * saving state.\n   */\n  \"aoStateSaveParams\": [],\n\n  /**\n   * Callbacks for modifying the settings that have been stored for state saving\n   * prior to using the stored values to restore the state.\n   */\n  \"aoStateLoadParams\": [],\n\n  /**\n   * Callbacks for operating on the settings object once the saved state has been\n   * loaded\n   */\n  \"aoStateLoaded\": [],\n\n  /**\n   * Cache the table ID for quick access\n   */\n  \"sTableId\": \"\",\n\n  /**\n   * The TABLE node for the main table\n   */\n  \"nTable\": null,\n\n  /**\n   * Permanent ref to the thead element\n   */\n  \"nTHead\": null,\n\n  /**\n   * Permanent ref to the tfoot element - if it exists\n   */\n  \"nTFoot\": null,\n\n  /**\n   * Permanent ref to the tbody element\n   */\n  \"nTBody\": null,\n\n  /**\n   * Cache the wrapper node (contains all DataTables controlled elements)\n   */\n  \"nTableWrapper\": null,\n\n  /**\n   * Indicate if all required information has been read in\n   */\n  \"bInitialised\": false,\n\n  /**\n   * Information about open rows. Each object in the array has the parameters\n   * 'nTr' and 'nParent'\n   */\n  \"aoOpenRows\": [],\n\n  /**\n   * Dictate the positioning of DataTables' control elements - see\n   * {@link DataTable.model.oInit.sDom}.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sDom\": null,\n\n  /**\n   * Search delay (in mS)\n   */\n  \"searchDelay\": null,\n\n  /**\n   * Which type of pagination should be used.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sPaginationType\": \"two_button\",\n\n  /**\n   * Number of paging controls on the page. Only used for backwards compatibility\n   */\n  pagingControls: 0,\n\n  /**\n   * The state duration (for `stateSave`) in seconds.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"iStateDuration\": 0,\n\n  /**\n   * Array of callback functions for state saving. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the JSON string to save that has been thus far created. Returns\n   *       a JSON string to be inserted into a json object\n   *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   */\n  \"aoStateSave\": [],\n\n  /**\n   * Array of callback functions for state loading. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the object stored. May return false to cancel state loading</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   */\n  \"aoStateLoad\": [],\n\n  /**\n   * State that was saved. Useful for back reference\n   */\n  \"oSavedState\": null,\n\n  /**\n   * State that was loaded. Useful for back reference\n   */\n  \"oLoadedState\": null,\n\n  /**\n   * Note if draw should be blocked while getting data\n   */\n  \"bAjaxDataGet\": true,\n\n  /**\n   * The last jQuery XHR object that was used for server-side data gathering.\n   * This can be used for working with the XHR information in one of the\n   * callbacks\n   */\n  \"jqXHR\": null,\n\n  /**\n   * JSON returned from the server in the last Ajax request\n   */\n  \"json\": undefined,\n\n  /**\n   * Data submitted as part of the last Ajax request\n   */\n  \"oAjaxData\": undefined,\n\n  /**\n   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n   * required).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sServerMethod\": null,\n\n  /**\n   * Format numbers for display.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"fnFormatNumber\": null,\n\n  /**\n   * List of options that can be used for the user selectable length menu.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aLengthMenu\": null,\n\n  /**\n   * Counter for the draws that the table does. Also used as a tracker for\n   * server-side processing\n   */\n  \"iDraw\": 0,\n\n  /**\n   * Indicate if a redraw is being done - useful for Ajax\n   */\n  \"bDrawing\": false,\n\n  /**\n   * Draw index (iDraw) of the last error when parsing the returned data\n   */\n  \"iDrawError\": -1,\n\n  /**\n   * Paging display length\n   */\n  \"_iDisplayLength\": 10,\n\n  /**\n   * Paging start point - aiDisplay index\n   */\n  \"_iDisplayStart\": 0,\n\n  /**\n   * Server-side processing - number of records in the result set\n   * (i.e. before filtering), Use fnRecordsTotal rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   */\n  \"_iRecordsTotal\": 0,\n\n  /**\n   * Server-side processing - number of records in the current display set\n   * (i.e. after filtering). Use fnRecordsDisplay rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   */\n  \"_iRecordsDisplay\": 0,\n\n  /**\n   * The classes to use for the table\n   */\n  \"oClasses\": {},\n\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if filtering has been done in the draw. Deprecated in favour of\n   * events.\n   *  @deprecated\n   */\n  \"bFiltered\": false,\n\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if sorting has been done in the draw. Deprecated in favour of\n   * events.\n   *  @deprecated\n   */\n  \"bSorted\": false,\n\n  /**\n   * Indicate that if multiple rows are in the header and there is more than\n   * one unique cell per column, if the top one (true) or bottom one (false)\n   * should be used for sorting / title by DataTables.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"bSortCellsTop\": null,\n\n  /**\n   * Initialisation object that is used for the table\n   */\n  \"oInit\": null,\n\n  /**\n   * Destroy callback functions - for plug-ins to attach themselves to the\n   * destroy so they can clean up markup and events.\n   */\n  \"aoDestroyCallback\": [],\n\n  /**\n   * Get the number of records in the current record set, before filtering\n   */\n  \"fnRecordsTotal\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;\n  },\n\n  /**\n   * Get the number of records in the current record set, after filtering\n   */\n  \"fnRecordsDisplay\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsDisplay * 1 : this.aiDisplay.length;\n  },\n\n  /**\n   * Get the display end point - aiDisplay index\n   */\n  \"fnDisplayEnd\": function () {\n    var len = this._iDisplayLength,\n        start = this._iDisplayStart,\n        calc = start + len,\n        records = this.aiDisplay.length,\n        features = this.oFeatures,\n        paginate = features.bPaginate;\n\n    if (features.bServerSide) {\n      return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay);\n    } else {\n      return !paginate || calc > records || len === -1 ? records : calc;\n    }\n  },\n\n  /**\n   * The DataTables object for this table\n   */\n  \"oInstance\": null,\n\n  /**\n   * Unique identifier for each instance of the DataTables object. If there\n   * is an ID on the table node, then it takes that value, otherwise an\n   * incrementing internal counter is used.\n   */\n  \"sInstance\": null,\n\n  /**\n   * tabindex attribute value that is added to DataTables control elements, allowing\n   * keyboard navigation of the table and its controls.\n   */\n  \"iTabIndex\": 0,\n\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollHead\": null,\n\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollFoot\": null,\n\n  /**\n   * Last applied sort\n   */\n  \"aLastSort\": [],\n\n  /**\n   * Stored plug-in instances\n   */\n  \"oPlugins\": {},\n\n  /**\n   * Function used to get a row's id from the row's data\n   */\n  \"rowIdFn\": null,\n\n  /**\n   * Data location where to store a row's id\n   */\n  \"rowId\": null,\n  caption: '',\n  captionNode: null,\n  colgroup: null\n};\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\n\nDataTable.ext = _ext = {\n  /**\n   * Buttons. For use with the Buttons extension for DataTables. This is\n   * defined here so other extensions can define buttons regardless of load\n   * order. It is _not_ used by DataTables core.\n   *\n   *  @type object\n   *  @default {}\n   */\n  buttons: {},\n\n  /**\n   * Element class names\n   *\n   *  @type object\n   *  @default {}\n   */\n  classes: {},\n\n  /**\n   * DataTables build type (expanded by the download builder)\n   *\n   *  @type string\n   */\n  builder: \"-source-\",\n\n  /**\n   * Error reporting.\n   * \n   * How should DataTables report an error. Can take the value 'alert',\n   * 'throw', 'none' or a function.\n   *\n   *  @type string|function\n   *  @default alert\n   */\n  errMode: \"alert\",\n\n  /**\n   * Legacy so v1 plug-ins don't throw js errors on load\n   */\n  feature: [],\n\n  /**\n   * Feature plug-ins.\n   * \n   * This is an object of callbacks which provide the features for DataTables\n   * to be initialised via the `layout` option.\n   */\n  features: {},\n\n  /**\n   * Row searching.\n   * \n   * This method of searching is complimentary to the default type based\n   * searching, and a lot more comprehensive as it allows you complete control\n   * over the searching logic. Each element in this array is a function\n   * (parameters described below) that is called for every row in the table,\n   * and your logic decides if it should be included in the searching data set\n   * or not.\n   *\n   * Searching functions have the following input parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{array|object}` Data for the row to be processed (same as the\n   *    original format that was passed in as the data source, or an array\n   *    from a DOM data source\n   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n   *    can be useful to retrieve the `TR` element if you need DOM interaction.\n   *\n   * And the following return is expected:\n   *\n   * * {boolean} Include the row in the searched result set (true) or not\n   *   (false)\n   *\n   * Note that as with the main search ability in DataTables, technically this\n   * is \"filtering\", since it is subtractive. However, for consistency in\n   * naming we call it searching here.\n   *\n   *  @type array\n   *  @default []\n   *\n   *  @example\n   *    // The following example shows custom search being applied to the\n   *    // fourth column (i.e. the data[3] index) based on two input values\n   *    // from the end-user, matching the data in a certain range.\n   *    $.fn.dataTable.ext.search.push(\n   *      function( settings, data, dataIndex ) {\n   *        var min = document.getElementById('min').value * 1;\n   *        var max = document.getElementById('max').value * 1;\n   *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n   *\n   *        if ( min == \"\" && max == \"\" ) {\n   *          return true;\n   *        }\n   *        else if ( min == \"\" && version < max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && \"\" == max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && version < max ) {\n   *          return true;\n   *        }\n   *        return false;\n   *      }\n   *    );\n   */\n  search: [],\n\n  /**\n   * Selector extensions\n   *\n   * The `selector` option can be used to extend the options available for the\n   * selector modifier options (`selector-modifier` object data type) that\n   * each of the three built in selector types offer (row, column and cell +\n   * their plural counterparts). For example the Select extension uses this\n   * mechanism to provide an option to select only rows, columns and cells\n   * that have been marked as selected by the end user (`{selected: true}`),\n   * which can be used in conjunction with the existing built in selector\n   * options.\n   *\n   * Each property is an array to which functions can be pushed. The functions\n   * take three attributes:\n   *\n   * * Settings object for the host table\n   * * Options object (`selector-modifier` object type)\n   * * Array of selected item indexes\n   *\n   * The return is an array of the resulting item indexes after the custom\n   * selector has been applied.\n   *\n   *  @type object\n   */\n  selector: {\n    cell: [],\n    column: [],\n    row: []\n  },\n\n  /**\n   * Legacy configuration options. Enable and disable legacy options that\n   * are available in DataTables.\n   *\n   *  @type object\n   */\n  legacy: {\n    /**\n     * Enable / disable DataTables 1.9 compatible server-side processing\n     * requests\n     *\n     *  @type boolean\n     *  @default null\n     */\n    ajax: null\n  },\n\n  /**\n   * Pagination plug-in methods.\n   * \n   * Each entry in this object is a function and defines which buttons should\n   * be shown by the pagination rendering method that is used for the table:\n   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n   * buttons are displayed in the document, while the functions here tell it\n   * what buttons to display. This is done by returning an array of button\n   * descriptions (what each button will do).\n   *\n   * Pagination types (the four built in options and any additional plug-in\n   * options defined here) can be used through the `paginationType`\n   * initialisation parameter.\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{int} page` The current page index\n   * 2. `{int} pages` The number of pages in the table\n   *\n   * Each function is expected to return an array where each element of the\n   * array can be one of:\n   *\n   * * `first` - Jump to first page when activated\n   * * `last` - Jump to last page when activated\n   * * `previous` - Show previous page when activated\n   * * `next` - Show next page when activated\n   * * `{int}` - Show page of the index given\n   * * `{array}` - A nested array containing the above elements to add a\n   *   containing 'DIV' element (might be useful for styling).\n   *\n   * Note that DataTables v1.9- used this object slightly differently whereby\n   * an object with two functions would be defined for each plug-in. That\n   * ability is still supported by DataTables 1.10+ to provide backwards\n   * compatibility, but this option of use is now decremented and no longer\n   * documented in DataTables 1.10+.\n   *\n   *  @type object\n   *  @default {}\n   *\n   *  @example\n   *    // Show previous, next and current page buttons only\n   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n   *      return [ 'previous', page, 'next' ];\n   *    };\n   */\n  pager: {},\n  renderer: {\n    pageButton: {},\n    header: {}\n  },\n\n  /**\n   * Ordering plug-ins - custom data source\n   * \n   * The extension options for ordering of data available here is complimentary\n   * to the default type based ordering that DataTables typically uses. It\n   * allows much greater control over the the data that is being used to\n   * order a column, but is necessarily therefore more complex.\n   * \n   * This type of ordering is useful if you want to do ordering based on data\n   * live from the DOM (for example the contents of an 'input' element) rather\n   * than just the static string that DataTables knows of.\n   * \n   * The way these plug-ins work is that you create an array of the values you\n   * wish to be ordering for the column in question and then return that\n   * array. The data in the array much be in the index order of the rows in\n   * the table (not the currently ordering order!). Which order data gathering\n   * function is run here depends on the `dt-init columns.orderDataType`\n   * parameter that is used for the column (if any).\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{int}` Target column index\n   *\n   * Each function is expected to return an array:\n   *\n   * * `{array}` Data for the column to be ordering upon\n   *\n   *  @type array\n   *\n   *  @example\n   *    // Ordering using `input` node values\n   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n   *    {\n   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n   *        return $('input', td).val();\n   *      } );\n   *    }\n   */\n  order: {},\n\n  /**\n   * Type based plug-ins.\n   *\n   * Each column in DataTables has a type assigned to it, either by automatic\n   * detection or by direct assignment using the `type` option for the column.\n   * The type of a column will effect how it is ordering and search (plug-ins\n   * can also make use of the column type if required).\n   *\n   * @namespace\n   */\n  type: {\n    /**\n     * Automatic column class assignment\n     */\n    className: {},\n\n    /**\n     * Type detection functions.\n     *\n     * The functions defined in this object are used to automatically detect\n     * a column's type, making initialisation of DataTables super easy, even\n     * when complex data is in the table.\n     *\n     * The functions defined take two parameters:\n     *\n        *  1. `{*}` Data from the column cell to be analysed\n        *  2. `{settings}` DataTables settings object. This can be used to\n        *     perform context specific type detection - for example detection\n        *     based on language settings such as using a comma for a decimal\n        *     place. Generally speaking the options from the settings will not\n        *     be required\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Data type detected, or null if unknown (and thus\n     *   pass it on to the other type detection functions.\n     *\n     *  @type array\n     *\n     *  @example\n     *    // Currency type detection plug-in:\n     *    $.fn.dataTable.ext.type.detect.push(\n     *      function ( data, settings ) {\n     *        // Check the numeric part\n     *        if ( ! data.substring(1).match(/[0-9]/) ) {\n     *          return null;\n     *        }\n     *\n     *        // Check prefixed by currency\n     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n     *          return 'currency';\n     *        }\n     *        return null;\n     *      }\n     *    );\n     */\n    detect: [],\n\n    /**\n     * Automatic renderer assignment\n     */\n    render: {},\n\n    /**\n     * Type based search formatting.\n     *\n     * The type based searching functions can be used to pre-format the\n     * data to be search on. For example, it can be used to strip HTML\n     * tags or to de-format telephone numbers for numeric only searching.\n     *\n     * Note that is a search is not defined for a column of a given type,\n     * no search formatting will be performed.\n     * \n     * Pre-processing of searching data plug-ins - When you assign the sType\n     * for a column (or have it automatically detected for you by DataTables\n     * or a type detection plug-in), you will typically be using this for\n     * custom sorting, but it can also be used to provide custom searching\n     * by allowing you to pre-processing the data and returning the data in\n     * the format that should be searched upon. This is done by adding\n     * functions this object with a parameter name which matches the sType\n     * for that target column. This is the corollary of <i>afnSortData</i>\n     * for searching data.\n     *\n     * The functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for searching\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Formatted string that will be used for the searching.\n     *\n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n     *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n     *    }\n     */\n    search: {},\n\n    /**\n     * Type based ordering.\n     *\n     * The column type tells DataTables what ordering to apply to the table\n     * when a column is sorted upon. The order for each type that is defined,\n     * is defined by the functions available in this object.\n     *\n     * Each ordering option can be described by three properties added to\n     * this object:\n     *\n     * * `{type}-pre` - Pre-formatting function\n     * * `{type}-asc` - Ascending order function\n     * * `{type}-desc` - Descending order function\n     *\n     * All three can be used together, only `{type}-pre` or only\n     * `{type}-asc` and `{type}-desc` together. It is generally recommended\n     * that only `{type}-pre` is used, as this provides the optimal\n     * implementation in terms of speed, although the others are provided\n     * for compatibility with existing Javascript sort functions.\n     *\n     * `{type}-pre`: Functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for ordering\n     *\n     * And return:\n     *\n     * * `{*}` Data to be sorted upon\n     *\n     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n     * functions, taking two parameters:\n     *\n        *  1. `{*}` Data to compare to the second parameter\n        *  2. `{*}` Data to compare to the first parameter\n     *\n     * And returning:\n     *\n     * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n     *   than the second parameter, ===0 if the two parameters are equal and\n     *   >0 if the first parameter should be sorted height than the second\n     *   parameter.\n     * \n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    // Numeric ordering of formatted numbers with a pre-formatter\n     *    $.extend( $.fn.dataTable.ext.type.order, {\n     *      \"string-pre\": function(x) {\n     *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n     *        return parseFloat( a );\n     *      }\n     *    } );\n     *\n     *  @example\n     *    // Case-sensitive string ordering, with no pre-formatting method\n     *    $.extend( $.fn.dataTable.ext.order, {\n     *      \"string-case-asc\": function(x,y) {\n     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n     *      },\n     *      \"string-case-desc\": function(x,y) {\n     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n     *      }\n     *    } );\n     */\n    order: {}\n  },\n\n  /**\n   * Unique DataTables instance counter\n   *\n   * @type int\n   * @private\n   */\n  _unique: 0,\n  //\n  // Depreciated\n  // The following properties are retained for backwards compatibility only.\n  // The should not be used in new projects and will be removed in a future\n  // version\n  //\n\n  /**\n   * Version check function.\n   *  @type function\n   *  @depreciated Since 1.10\n   */\n  fnVersionCheck: DataTable.fnVersionCheck,\n\n  /**\n   * Index for what 'this' index API functions should use\n   *  @type int\n   *  @deprecated Since v1.10\n   */\n  iApiIndex: 0,\n\n  /**\n   * Software version\n   *  @type string\n   *  @deprecated Since v1.10\n   */\n  sVersion: DataTable.version\n}; //\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n\n$.extend(_ext, {\n  afnFiltering: _ext.search,\n  aTypes: _ext.type.detect,\n  ofnSearch: _ext.type.search,\n  oSort: _ext.type.order,\n  afnSortData: _ext.order,\n  aoFeatures: _ext.feature,\n  oStdClasses: _ext.classes,\n  oPagination: _ext.pager\n});\n$.extend(DataTable.ext.classes, {\n  container: 'dt-container',\n  empty: {\n    row: 'dt-empty'\n  },\n  info: {\n    container: 'dt-info'\n  },\n  length: {\n    container: 'dt-length',\n    select: 'dt-input'\n  },\n  order: {\n    canAsc: 'dt-orderable-asc',\n    canDesc: 'dt-orderable-desc',\n    isAsc: 'dt-ordering-asc',\n    isDesc: 'dt-ordering-desc',\n    none: 'dt-orderable-none',\n    position: 'sorting_'\n  },\n  processing: {\n    container: 'dt-processing'\n  },\n  scrolling: {\n    body: 'dt-scroll-body',\n    container: 'dt-scroll',\n    footer: {\n      self: 'dt-scroll-foot',\n      inner: 'dt-scroll-footInner'\n    },\n    header: {\n      self: 'dt-scroll-head',\n      inner: 'dt-scroll-headInner'\n    }\n  },\n  search: {\n    container: 'dt-search',\n    input: 'dt-input'\n  },\n  table: 'dataTable',\n  tbody: {\n    cell: '',\n    row: ''\n  },\n  thead: {\n    cell: '',\n    row: ''\n  },\n  tfoot: {\n    cell: '',\n    row: ''\n  },\n  paging: {\n    active: 'current',\n    button: 'dt-paging-button',\n    container: 'dt-paging',\n    disabled: 'disabled'\n  }\n});\nvar extPagination = DataTable.ext.pager; // Paging buttons configuration\n\n$.extend(extPagination, {\n  simple: function () {\n    return ['previous', 'next'];\n  },\n  full: function () {\n    return ['first', 'previous', 'next', 'last'];\n  },\n  numbers: function () {\n    return ['numbers'];\n  },\n  simple_numbers: function () {\n    return ['previous', 'numbers', 'next'];\n  },\n  full_numbers: function () {\n    return ['first', 'previous', 'numbers', 'next', 'last'];\n  },\n  first_last: function () {\n    return ['first', 'last'];\n  },\n  first_last_numbers: function () {\n    return ['first', 'numbers', 'last'];\n  },\n  // For testing and plug-ins to use\n  _numbers: _pagingNumbers,\n  // Number of number buttons - legacy, use `numbers` option for paging feature\n  numbers_length: 7\n});\n$.extend(true, DataTable.ext.renderer, {\n  pagingButton: {\n    _: function (settings, buttonType, content, active, disabled) {\n      var classes = settings.oClasses.paging;\n      var btnClasses = [classes.button];\n      var btn;\n\n      if (active) {\n        btnClasses.push(classes.active);\n      }\n\n      if (disabled) {\n        btnClasses.push(classes.disabled);\n      }\n\n      if (buttonType === 'ellipsis') {\n        btn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n      } else {\n        btn = $('<button>', {\n          class: btnClasses.join(' '),\n          role: 'link',\n          type: 'button'\n        }).html(content);\n      }\n\n      return {\n        display: btn,\n        clicker: btn\n      };\n    }\n  },\n  pagingContainer: {\n    _: function (settings, buttons) {\n      // No wrapping element - just append directly to the host\n      return buttons;\n    }\n  }\n}); // Common function to remove new lines, strip HTML and diacritic control\n\nvar _filterString = function (stripHtml, normalize) {\n  return function (str) {\n    if (_empty(str) || typeof str !== 'string') {\n      return str;\n    }\n\n    str = str.replace(_re_new_lines, \" \");\n\n    if (stripHtml) {\n      str = _stripHtml(str);\n    }\n\n    if (normalize) {\n      str = _normalize(str, false);\n    }\n\n    return str;\n  };\n};\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\n\nfunction __mldFnName(name) {\n  return name.replace(/[\\W]/g, '_');\n} // Common logic for moment, luxon or a date action\n\n\nfunction __mld(dt, momentFn, luxonFn, dateFn, arg1) {\n  if (window.moment) {\n    return dt[momentFn](arg1);\n  } else if (window.luxon) {\n    return dt[luxonFn](arg1);\n  }\n\n  return dateFn ? dt[dateFn](arg1) : dt;\n}\n\nvar __mlWarning = false;\n\nfunction __mldObj(d, format, locale) {\n  var dt;\n\n  if (window.moment) {\n    dt = window.moment.utc(d, format, locale, true);\n\n    if (!dt.isValid()) {\n      return null;\n    }\n  } else if (window.luxon) {\n    dt = format && typeof d === 'string' ? window.luxon.DateTime.fromFormat(d, format) : window.luxon.DateTime.fromISO(d);\n\n    if (!dt.isValid) {\n      return null;\n    }\n\n    dt.setLocale(locale);\n  } else if (!format) {\n    // No format given, must be ISO\n    dt = new Date(d);\n  } else {\n    if (!__mlWarning) {\n      alert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n    }\n\n    __mlWarning = true;\n  }\n\n  return dt;\n} // Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\n\n\nfunction __mlHelper(localeString) {\n  return function (from, to, locale, def) {\n    // Luxon and Moment support\n    // Argument shifting\n    if (arguments.length === 0) {\n      locale = 'en';\n      to = null; // means toLocaleString\n\n      from = null; // means iso8601\n    } else if (arguments.length === 1) {\n      locale = 'en';\n      to = from;\n      from = null;\n    } else if (arguments.length === 2) {\n      locale = to;\n      to = from;\n      from = null;\n    }\n\n    var typeName = 'datetime' + (to ? '-' + __mldFnName(to) : ''); // Add type detection and sorting specific to this date format - we need to be able to identify\n    // date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\n    if (!DataTable.ext.type.order[typeName]) {\n      DataTable.type(typeName, {\n        detect: function (d) {\n          // The renderer will give the value to type detect as the type!\n          return d === typeName ? typeName : false;\n        },\n        order: {\n          pre: function (d) {\n            // The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n            // `valueOf` which gives milliseconds epoch\n            return d.valueOf();\n          }\n        },\n        className: 'dt-right'\n      });\n    }\n\n    return function (d, type) {\n      // Allow for a default value\n      if (d === null || d === undefined) {\n        if (def === '--now') {\n          // We treat everything as UTC further down, so no changes are\n          // made, as such need to get the local date / time as if it were\n          // UTC\n          var local = new Date();\n          d = new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds()));\n        } else {\n          d = '';\n        }\n      }\n\n      if (type === 'type') {\n        // Typing uses the type name for fast matching\n        return typeName;\n      }\n\n      if (d === '') {\n        return type !== 'sort' ? '' : __mldObj('0000-01-01 00:00:00', null, locale);\n      } // Shortcut. If `from` and `to` are the same, we are using the renderer to\n      // format for ordering, not display - its already in the display format.\n\n\n      if (to !== null && from === to && type !== 'sort' && type !== 'type' && !(d instanceof Date)) {\n        return d;\n      }\n\n      var dt = __mldObj(d, from, locale);\n\n      if (dt === null) {\n        return d;\n      }\n\n      if (type === 'sort') {\n        return dt;\n      }\n\n      var formatted = to === null ? __mld(dt, 'toDate', 'toJSDate', '')[localeString]() : __mld(dt, 'format', 'toFormat', 'toISOString', to); // XSS protection\n\n      return type === 'display' ? _escapeHtml(formatted) : formatted;\n    };\n  };\n} // Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\n\n\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (window.Intl !== undefined) {\n  try {\n    var num = new Intl.NumberFormat().formatToParts(100000.1);\n\n    for (var i = 0; i < num.length; i++) {\n      if (num[i].type === 'group') {\n        __thousands = num[i].value;\n      } else if (num[i].type === 'decimal') {\n        __decimal = num[i].value;\n      }\n    }\n  } catch (e) {// noop\n  }\n} // Formatted date time detection - use by declaring the formats you are going to use\n\n\nDataTable.datetime = function (format, locale) {\n  var typeName = 'datetime-detect-' + __mldFnName(format);\n\n  if (!locale) {\n    locale = 'en';\n  }\n\n  if (!DataTable.ext.type.order[typeName]) {\n    DataTable.type(typeName, {\n      detect: function (d) {\n        var dt = __mldObj(d, format, locale);\n\n        return d === '' || dt ? typeName : false;\n      },\n      order: {\n        pre: function (d) {\n          return __mldObj(d, format, locale) || 0;\n        }\n      },\n      className: 'dt-right'\n    });\n  }\n};\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\n\n\nDataTable.render = {\n  date: __mlHelper('toLocaleDateString'),\n  datetime: __mlHelper('toLocaleString'),\n  time: __mlHelper('toLocaleTimeString'),\n  number: function (thousands, decimal, precision, prefix, postfix) {\n    // Auto locale detection\n    if (thousands === null || thousands === undefined) {\n      thousands = __thousands;\n    }\n\n    if (decimal === null || decimal === undefined) {\n      decimal = __decimal;\n    }\n\n    return {\n      display: function (d) {\n        if (typeof d !== 'number' && typeof d !== 'string') {\n          return d;\n        }\n\n        if (d === '' || d === null) {\n          return d;\n        }\n\n        var negative = d < 0 ? '-' : '';\n        var flo = parseFloat(d);\n        var abs = Math.abs(flo); // Scientific notation for large and small numbers\n\n        if (abs >= 100000000000 || abs < 0.0001 && abs !== 0) {\n          var exp = flo.toExponential(precision).split(/e\\+?/);\n          return exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n        } // If NaN then there isn't much formatting that we can do - just\n        // return immediately, escaping any HTML (this was supposed to\n        // be a number after all)\n\n\n        if (isNaN(flo)) {\n          return _escapeHtml(d);\n        }\n\n        flo = flo.toFixed(precision);\n        d = Math.abs(flo);\n        var intPart = parseInt(d, 10);\n        var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : ''; // If zero, then can't have a negative prefix\n\n        if (intPart === 0 && parseFloat(floatPart) === 0) {\n          negative = '';\n        }\n\n        return negative + (prefix || '') + intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) + floatPart + (postfix || '');\n      }\n    };\n  },\n  text: function () {\n    return {\n      display: _escapeHtml,\n      filter: _escapeHtml\n    };\n  }\n};\nvar _extTypes = DataTable.ext.type; // Get / set type\n\nDataTable.type = function (name, prop, val) {\n  if (!prop) {\n    return {\n      className: _extTypes.className[name],\n      detect: _extTypes.detect.find(function (fn) {\n        return fn.name === name;\n      }),\n      order: {\n        pre: _extTypes.order[name + '-pre'],\n        asc: _extTypes.order[name + '-asc'],\n        desc: _extTypes.order[name + '-desc']\n      },\n      render: _extTypes.render[name],\n      search: _extTypes.search[name]\n    };\n  }\n\n  var setProp = function (prop, propVal) {\n    _extTypes[prop][name] = propVal;\n  };\n\n  var setDetect = function (fn) {\n    // Wrap to allow the function to return `true` rather than\n    // specifying the type name.\n    var cb = function (d, s) {\n      var ret = fn(d, s);\n      return ret === true ? name : ret;\n    };\n\n    Object.defineProperty(cb, \"name\", {\n      value: name\n    });\n\n    var idx = _extTypes.detect.findIndex(function (fn) {\n      return fn.name === name;\n    });\n\n    if (idx === -1) {\n      _extTypes.detect.unshift(cb);\n    } else {\n      _extTypes.detect.splice(idx, 1, cb);\n    }\n  };\n\n  var setOrder = function (obj) {\n    _extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n\n    _extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n\n    _extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n  }; // prop is optional\n\n\n  if (val === undefined) {\n    val = prop;\n    prop = null;\n  }\n\n  if (prop === 'className') {\n    setProp('className', val);\n  } else if (prop === 'detect') {\n    setDetect(val);\n  } else if (prop === 'order') {\n    setOrder(val);\n  } else if (prop === 'render') {\n    setProp('render', val);\n  } else if (prop === 'search') {\n    setProp('search', val);\n  } else if (!prop) {\n    if (val.className) {\n      setProp('className', val.className);\n    }\n\n    if (val.detect !== undefined) {\n      setDetect(val.detect);\n    }\n\n    if (val.order) {\n      setOrder(val.order);\n    }\n\n    if (val.render !== undefined) {\n      setProp('render', val.render);\n    }\n\n    if (val.search !== undefined) {\n      setProp('search', val.search);\n    }\n  }\n}; // Get a list of types\n\n\nDataTable.types = function () {\n  return _extTypes.detect.map(function (fn) {\n    return fn.name;\n  });\n}; //\n// Built in data types\n//\n\n\nDataTable.type('string', {\n  detect: function () {\n    return 'string';\n  },\n  order: {\n    pre: function (a) {\n      // This is a little complex, but faster than always calling toString,\n      // http://jsperf.com/tostring-v-check\n      return _empty(a) ? '' : typeof a === 'string' ? a.toLowerCase() : !a.toString ? '' : a.toString();\n    }\n  },\n  search: _filterString(false, true)\n});\nDataTable.type('html', {\n  detect: function (d) {\n    return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1 ? 'html' : null;\n  },\n  order: {\n    pre: function (a) {\n      return _empty(a) ? '' : a.replace ? _stripHtml(a).trim().toLowerCase() : a + '';\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('date', {\n  className: 'dt-type-date',\n  detect: function (d) {\n    // V8 tries _very_ hard to make a string passed into `Date.parse()`\n    // valid, so we need to use a regex to restrict date formats. Use a\n    // plug-in for anything other than ISO8601 style strings\n    if (d && !(d instanceof Date) && !_re_date.test(d)) {\n      return null;\n    }\n\n    var parsed = Date.parse(d);\n    return parsed !== null && !isNaN(parsed) || _empty(d) ? 'date' : null;\n  },\n  order: {\n    pre: function (d) {\n      var ts = Date.parse(d);\n      return isNaN(ts) ? -Infinity : ts;\n    }\n  }\n});\nDataTable.type('html-num-fmt', {\n  className: 'dt-type-numeric',\n  detect: function (d, settings) {\n    var decimal = settings.oLanguage.sDecimal;\n    return _htmlNumeric(d, decimal, true) ? 'html-num-fmt' : null;\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_html, _re_formatted_numeric);\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('html-num', {\n  className: 'dt-type-numeric',\n  detect: function (d, settings) {\n    var decimal = settings.oLanguage.sDecimal;\n    return _htmlNumeric(d, decimal) ? 'html-num' : null;\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_html);\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('num-fmt', {\n  className: 'dt-type-numeric',\n  detect: function (d, settings) {\n    var decimal = settings.oLanguage.sDecimal;\n    return _isNumber(d, decimal, true) ? 'num-fmt' : null;\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_formatted_numeric);\n    }\n  }\n});\nDataTable.type('num', {\n  className: 'dt-type-numeric',\n  detect: function (d, settings) {\n    var decimal = settings.oLanguage.sDecimal;\n    return _isNumber(d, decimal) ? 'num' : null;\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp);\n    }\n  }\n});\n\nvar __numericReplace = function (d, decimalPlace, re1, re2) {\n  if (d !== 0 && (!d || d === '-')) {\n    return -Infinity;\n  }\n\n  var type = typeof d;\n\n  if (type === 'number' || type === 'bigint') {\n    return d;\n  } // If a decimal place other than `.` is used, it needs to be given to the\n  // function so we can detect it and replace with a `.` which is the only\n  // decimal place Javascript recognises - it is not locale aware.\n\n\n  if (decimalPlace) {\n    d = _numToDecimal(d, decimalPlace);\n  }\n\n  if (d.replace) {\n    if (re1) {\n      d = d.replace(re1, '');\n    }\n\n    if (re2) {\n      d = d.replace(re2, '');\n    }\n  }\n\n  return d * 1;\n};\n\n$.extend(true, DataTable.ext.renderer, {\n  footer: {\n    _: function (settings, cell, classes) {\n      cell.addClass(classes.tfoot.cell);\n    }\n  },\n  header: {\n    _: function (settings, cell, classes) {\n      cell.addClass(classes.thead.cell);\n\n      if (!settings.oFeatures.bSort) {\n        cell.addClass(classes.order.none);\n      }\n\n      var legacyTop = settings.bSortCellsTop;\n      var headerRows = cell.closest('thead').find('tr');\n      var rowIdx = cell.parent().index(); // Conditions to not apply the ordering icons\n\n      if ( // Cells and rows which have the attribute to disable the icons\n      cell.attr('data-dt-order') === 'disable' || cell.parent().attr('data-dt-order') === 'disable' || // Legacy support for `orderCellsTop`. If it is set, then cells\n      // which are not in the top or bottom row of the header (depending\n      // on the value) do not get the sorting classes applied to them\n      legacyTop === true && rowIdx !== 0 || legacyTop === false && rowIdx !== headerRows.length - 1) {\n        return;\n      } // No additional mark-up required\n      // Attach a sort listener to update on sort - note that using the\n      // `DT` namespace will allow the event to be removed automatically\n      // on destroy, while the `dt` namespaced event is the one we are\n      // listening for\n\n\n      $(settings.nTable).on('order.dt.DT', function (e, ctx, sorting) {\n        if (settings !== ctx) {\n          // need to check this this is the host\n          return; // table, not a nested one\n        }\n\n        var orderClasses = classes.order;\n        var columns = ctx.api.columns(cell);\n        var col = settings.aoColumns[columns.flatten()[0]];\n        var orderable = columns.orderable().includes(true);\n        var ariaType = '';\n        var indexes = columns.indexes();\n        var sortDirs = columns.orderable(true).flatten();\n        var orderedColumns = sorting.map(function (val) {\n          return val.col;\n        }).join(',');\n        cell.removeClass(orderClasses.isAsc + ' ' + orderClasses.isDesc).toggleClass(orderClasses.none, !orderable).toggleClass(orderClasses.canAsc, orderable && sortDirs.includes('asc')).toggleClass(orderClasses.canDesc, orderable && sortDirs.includes('desc'));\n        var sortIdx = orderedColumns.indexOf(indexes.toArray().join(','));\n\n        if (sortIdx !== -1) {\n          // Get the ordering direction for the columns under this cell\n          // Note that it is possible for a cell to be asc and desc sorting\n          // (column spanning cells)\n          var orderDirs = columns.order();\n          cell.addClass(orderDirs.includes('asc') ? orderClasses.isAsc : '' + orderDirs.includes('desc') ? orderClasses.isDesc : '');\n        } // The ARIA spec says that only one column should be marked with aria-sort\n\n\n        if (sortIdx === 0 && orderedColumns.length === indexes.count()) {\n          var firstSort = sorting[0];\n          var sortOrder = col.asSorting;\n          cell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending'); // Determine if the next click will remove sorting or change the sort\n\n          ariaType = !sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n        } else {\n          cell.removeAttr('aria-sort');\n        }\n\n        cell.attr('aria-label', orderable ? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType) : col.ariaTitle);\n\n        if (orderable) {\n          cell.find('.dt-column-title').attr('role', 'button');\n          cell.attr('tabindex', 0);\n        }\n      });\n    }\n  },\n  layout: {\n    _: function (settings, container, items) {\n      var row = $('<div/>').addClass('dt-layout-row').appendTo(container);\n      $.each(items, function (key, val) {\n        var klass = !val.table ? 'dt-' + key + ' ' : '';\n\n        if (val.table) {\n          row.addClass('dt-layout-table');\n        }\n\n        $('<div/>').attr({\n          id: val.id || null,\n          \"class\": 'dt-layout-cell ' + klass + (val.className || '')\n        }).append(val.contents).appendTo(row);\n      });\n    }\n  }\n});\nDataTable.feature = {}; // Third parameter is internal only!\n\nDataTable.feature.register = function (name, cb, legacy) {\n  DataTable.ext.features[name] = cb;\n\n  if (legacy) {\n    _ext.feature.push({\n      cFeature: legacy,\n      fnInit: cb\n    });\n  }\n};\n\nDataTable.feature.register('info', function (settings, opts) {\n  // For compatibility with the legacy `info` top level option\n  if (!settings.oFeatures.bInfo) {\n    return null;\n  }\n\n  var lang = settings.oLanguage,\n      tid = settings.sTableId,\n      n = $('<div/>', {\n    'class': settings.oClasses.info.container\n  });\n  opts = $.extend({\n    callback: lang.fnInfoCallback,\n    empty: lang.sInfoEmpty,\n    postfix: lang.sInfoPostFix,\n    search: lang.sInfoFiltered,\n    text: lang.sInfo\n  }, opts); // Update display on each draw\n\n  settings.aoDrawCallback.push(function (s) {\n    _fnUpdateInfo(s, opts, n);\n  }); // For the first info display in the table, we add a callback and aria information.\n\n  if (!$('#' + tid + '_info', settings.nWrapper).length) {\n    n.attr({\n      'aria-live': 'polite',\n      id: tid + '_info',\n      role: 'status'\n    }); // Table is described by our info div\n\n    $(settings.nTable).attr('aria-describedby', tid + '_info');\n  }\n\n  return n;\n}, 'i');\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\n\nfunction _fnUpdateInfo(settings, opts, node) {\n  var start = settings._iDisplayStart + 1,\n      end = settings.fnDisplayEnd(),\n      max = settings.fnRecordsTotal(),\n      total = settings.fnRecordsDisplay(),\n      out = total ? opts.text : opts.empty;\n\n  if (total !== max) {\n    // Record set after filtering\n    out += ' ' + opts.search;\n  } // Convert the macros\n\n\n  out += opts.postfix;\n  out = _fnMacros(settings, out);\n\n  if (opts.callback) {\n    out = opts.callback.call(settings.oInstance, settings, start, end, max, total, out);\n  }\n\n  node.html(out);\n\n  _fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\n\nvar __searchCounter = 0; // opts\n// - text\n// - placeholder\n\nDataTable.feature.register('search', function (settings, opts) {\n  // Don't show the input if filtering isn't available on the table\n  if (!settings.oFeatures.bFilter) {\n    return null;\n  }\n\n  var classes = settings.oClasses.search;\n  var tableId = settings.sTableId;\n  var language = settings.oLanguage;\n  var previousSearch = settings.oPreviousSearch;\n  var input = '<input type=\"search\" class=\"' + classes.input + '\"/>';\n  opts = $.extend({\n    placeholder: language.sSearchPlaceholder,\n    text: language.sSearch\n  }, opts); // The _INPUT_ is optional - is appended if not present\n\n  if (opts.text.indexOf('_INPUT_') === -1) {\n    opts.text += '_INPUT_';\n  }\n\n  opts.text = _fnMacros(settings, opts.text); // We can put the <input> outside of the label if it is at the start or end\n  // which helps improve accessability (not all screen readers like implicit\n  // for elements).\n\n  var end = opts.text.match(/_INPUT_$/);\n  var start = opts.text.match(/^_INPUT_/);\n  var removed = opts.text.replace(/_INPUT_/, '');\n  var str = '<label>' + opts.text + '</label>';\n\n  if (start) {\n    str = '_INPUT_<label>' + removed + '</label>';\n  } else if (end) {\n    str = '<label>' + removed + '</label>_INPUT_';\n  }\n\n  var filter = $('<div>').addClass(classes.container).append(str.replace(/_INPUT_/, input)); // add for and id to label and input\n\n  filter.find('label').attr('for', 'dt-search-' + __searchCounter);\n  filter.find('input').attr('id', 'dt-search-' + __searchCounter);\n  __searchCounter++;\n\n  var searchFn = function (event) {\n    var val = this.value;\n\n    if (previousSearch.return && event.key !== \"Enter\") {\n      return;\n    }\n    /* Now do the filter */\n\n\n    if (val != previousSearch.search) {\n      previousSearch.search = val;\n\n      _fnFilterComplete(settings, previousSearch); // Need to redraw, without resorting\n\n\n      settings._iDisplayStart = 0;\n\n      _fnDraw(settings);\n    }\n  };\n\n  var searchDelay = settings.searchDelay !== null ? settings.searchDelay : 0;\n  var jqFilter = $('input', filter).val(previousSearch.search).attr('placeholder', opts.placeholder).on('keyup.DT search.DT input.DT paste.DT cut.DT', searchDelay ? DataTable.util.debounce(searchFn, searchDelay) : searchFn).on('mouseup.DT', function (e) {\n    // Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n    // on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n    // checks the value to see if it has changed. In other browsers it won't have.\n    setTimeout(function () {\n      searchFn.call(jqFilter[0], e);\n    }, 10);\n  }).on('keypress.DT', function (e) {\n    /* Prevent form submission */\n    if (e.keyCode == 13) {\n      return false;\n    }\n  }).attr('aria-controls', tableId); // Update the input elements whenever the table is filtered\n\n  $(settings.nTable).on('search.dt.DT', function (ev, s) {\n    if (settings === s && jqFilter[0] !== document.activeElement) {\n      jqFilter.val(typeof previousSearch.search !== 'function' ? previousSearch.search : '');\n    }\n  });\n  return filter;\n}, 'f'); // opts\n// - type - button configuration\n// - numbers - number of buttons to show - must be odd\n\nDataTable.feature.register('paging', function (settings, opts) {\n  // Don't show the paging input if the table doesn't have paging enabled\n  if (!settings.oFeatures.bPaginate) {\n    return null;\n  }\n\n  opts = $.extend({\n    numbers: DataTable.ext.pager.numbers_length,\n    type: settings.sPaginationType\n  }, opts);\n  var host = $('<div/>').addClass(settings.oClasses.paging.container + ' paging_' + opts.type);\n\n  var draw = function () {\n    _pagingDraw(settings, host, opts);\n  };\n\n  settings.aoDrawCallback.push(draw); // Responsive redraw of paging control\n\n  $(settings.nTable).on('column-sizing.dt.DT', draw);\n  return host;\n}, 'p');\n\nfunction _pagingDraw(settings, host, opts) {\n  if (!settings._bInitComplete) {\n    return;\n  }\n\n  var plugin = DataTable.ext.pager[opts.type],\n      aria = settings.oLanguage.oAria.paginate || {},\n      start = settings._iDisplayStart,\n      len = settings._iDisplayLength,\n      visRecords = settings.fnRecordsDisplay(),\n      all = len === -1,\n      page = all ? 0 : Math.ceil(start / len),\n      pages = all ? 1 : Math.ceil(visRecords / len),\n      buttons = plugin().map(function (val) {\n    return val === 'numbers' ? _pagingNumbers(page, pages, opts.numbers) : val;\n  }).flat();\n  var buttonEls = [];\n\n  for (var i = 0; i < buttons.length; i++) {\n    var button = buttons[i];\n\n    var btnInfo = _pagingButtonInfo(settings, button, page, pages);\n\n    var btn = _fnRenderer(settings, 'pagingButton')(settings, button, btnInfo.display, btnInfo.active, btnInfo.disabled); // Common attributes\n\n\n    $(btn.clicker).attr({\n      'aria-controls': settings.sTableId,\n      'aria-disabled': btnInfo.disabled ? 'true' : null,\n      'aria-current': btnInfo.active ? 'page' : null,\n      'aria-label': aria[button],\n      'data-dt-idx': button,\n      'tabIndex': btnInfo.disabled ? -1 : settings.iTabIndex\n    });\n\n    if (typeof button !== 'number') {\n      $(btn.clicker).addClass(button);\n    }\n\n    _fnBindAction(btn.clicker, {\n      action: button\n    }, function (e) {\n      e.preventDefault();\n\n      _fnPageChange(settings, e.data.action, true);\n    });\n\n    buttonEls.push(btn.display);\n  }\n\n  var wrapped = _fnRenderer(settings, 'pagingContainer')(settings, buttonEls);\n\n  var activeEl = host.find(document.activeElement).data('dt-idx');\n  host.empty().append(wrapped);\n\n  if (activeEl !== undefined) {\n    host.find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n  } // Responsive - check if the buttons are over two lines based on the\n  // height of the buttons and the container.\n\n\n  if (buttonEls.length && // any buttons\n  opts.numbers > 1 && // prevent infinite\n  $(host).height() >= $(buttonEls[0]).outerHeight() * 2 - 10) {\n    _pagingDraw(settings, host, $.extend({}, opts, {\n      numbers: opts.numbers - 2\n    }));\n  }\n}\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\n\n\nfunction _pagingButtonInfo(settings, button, page, pages) {\n  var lang = settings.oLanguage.oPaginate;\n  var o = {\n    display: '',\n    active: false,\n    disabled: false\n  };\n\n  switch (button) {\n    case 'ellipsis':\n      o.display = '&#x2026;';\n      o.disabled = true;\n      break;\n\n    case 'first':\n      o.display = lang.sFirst;\n\n      if (page === 0) {\n        o.disabled = true;\n      }\n\n      break;\n\n    case 'previous':\n      o.display = lang.sPrevious;\n\n      if (page === 0) {\n        o.disabled = true;\n      }\n\n      break;\n\n    case 'next':\n      o.display = lang.sNext;\n\n      if (pages === 0 || page === pages - 1) {\n        o.disabled = true;\n      }\n\n      break;\n\n    case 'last':\n      o.display = lang.sLast;\n\n      if (pages === 0 || page === pages - 1) {\n        o.disabled = true;\n      }\n\n      break;\n\n    default:\n      if (typeof button === 'number') {\n        o.display = settings.fnFormatNumber(button + 1);\n\n        if (page === button) {\n          o.active = true;\n        }\n      }\n\n      break;\n  }\n\n  return o;\n}\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @returns Buttons to show\n */\n\n\nfunction _pagingNumbers(page, pages, buttons) {\n  var numbers = [],\n      half = Math.floor(buttons / 2);\n\n  if (pages <= buttons) {\n    numbers = _range(0, pages);\n  } else if (buttons === 1) {\n    // Single button - current page only\n    numbers = [page];\n  } else if (buttons === 3) {\n    // Special logic for just three buttons\n    if (page <= 1) {\n      numbers = [0, 1, 'ellipsis'];\n    } else if (page >= pages - 2) {\n      numbers = _range(pages - 2, pages);\n      numbers.unshift('ellipsis');\n    } else {\n      numbers = ['ellipsis', page, 'ellipsis'];\n    }\n  } else if (page <= half) {\n    numbers = _range(0, buttons - 2);\n    numbers.push('ellipsis', pages - 1);\n  } else if (page >= pages - 1 - half) {\n    numbers = _range(pages - (buttons - 2), pages);\n    numbers.unshift(0, 'ellipsis');\n  } else {\n    numbers = _range(page - half + 2, page + half - 1);\n    numbers.push('ellipsis', pages - 1);\n    numbers.unshift(0, 'ellipsis');\n  }\n\n  return numbers;\n}\n\nvar __lengthCounter = 0; // opts\n// - menu\n// - text\n\nDataTable.feature.register('pageLength', function (settings, opts) {\n  var features = settings.oFeatures; // For compatibility with the legacy `pageLength` top level option\n\n  if (!features.bPaginate || !features.bLengthChange) {\n    return null;\n  }\n\n  opts = $.extend({\n    menu: settings.aLengthMenu,\n    text: settings.oLanguage.sLengthMenu\n  }, opts);\n  var classes = settings.oClasses.length,\n      tableId = settings.sTableId,\n      menu = opts.menu,\n      lengths = [],\n      language = [],\n      i; // Options can be given in a number of ways\n\n  if (Array.isArray(menu[0])) {\n    // Old 1.x style - 2D array\n    lengths = menu[0];\n    language = menu[1];\n  } else {\n    for (i = 0; i < menu.length; i++) {\n      // An object with different label and value\n      if ($.isPlainObject(menu[i])) {\n        lengths.push(menu[i].value);\n        language.push(menu[i].label);\n      } else {\n        // Or just a number to display and use\n        lengths.push(menu[i]);\n        language.push(menu[i]);\n      }\n    }\n  } // We can put the <select> outside of the label if it is at the start or\n  // end which helps improve accessability (not all screen readers like\n  // implicit for elements).\n\n\n  var end = opts.text.match(/_MENU_$/);\n  var start = opts.text.match(/^_MENU_/);\n  var removed = opts.text.replace(/_MENU_/, '');\n  var str = '<label>' + opts.text + '</label>';\n\n  if (start) {\n    str = '_MENU_<label>' + removed + '</label>';\n  } else if (end) {\n    str = '<label>' + removed + '</label>_MENU_';\n  } // Wrapper element - use a span as a holder for where the select will go\n\n\n  var div = $('<div/>').addClass(classes.container).append(str.replace('_MENU_', '<span></span>')); // Save text node content for macro updating\n\n  var textNodes = [];\n  div.find('label')[0].childNodes.forEach(function (el) {\n    if (el.nodeType === Node.TEXT_NODE) {\n      textNodes.push({\n        el: el,\n        text: el.textContent\n      });\n    }\n  }); // Update the label text in case it has an entries value\n\n  var updateEntries = function (len) {\n    textNodes.forEach(function (node) {\n      node.el.textContent = _fnMacros(settings, node.text, len);\n    });\n  }; // Next, the select itself, along with the options\n\n\n  var select = $('<select/>', {\n    'name': tableId + '_length',\n    'aria-controls': tableId,\n    'class': classes.select\n  });\n\n  for (i = 0; i < lengths.length; i++) {\n    select[0][i] = new Option(typeof language[i] === 'number' ? settings.fnFormatNumber(language[i]) : language[i], lengths[i]);\n  } // add for and id to label and input\n\n\n  div.find('label').attr('for', 'dt-length-' + __lengthCounter);\n  select.attr('id', 'dt-length-' + __lengthCounter);\n  __lengthCounter++; // Swap in the select list\n\n  div.find('span').replaceWith(select); // Can't use `select` variable as user might provide their own and the\n  // reference is broken by the use of outerHTML\n\n  $('select', div).val(settings._iDisplayLength).on('change.DT', function () {\n    _fnLengthChange(settings, $(this).val());\n\n    _fnDraw(settings);\n  }); // Update node value whenever anything changes the table's length\n\n  $(settings.nTable).on('length.dt.DT', function (e, s, len) {\n    if (settings === s) {\n      $('select', div).val(len); // Resolve plurals in the text for the new length\n\n      updateEntries(len);\n    }\n  });\n  updateEntries(settings._iDisplayLength);\n  return div;\n}, 'l'); // jQuery access\n\n$.fn.dataTable = DataTable; // Provide access to the host jQuery object (circular reference)\n\nDataTable.$ = $; // Legacy aliases\n\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext; // With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n\n$.fn.DataTable = function (opts) {\n  return $(this).dataTable(opts).api();\n}; // All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n\n\n$.each(DataTable, function (prop, val) {\n  $.fn.DataTable[prop] = val;\n});\nexport default DataTable;","map":{"version":3,"sources":["D:/rooman/project/KisanConnect/KisaanConnect(Frontend)/node_modules/datatables.net/js/dataTables.mjs"],"names":["jQuery","$","DataTable","selector","options","factory","_that","emptyInit","undefined","len","length","api","_Api","each","o","oInit","_fnExtend","i","iLen","sId","getAttribute","bInitHandedOff","defaults","$this","nodeName","toLowerCase","_fnLog","trigger","_fnCompatOpts","_fnCompatCols","column","_fnCamelToHungarian","extend","data","allSettings","settings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","Api","destroy","sTableId","id","splice","ext","_unique","oSettings","models","style","width","colgroup","prependTo","fastData","row","type","_fnGetCellData","push","dataTable","aLengthMenu","iDisplayLength","Array","isArray","isPlainObject","value","_fnMap","oFeatures","oScroll","oLanguage","_fnCallbackReg","fnDrawCallback","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","table","bPaginate","iDisplayStart","iInitDisplayStart","_iDisplayStart","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","columnsInit","thead","getElementsByTagName","initHeaderLayout","_fnDetectHeader","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","iCol","oDef","_fnColumnOptions","rowOne","children","find","eq","a","cell","name","col","mData","sort","filter","_","_isArrayHost","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSorted","_fnDataSource","bDeferRender","caption","appendTo","html","_captionSide","css","captionNode","tbody","insertAfter","nTBody","tfoot","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","slice","bInitialised","_fnSaveState","bStateSave","_fnLoadState","_ext","buttons","builder","errMode","feature","search","legacy","pager","renderer","pageButton","header","order","className","detect","render","fnVersionCheck","iApiIndex","sVersion","version","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","aoFeatures","oStdClasses","oPagination","container","empty","info","select","canAsc","canDesc","isAsc","isDesc","none","position","processing","scrolling","body","footer","self","inner","input","paging","active","button","disabled","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","join","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_isHtml","_htmlNumeric","match","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","_escapeHtml","_normalize","str","both","res","normalize","_areAllUnique","src","sorted","last","from","Set","val","j","k","again","_flatten","_addClass","el","split","forEach","n","classList","add","util","diacritics","mixed","debounce","fn","timeout","timer","that","args","arguments","clearTimeout","setTimeout","apply","throttle","freq","frequency","now","Date","escapeRegex","set","source","meta","indexOf","setData","_fnSplitObjNotation","b","aLast","arrayNotation","funcNotation","innerSrc","Error","__reArray","__reFn","jLen","get","key","t","fetchData","substring","stripHtml","escapeHtml","unique","_fnHungarianMap","hungarian","newKey","map","_hungarianMap","user","force","hungarianKey","charAt","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","serverSide","searchDelay","dataSort","aDataSort","__browser","browser","top","left","window","pageXOffset","height","overflow","append","outer","barWidth","offsetWidth","clientWidth","bScrollbarLeft","Math","round","offset","remove","oBrowser","iBarWidth","oDefaults","oCol","oColumn","idx","searchFixed","colEl","aoPreSearchCols","oOptions","mDataProp","sType","_sManualType","sClass","origClass","iDataSort","mDataSrc","mRender","copy","shift","_render","attrTest","_bAttrSrc","_setter","fnGetData","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSort","bSortable","_fnAdjustColumnSizing","_fnCalculateColumnWidths","_fnColumnSizes","scroll","sY","sX","_fnScrollDraw","cols","_fnColumnsSumWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","layout","aoHeader","columns","vis","bVisible","sParam","_fnColumnTypes","aoData","types","jen","ken","detectedType","cache","autoClass","_columnAutoClass","aoFooter","_columnAutoRender","colIdx","nTr","display","displayData","_fnWriteCell","anCells","aoColDefs","aoCols","headerLayout","kLen","def","sName","aTargets","target","targets","is","original","incVisible","_fnColumnsFromHeader","sum","unit","definedWidth","sWidthOrig","sWidth","matched","attr","closest","dataIn","tr","tds","rowIdx","rowModel","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","draw","iDraw","defaultContent","sDefaultContent","cellData","innerHTML","iDrawError","call","fomatters","_fnSetCellData","td","parts","_fnGetDataMaster","_fnClearTable","_fnInvalidate","_aSortData","_aFilterData","_fnGetRowDisplay","maxLenString","_fnRowAttributes","firstChild","contents","objectRead","setter","cellProcess","trim","toUpperCase","nextSibling","rowNode","rowModal","iRow","nTrIn","anTds","nTd","create","trClass","document","createElement","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","removeChild","fnCreatedCell","DT_RowClass","__rowc","concat","removeClass","DT_RowAttr","DT_RowData","_fnBuildHead","side","titleProp","detected","_fnRenderer","_fnHeaderLayout","incColumns","local","structure","columnCount","rowspan","colspan","includes","titleSpan","title","_fnDrawHead","point","_fnDraw","ajaxComplete","_fnStart","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","bServerSide","iDisplayEnd","fnDisplayEnd","bDrawing","bDestroying","_emptyRow","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","detach","nTableWrapper","toggleClass","bFiltered","_fnReDraw","holdPosition","recompute","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","oLang","zero","sZeroRecords","dataSrc","sLoadingRecords","sEmptyTable","fnRecordsTotal","_layoutArray","groups","pos","splitPos","align","group","groupRun","innerVal","Object","keys","opts","filtered","item","order1","order2","reverse","rows","full","_layoutResolve","getFeature","resolve","line","node","inst","_fnAddOptionsHtml","insert","insertBefore","bottom","sDom","_fnLayoutDom","_fnFeatureHtmlTable","_processingHtml","dom","featureNode","option","newNode","next","parent","cFeature","fnInit","write","l","shifted","isHeader","columnDef","sTitle","autoTitle","ariaTitle","childNodes","setAttribute","fnRecordsDisplay","_fnBuildAjax","ajaxData","instance","callback","status","jqXHR","_fnAjaxDataSrc","sError","newData","baseAjax","sServerMethod","xhr","ret","readyState","oAjaxData","_fnAjaxParameters","_fnAjaxUpdateDraw","preSearch","preColSearch","colData","searchable","bSearchable","orderable","regex","fixed","term","toString","_fnSortFlatten","dir","_iDisplayLength","_fnAjaxDataSrcParam","recordsTotal","recordsFiltered","_iRecordsTotal","_iRecordsDisplay","_fnInitComplete","dataProp","param","columnsSearch","_fnFilterData","_fnFilter","_fnFilterCustom","filters","displayRows","searchRows","searchFunc","rpSearch","_fnFilterCreateSearch","_sFilterRow","test","inOpts","not","boundary","caseInsensitive","exact","smart","word","negative","m","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","iAjaxStart","_fnSortInit","_colGroup","aData","_bInitComplete","_fnLengthChange","_fnLengthOverflow","_fnPageChange","action","redraw","records","floor","changed","bProcessing","sProcessing","on","e","show","scrollY","captionSide","headerClone","cloneNode","footerClone","_div","size","_fnStringToCss","scroller","border","sXInner","removeAttr","scrollHead","scrollBody","scrollFoot","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","aoDrawCallback","divHeader","divHeaderInner","divHeaderTable","divBodyEl","divBody","divFooter","divFooterInner","divFooterTable","headerCopy","footerCopy","scrollBarVis","scrollHeight","clientHeight","clone","colSizes","outerWidth","colWidth","wrapAll","isScrolling","paddingSide","scrollTop","bAutoWidth","scrollXInner","visibleColumns","tableWidthAttr","tableContainer","columnIdx","styleWidth","visible","tmpTable","margin","padding","longest","_fnGetMaxLenString","text","sContentPadding","createTextNode","holder","right","total","bodyCells","bounding","getBoundingClientRect","_reszEvt","bindResize","sInstance","max","maxLen","cellString","nodeType","headerRows","querySelectorAll","legacyTop","bSortCellsTop","notSelector","_fnSortAttachListener","_fnSortResolve","_fnBindAction","run","_fnSortAdd","shiftKey","_fnSortDisplay","master","masterMap","nestedSort","z","aSort","extSort","srcCol","aaSortingFixed","fixedObj","pre","post","_idx","index","formatter","sorter","aiOrig","sortCol","displayMaster","_fnSortData","x","y","dataA","dataB","addIndex","nextSortIdx","bSortMulti","sortIdx","oldSort","aLastSort","sortClass","bSortClasses","customSort","sSortDataType","customData","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","loaded","_fnImplementState","fnStateLoadCallback","duration","iStateDuration","abStateLoad","oLoadedState","page","adjust","level","msg","tn","sErrMode","alert","console","log","mappedName","extender","breakRefs","prototype","hasOwnProperty","which","preventDefault","store","callbackArr","eventName","bubbles","Event","dt","parents","result","host","_fnMacros","entries","fnFormatNumber","all","ceil","i18n","__apiStruct","__arrayProto","_toSettings","jq","tables","toArray","v","context","ctxSettings","any","count","flatten","ctx","iterator","alwaysNew","items","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","to$","toJQuery","unshift","_api_scope","scope","struc","methodExt","_api_find","obj","__dt_wrapper","struct","propExt","register","heir","method","registerPlural","pluralName","singularName","__table_selector","sel","nodes","indexes","prepend","visRecords","__reload","one","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","_selector_first","tmp","displayFiltered","displayFilteredMap","ordered","__row_selector","selInt","cellIdx","rowObj","r","hash","newRows","modRows","idFn","ids","_detailsShow","childRows","__details_state_load","every","__details_add","klass","addRow","created","colSpan","_details","__details_state","__details_remove","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_emp","_child_obj","_child_mth","child","__re_column_selector","__columnData","r1","r2","__column_selector","names","titles","visColumns","jqResult","__setColumnVis","span","calc","widths","visIdx","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","selected","columnVisible","directions","caseInsen","ignoreTime","setMutate","use","module","DateTime","root","jquery","versionCheck","version2","aThis","aThat","iThis","iThat","isDataTable","head","foot","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orderClasses","orig","removedMethod","sDestroyWidth","counter","selectedIdx","tableIdx","token","plural","resolved","toFormat","sThousands","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","first","previous","topStart","topEnd","bottomStart","bottomEnd","pagingControls","min","extPagination","simple","numbers","simple_numbers","full_numbers","first_last","first_last_numbers","_numbers","_pagingNumbers","numbers_length","pagingButton","buttonType","content","btnClasses","btn","class","role","clicker","pagingContainer","_filterString","__mldFnName","__mld","momentFn","luxonFn","dateFn","arg1","moment","luxon","__mlWarning","__mldObj","format","locale","utc","isValid","fromFormat","fromISO","setLocale","__mlHelper","localeString","to","typeName","valueOf","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","date","number","thousands","decimal","precision","prefix","postfix","flo","abs","exp","toExponential","toFixed","intPart","floatPart","_extTypes","asc","desc","setProp","propVal","setDetect","cb","defineProperty","findIndex","setOrder","parsed","ts","Infinity","sDecimal","dp","__numericReplace","decimalPlace","re1","re2","ariaType","sortDirs","orderedColumns","orderDirs","firstSort","sortOrder","bInfo","lang","tid","fnInfoCallback","sInfoEmpty","sInfoPostFix","sInfoFiltered","sInfo","_fnUpdateInfo","nWrapper","__searchCounter","tableId","language","previousSearch","placeholder","sSearchPlaceholder","sSearch","removed","searchFn","event","return","jqFilter","keyCode","ev","activeElement","sPaginationType","_pagingDraw","plugin","aria","oAria","pages","flat","buttonEls","btnInfo","_pagingButtonInfo","iTabIndex","wrapped","activeEl","outerHeight","oPaginate","sFirst","sPrevious","sNext","sLast","half","__lengthCounter","bLengthChange","menu","sLengthMenu","lengths","label","div","textNodes","Node","TEXT_NODE","updateEntries","Option","replaceWith","dataTableSettings","dataTableExt"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCkC,EAAAA,MAAM,EAAE,EAjHc;;AAoHtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCjK,EAAAA,QAAQ,EAAE;AACTuH,IAAAA,IAAI,EAAE,EADG;AAET5F,IAAAA,MAAM,EAAE,EAFC;AAGT4B,IAAAA,GAAG,EAAE;AAHI,GA5IY;;AAmJtB;AACD;AACA;AACA;AACA;AACA;AACC2G,EAAAA,MAAM,EAAE;AACP;AACF;AACA;AACA;AACA;AACA;AACA;AACEpE,IAAAA,IAAI,EAAE;AARC,GAzJc;;AAqKtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCqE,EAAAA,KAAK,EAAE,EAlNe;AAqNtBC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,MAAM,EAAE;AAFC,GArNY;;AA2NtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,KAAK,EAAE,EAnQe;;AAsQtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC/G,EAAAA,IAAI,EAAE;AACL;AACF;AACA;AACEgH,IAAAA,SAAS,EAAE,EAJN;;AAML;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,MAAM,EAAE,EA9CH;;AAgDL;AACF;AACA;AACEC,IAAAA,MAAM,EAAE,EAnDH;;AAsDL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACET,IAAAA,MAAM,EAAE,EA1FH;;AA6FL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEM,IAAAA,KAAK,EAAE;AA7JF,GAhRgB;;AAgbtB;AACD;AACA;AACA;AACA;AACA;AACCxH,EAAAA,OAAO,EAAE,CAtba;AAybtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACD;AACA;AACA;AACA;AACC4H,EAAAA,cAAc,EAAE5K,SAAS,CAAC4K,cArcJ;;AAwctB;AACD;AACA;AACA;AACA;AACCC,EAAAA,SAAS,EAAE,CA7cW;;AAgdtB;AACD;AACA;AACA;AACA;AACCC,EAAAA,QAAQ,EAAE9K,SAAS,CAAC+K;AArdE,CAAvB,C,CAydA;AACA;AACA;;AACAhL,CAAC,CAAC+B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,IA9BS;;AAgCvB;AACD;AACA;AACA;AACC,kBAAgB,IApCO;;AAsCvB;AACD;AACA;AACA;AACA;AACA;AACC,iBAAe,IA5CQ;;AA8CvB;AACD;AACA;AACA;AACA;AACA;AACC,SAAO,IApDgB;;AAsDvB;AACD;AACA;AACA;AACC,SAAO,CAAC,CA1De;;AA4DvB;AACD;AACA;AACC7B,EAAAA,WAAW,EAAE;AA/DU,CAAxB;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAna,SAAS,CAACkD,MAAV,CAAiBiT,OAAjB,GAA2B;AAC1B;AACD;AACA;AACC,SAAO,IAJmB;;AAM1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,IAda;;AAgB1B;AACD;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,IAvBa;;AAyB1B;AACD;AACA;AACA;AACC,iBAAe,IA7BW;;AA+B1B;AACD;AACA;AACC,eAAa,IAlCa;;AAoC1B;AACD;AACA;AACC,cAAY,IAvCc;;AAyC1B;AACD;AACA;AACA;AACC,kBAAgB,IA7CU;;AA+C1B;AACD;AACA;AACA;AACC,eAAa,KAnDa;;AAqD1B;AACD;AACA;AACA;AACA;AACA;AACC,mBAAiB,IA3DS;;AA6D1B;AACD;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,IApEa;;AAsE1B;AACD;AACA;AACA;AACA;AACA;AACC,eAAa,IA5Ea;;AA8E1B;AACD;AACA;AACA;AACA;AACC,WAAS,IAnFiB;;AAqF1B;AACD;AACA;AACA;AACA;AACA;AACC,aAAW,IA3Fe;;AA6F1B;AACD;AACA;AACC,YAAU,IAhGgB;;AAkG1B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,qBAAmB,IA5GO;;AA8G1B;AACD;AACA;AACA;AACA;AACC,qBAAmB,IAnHO;;AAqH1B;AACD;AACA;AACA;AACC,WAAS,IAzHiB;;AA2H1B;AACD;AACA;AACA;AACC,mBAAiB,KA/HS;;AAiI1B;AACD;AACA;AACC,mBAAiB,IApIS;;AAsI1B;AACD;AACA;AACC,YAAU,IAzIgB;;AA2I1B;AACD;AACA;AACC,WAAS,IA9IiB;;AAgJ1B;AACD;AACA;AACC,YAAU,IAnJgB;;AAqJ1B;AACD;AACA;AACC,gBAAc,IAxJY;;AA0J1B;AACAsH,EAAAA,YAAY,EAAE,IA3JY;;AA6J1B;AACD;AACA;AACCpH,EAAAA,WAAW,EAAE;AAhKa,CAA3B;AAoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACArW,SAAS,CAACoB,QAAV,GAAqB;AACpB;AACD;AACA;AACA;AACA;AACA;AACC,YAAU,IAPU;;AAUpB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,CAAC,CAAC,CAAD,EAAG,KAAH,CAAD,CAjBO;;AAoBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,oBAAkB,EA5BE;;AA+BpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,UAAQ,IAnGY;;AAsGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,iBAAe,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,EAAc,GAAd,CAjHK;;AAoHpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,IA7HO;;AA+HpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,kBAAgB,IA/II;;AAkJpB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,kBAAgB,EAzJI;;AA4JpB;AACD;AACA;AACA;AACA;AACC,gBAAc,IAjKM;;AAoKpB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,kBAAgB,IA3KI;;AA8KpB;AACD;AACA;AACA;AACA;AACA;AACC,cAAY,KApLQ;;AAuLpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,aAAW,IAhMS;;AAkMpB;AACD;AACA;AACA;AACC,WAAS,IAtMW;;AAwMpB;AACD;AACA;AACA;AACC,mBAAiB,IA5MG;;AA8MpB;AACD;AACA;AACC,eAAa,IAjNO;;AAoNpB;AACD;AACA;AACA;AACA;AACA;AACC,iBAAe,KA1NK;;AA6NpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,KAtOO;;AAyOpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,qBAAmB,KAjPC;;AAoPpB;AACD;AACA;AACA;AACA;AACC,iBAAe,KAzPK;;AA4PpB;AACD;AACA;AACA;AACC,WAAS,IAhQW;;AAmQpB;AACD;AACA;AACA;AACC,gBAAc,IAvQM;;AA0QpB;AACD;AACA;AACA;AACA;AACC,mBAAiB,IA/QG;;AAkRpB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,kBAAgB,IAzRI;;AA4RpB;AACD;AACA;AACA;AACA;AACA;AACC,gBAAc,KAlSM;;AAqSpB;AACD;AACA;AACA;AACA;AACC,kBAAgB,IA1SI;;AA6SpB;AACD;AACA;AACA;AACC,oBAAkB,IAjTE;;AAoTpB;AACD;AACA;AACA;AACC,sBAAoB,IAxTA;;AA2TpB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,oBAAkB,UAAWu9B,QAAX,EAAsB;AACvC,WAAOA,QAAQ,CAAC/W,QAAT,GAAoB1Z,OAApB,CACN,uBADM,EAEN,KAAK5J,SAAL,CAAes6B,UAFT,CAAP;AAIA,GAvUmB;;AA0UpB;AACD;AACA;AACA;AACA;AACC,sBAAoB,IA/UA;;AAkVpB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,oBAAkB,IAzVE;;AA4VpB;AACD;AACA;AACA;AACA;AACA;AACC,oBAAkB,IAlWE;;AAqWpB;AACD;AACA;AACA;AACA;AACC,uBAAqB,IA1WD;;AA6WpB;AACD;AACA;AACA;AACA;AACC,mBAAiB,IAlXG;;AAqXpB;AACD;AACA;AACA;AACA;AACC,yBAAuB,UAAW38B,QAAX,EAAsB;AAC5C,QAAI;AACH,aAAO48B,IAAI,CAACC,KAAL,CACN,CAAC78B,QAAQ,CAACkxB,cAAT,KAA4B,CAAC,CAA7B,GAAiC4L,cAAjC,GAAkDC,YAAnD,EAAiEC,OAAjE,CACC,gBAAch9B,QAAQ,CAACstB,SAAvB,GAAiC,GAAjC,GAAqC2P,QAAQ,CAACC,QAD/C,CADM,CAAP;AAKA,KAND,CAME,OAAOhU,CAAP,EAAU;AACX,aAAO,EAAP;AACA;AACD,GApYmB;;AAuYpB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,uBAAqB,IA9YD;;AAiZpB;AACD;AACA;AACA;AACC,mBAAiB,IArZG;;AAwZpB;AACD;AACA;AACA;AACA;AACC,yBAAuB,UAAWlpB,QAAX,EAAqBF,IAArB,EAA4B;AAClD,QAAI;AACH,OAACE,QAAQ,CAACkxB,cAAT,KAA4B,CAAC,CAA7B,GAAiC4L,cAAjC,GAAkDC,YAAnD,EAAiEI,OAAjE,CACC,gBAAcn9B,QAAQ,CAACstB,SAAvB,GAAiC,GAAjC,GAAqC2P,QAAQ,CAACC,QAD/C,EAECN,IAAI,CAACQ,SAAL,CAAgBt9B,IAAhB,CAFD;AAIA,KALD,CAKE,OAAOopB,CAAP,EAAU,CACX;AACA;AACD,GAtamB;;AAyapB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,uBAAqB,IAhbD;;AAmbpB;AACD;AACA;AACA;AACA;AACC,oBAAkB,IAxbE;;AA2bpB;AACD;AACA;AACA;AACA;AACC,oBAAkB,EAhcE;;AAmcpB;AACD;AACA;AACA;AACA;AACA;AACC,mBAAiB,CAzcG;;AA4cpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,CApdO;;AAudpB;AACD;AACA;AACA;AACA;AACA;AACC,cAAY,EA7dQ;;AAgepB;AACD;AACA;AACA;AACA;AACC,eAAa;AACZ;AACF;AACA;AACA;AACA;AACE,aAAS;AACR;AACH;AACA;AACG,mBAAa,oBAJL;;AAMR;AACH;AACA;AACG,0BAAoB,8BATZ;;AAWR;AACH;AACA;AACA;AACG,yBAAmB,8BAfX;AAiBRmU,MAAAA,QAAQ,EAAE;AACTC,QAAAA,KAAK,EAAE,OADE;AAETzvB,QAAAA,IAAI,EAAE,MAFG;AAGTqV,QAAAA,IAAI,EAAE,MAHG;AAITqa,QAAAA,QAAQ,EAAE;AAJD;AAjBF,KANG;;AA+BZ;AACF;AACA;AACA;AACE,iBAAa;AACZ;AACH;AACA;AACG,gBAAU,GAJE;;AAMZ;AACH;AACA;AACG,eAAS,GATG;;AAWZ;AACH;AACA;AACG,eAAS,GAdG;;AAgBZ;AACH;AACA;AACG,mBAAa;AAnBD,KAnCD;;AAyDZ;AACF;AACA;AACExK,IAAAA,OAAO,EAAE;AACRltB,MAAAA,CAAC,EAAE,SADK;AAER,SAAG;AAFK,KA5DG;;AAiEZ;AACF;AACA;AACA;AACA;AACA;AACE,mBAAe,4BAvEH;;AA0EZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,aAAS,qDAxFG;;AA2FZ;AACF;AACA;AACA;AACE,kBAAc,qCA/FF;;AAkGZ;AACF;AACA;AACA;AACA;AACE,qBAAiB,2CAvGL;;AA0GZ;AACF;AACA;AACA;AACA;AACA;AACE,oBAAgB,EAhHJ;;AAmHZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,gBAAY,EAhIA;;AAmIZ;AACF;AACA;AACA;AACA;AACA;AACE,kBAAc,GAzIF;;AA4IZ;AACF;AACA;AACA;AACA;AACA;AACE,mBAAe,2BAlJH;;AAqJZ;AACF;AACA;AACA;AACA;AACA;AACA;AACE,uBAAmB,YA5JP;;AA+JZ;AACF;AACA;AACA;AACE,mBAAe,EAnKH;;AAsKZ;AACF;AACA;AACA;AACA;AACA;AACA;AACE,eAAW,SA7KC;;AAgLZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,0BAAsB,EAxLV;;AA2LZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,YAAQ,EAnMI;;AAsMZ;AACF;AACA;AACA;AACA;AACE,oBAAgB;AA3MJ,GAreO;;AAorBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,aAAW/H,CAAC,CAAC+B,MAAF,CAAU,EAAV,EAAc9B,SAAS,CAACkD,MAAV,CAAiBsR,OAA/B,CA7rBS;;AAgsBpB;AACD;AACA;AACCuE,EAAAA,MAAM,EAAE;AACP0mB,IAAAA,QAAQ,EAAE,YADH;AAEPC,IAAAA,MAAM,EAAE,QAFD;AAGPC,IAAAA,WAAW,EAAE,MAHN;AAIPC,IAAAA,SAAS,EAAE;AAJJ,GAnsBY;;AA2sBpB;AACD;AACA;AACC,UAAQ,IA9sBY;;AAitBpB;AACD;AACA;AACA;AACA;AACC,iBAAe,IAttBK;;AAytBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,qBAAmB,cApuBC;;AAuuBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,cAAY,EAhvBQ;;AAmvBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,mBAAiB,EA3vBG;;AA8vBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,cAAY,EAtwBQ;;AAywBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACC,mBAAiB,KAhxBG;;AAmxBpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,cAAY,IA7xBQ;;AAgyBpB;AACD;AACA;AACA;AACC,WAAS,UApyBW;;AAuyBpB;AACD;AACA;AACC,aAAW;AA1yBS,CAArB;;AA6yBArsB,eAAe,CAAEvT,SAAS,CAACoB,QAAZ,CAAf;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AACApB,SAAS,CAACoB,QAAV,CAAmBQ,MAAnB,GAA4B;AAC3B;AACD;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,IARc;AAS3B,eAAa,CAAC,CATa;AAW3BkkB,EAAAA,SAAS,EAAE,EAXgB;;AAc3B;AACD;AACA;AACA;AACA;AACC,eAAa,CAAE,KAAF,EAAS,MAAT,EAAiB,EAAjB,CAnBc;;AAsB3B;AACD;AACA;AACC,iBAAe,IAzBY;;AA4B3B;AACD;AACA;AACC,eAAa,IA/Bc;;AAkC3B;AACD;AACA;AACC,cAAY,IArCe;;AAwC3B;AACD;AACA;AACA;AACA;AACA;AACC,mBAAiB,IA9CU;;AAiD3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,WAAS,IA/GkB;;AAkH3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,aAAW,IApKgB;;AAuK3B;AACD;AACA;AACA;AACA;AACC,eAAa,IA5Kc;;AA+K3B;AACD;AACA;AACC,YAAU,EAlLiB;;AAoL3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,qBAAmB,EA/LQ;;AAkM3B;AACD;AACA;AACA;AACA;AACC,qBAAmB,IAvMQ;;AA0M3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACC,WAAS,EAlNkB;;AAqN3B;AACD;AACA;AACA;AACA;AACA;AACC,mBAAiB,KA3NU;;AA8N3B;AACD;AACA;AACC,YAAU,IAjOiB;;AAoO3B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,WAAS,IA7OkB;;AAgP3B;AACD;AACA;AACA;AACA;AACA;AACC,YAAU;AAtPiB,CAA5B;;AAyPAvS,eAAe,CAAEvT,SAAS,CAACoB,QAAV,CAAmBQ,MAArB,CAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5B,SAAS,CAACkD,MAAV,CAAiBD,SAAjB,GAA6B;AAC5B;AACD;AACA;AACC,eAAa;AAEZ;AACF;AACA;AACA;AACA;AACA;AACE,kBAAc,IARF;;AAUZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACE,oBAAgB,IAlBJ;;AAoBZ;AACF;AACA;AACA;AACA;AACA;AACA;AACE,eAAW,IA3BC;;AA6BZ;AACF;AACA;AACA;AACE,aAAS,IAjCG;;AAmCZ;AACF;AACA;AACA;AACE,qBAAiB,IAvCL;;AAyCZ;AACF;AACA;AACA;AACA;AACA;AACE,iBAAa,IA/CD;;AAiDZ;AACF;AACA;AACA;AACA;AACA;AACE,mBAAe,IAvDH;;AAyDZ;AACF;AACA;AACA;AACA;AACA;AACA;AACE,mBAAe,IAhEH;;AAkEZ;AACF;AACA;AACA;AACA;AACE,aAAS,IAvEG;;AAyEZ;AACF;AACA;AACA;AACA;AACE,kBAAc,IA9EF;;AAgFZ;AACF;AACA;AACA;AACA;AACA;AACA;AACE,oBAAgB,IAvFJ;;AAyFZ;AACF;AACA;AACA;AACA;AACE,kBAAc;AA9FF,GAJe;;AAsG5B;AACD;AACA;AACC,aAAW;AACV;AACF;AACA;AACA;AACA;AACA;AACE,iBAAa,IAPH;;AASV;AACF;AACA;AACA;AACE,iBAAa,CAbH;;AAeV;AACF;AACA;AACA;AACA;AACA;AACE,UAAM,IArBI;;AAuBV;AACF;AACA;AACA;AACA;AACA;AACA;AACE,eAAW,IA9BD;;AAgCV;AACF;AACA;AACA;AACA;AACA;AACE,UAAM;AAtCI,GAzGiB;;AAkJ5B;AACD;AACA;AACC,eAAa;AACZ;AACF;AACA;AACA;AACE,sBAAkB;AALN,GArJe;;AA6J5B;AACD;AACA;AACC,cAAY;AACX;AACF;AACA;AACA;AACA;AACE,sBAAkB,KANP;;AAQX;AACF;AACA;AACE,gBAAY;AAXD,GAhKgB;AA+K5B,UAAQ,IA/KoB;;AAkL5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,iBAAe,EA9La;;AAgM5B;AACD;AACA;AACA;AACC,YAAU,EApMkB;;AAsM5B;AACD;AACA;AACC,eAAa,EAzMe;;AA2M5B;AACD;AACA;AACC,qBAAmB,EA9MS;;AAgN5B;AACD;AACA;AACC,UAAQ,EAnNoB;;AAqN5B;AACD;AACA;AACC,eAAa,EAxNe;;AA0N5B;AACD;AACA;AACC,cAAY,EA7NgB;;AA+N5B;AACD;AACA;AACC,cAAY,EAlOgB;;AAoO5B;AACD;AACA;AACA;AACA;AACA;AACC,qBAAmB,EA1OS;;AA4O5B;AACD;AACA;AACCoT,EAAAA,WAAW,EAAE,EA/Oe;;AAiP5B;AACD;AACA;AACA;AACA;AACC,qBAAmB,EAtPS;;AAwP5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,eAAa,IAlQe;;AAoQ5B;AACD;AACA;AACA;AACA;AACA;AACC,oBAAkB,EA1QU;;AA4Q5B;AACD;AACA;AACC,mBAAiB,CA/QW;;AAiR5B;AACD;AACA;AACC,mBAAiB,EApRW;;AAsR5B;AACD;AACA;AACC,sBAAoB,EAzRQ;;AA2R5B;AACD;AACA;AACC,sBAAoB,EA9RQ;;AAgS5B;AACD;AACA;AACC,oBAAkB,EAnSU;;AAqS5B;AACD;AACA;AACC,0BAAwB,EAxSI;;AA0S5B;AACD;AACA;AACA;AACC,uBAAqB,EA9SO;;AAgT5B;AACD;AACA;AACC,oBAAkB,EAnTU;;AAsT5B;AACD;AACA;AACA;AACC,uBAAqB,EA1TO;;AA4T5B;AACD;AACA;AACA;AACC,uBAAqB,EAhUO;;AAkU5B;AACD;AACA;AACA;AACC,mBAAiB,EAtUW;;AAwU5B;AACD;AACA;AACC,cAAY,EA3UgB;;AA6U5B;AACD;AACA;AACC,YAAU,IAhVkB;;AAkV5B;AACD;AACA;AACC,YAAU,IArVkB;;AAuV5B;AACD;AACA;AACC,YAAU,IA1VkB;;AA4V5B;AACD;AACA;AACC,YAAU,IA/VkB;;AAiW5B;AACD;AACA;AACC,mBAAiB,IApWW;;AAsW5B;AACD;AACA;AACC,kBAAgB,KAzWY;;AA2W5B;AACD;AACA;AACA;AACC,gBAAc,EA/Wc;;AAiX5B;AACD;AACA;AACA;AACA;AACA;AACC,UAAQ,IAvXoB;;AAyX5B;AACD;AACA;AACC,iBAAe,IA5Xa;;AA8X5B;AACD;AACA;AACA;AACA;AACC,qBAAmB,YAnYS;;AAqY5B;AACD;AACA;AACCwpB,EAAAA,cAAc,EAAE,CAxYY;;AA0Y5B;AACD;AACA;AACA;AACA;AACC,oBAAkB,CA/YU;;AAiZ5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,iBAAe,EA5Za;;AA8Z5B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,iBAAe,EAvaa;;AAya5B;AACD;AACA;AACC,iBAAe,IA5aa;;AA8a5B;AACD;AACA;AACC,kBAAgB,IAjbY;;AAmb5B;AACD;AACA;AACC,kBAAgB,IAtbY;;AAwb5B;AACD;AACA;AACA;AACA;AACC,WAAS,IA7bmB;;AA+b5B;AACD;AACA;AACC,UAAQv/B,SAlcoB;;AAoc5B;AACD;AACA;AACC,eAAaA,SAvce;;AAyc5B;AACD;AACA;AACA;AACA;AACA;AACC,mBAAiB,IA/cW;;AAid5B;AACD;AACA;AACA;AACA;AACC,oBAAkB,IAtdU;;AAwd5B;AACD;AACA;AACA;AACA;AACC,iBAAe,IA7da;;AA+d5B;AACD;AACA;AACA;AACC,WAAS,CAnemB;;AAqe5B;AACD;AACA;AACC,cAAY,KAxegB;;AA0e5B;AACD;AACA;AACC,gBAAc,CAAC,CA7ea;;AA+e5B;AACD;AACA;AACC,qBAAmB,EAlfS;;AAof5B;AACD;AACA;AACC,oBAAkB,CAvfU;;AAyf5B;AACD;AACA;AACA;AACA;AACA;AACC,oBAAkB,CA/fU;;AAigB5B;AACD;AACA;AACA;AACA;AACA;AACC,sBAAoB,CAvgBQ;;AAygB5B;AACD;AACA;AACC,cAAY,EA5gBgB;;AA8gB5B;AACD;AACA;AACA;AACA;AACA;AACC,eAAa,KAphBe;;AAshB5B;AACD;AACA;AACA;AACA;AACA;AACC,aAAW,KA5hBiB;;AA8hB5B;AACD;AACA;AACA;AACA;AACA;AACA;AACC,mBAAiB,IAriBW;;AAuiB5B;AACD;AACA;AACC,WAAS,IA1iBmB;;AA4iB5B;AACD;AACA;AACA;AACC,uBAAqB,EAhjBO;;AAmjB5B;AACD;AACA;AACC,oBAAkB,YAClB;AACC,WAAOiI,aAAa,CAAE,IAAF,CAAb,IAAyB,KAAzB,GACN,KAAK4f,cAAL,GAAsB,CADhB,GAEN,KAAK5e,eAAL,CAAqB/I,MAFtB;AAGA,GA3jB2B;;AA6jB5B;AACD;AACA;AACC,sBAAoB,YACpB;AACC,WAAO+H,aAAa,CAAE,IAAF,CAAb,IAAyB,KAAzB,GACN,KAAK6f,gBAAL,GAAwB,CADlB,GAEN,KAAK9e,SAAL,CAAe9I,MAFhB;AAGA,GArkB2B;;AAukB5B;AACD;AACA;AACC,kBAAgB,YAChB;AACC,QACCD,GAAG,GAAQ,KAAKwnB,eADjB;AAAA,QAEC7Y,KAAK,GAAM,KAAKrJ,cAFjB;AAAA,QAGCi2B,IAAI,GAAO5sB,KAAK,GAAG3O,GAHpB;AAAA,QAICsqB,OAAO,GAAI,KAAKvhB,SAAL,CAAe9I,MAJ3B;AAAA,QAKCwH,QAAQ,GAAG,KAAK5D,SALjB;AAAA,QAMCk7B,QAAQ,GAAGt3B,QAAQ,CAACtC,SANrB;;AAQA,QAAKsC,QAAQ,CAACiZ,WAAd,EAA4B;AAC3B,aAAOqe,QAAQ,KAAK,KAAb,IAAsB/+B,GAAG,KAAK,CAAC,CAA/B,GACN2O,KAAK,GAAG2b,OADF,GAENlV,IAAI,CAACmqB,GAAL,CAAU5wB,KAAK,GAAC3O,GAAhB,EAAqB,KAAK6nB,gBAA1B,CAFD;AAGA,KAJD,MAKK;AACJ,aAAO,CAAEkX,QAAF,IAAcxD,IAAI,GAACjR,OAAnB,IAA8BtqB,GAAG,KAAG,CAAC,CAArC,GACNsqB,OADM,GAENiR,IAFD;AAGA;AACD,GA9lB2B;;AAgmB5B;AACD;AACA;AACC,eAAa,IAnmBe;;AAqmB5B;AACD;AACA;AACA;AACA;AACC,eAAa,IA1mBe;;AA4mB5B;AACD;AACA;AACA;AACC,eAAa,CAhnBe;;AAknB5B;AACD;AACA;AACC,iBAAe,IArnBa;;AAunB5B;AACD;AACA;AACC,iBAAe,IA1nBa;;AA4nB5B;AACD;AACA;AACC,eAAa,EA/nBe;;AAioB5B;AACD;AACA;AACC,cAAY,EApoBgB;;AAsoB5B;AACD;AACA;AACC,aAAW,IAzoBiB;;AA2oB5B;AACD;AACA;AACC,WAAS,IA9oBmB;AAgpB5BrzB,EAAAA,OAAO,EAAE,EAhpBmB;AAkpB5BK,EAAAA,WAAW,EAAE,IAlpBe;AAopB5BzF,EAAAA,QAAQ,EAAE;AAppBkB,CAA7B;AAupBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACArD,SAAS,CAAC+C,GAAV,GAAgB8G,IAAI,GAAG;AACtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,OAAO,EAAE,EATa;;AAYtB;AACD;AACA;AACA;AACA;AACA;AACCvE,EAAAA,OAAO,EAAE,EAlBa;;AAqBtB;AACD;AACA;AACA;AACA;AACCwE,EAAAA,OAAO,EAAE,UA1Ba;;AA6BtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,OAAO,EAAE,OAtCa;;AAyCtB;AACD;AACA;AACCC,EAAAA,OAAO,EAAE,EA5Ca;;AA8CtB;AACD;AACA;AACA;AACA;AACA;AACCjC,EAAAA,QAAQ,EAAE,EApDY;;AAuDtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCkC,EAAAA,MAAM,EAAE,EAjHc;;AAoHtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCjK,EAAAA,QAAQ,EAAE;AACTuH,IAAAA,IAAI,EAAE,EADG;AAET5F,IAAAA,MAAM,EAAE,EAFC;AAGT4B,IAAAA,GAAG,EAAE;AAHI,GA5IY;;AAmJtB;AACD;AACA;AACA;AACA;AACA;AACC2G,EAAAA,MAAM,EAAE;AACP;AACF;AACA;AACA;AACA;AACA;AACA;AACEpE,IAAAA,IAAI,EAAE;AARC,GAzJc;;AAqKtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCqE,EAAAA,KAAK,EAAE,EAlNe;AAqNtBC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,UAAU,EAAE,EADH;AAETC,IAAAA,MAAM,EAAE;AAFC,GArNY;;AA2NtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,KAAK,EAAE,EAnQe;;AAsQtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC/G,EAAAA,IAAI,EAAE;AACL;AACF;AACA;AACEgH,IAAAA,SAAS,EAAE,EAJN;;AAML;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,MAAM,EAAE,EA9CH;;AAgDL;AACF;AACA;AACEC,IAAAA,MAAM,EAAE,EAnDH;;AAsDL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACET,IAAAA,MAAM,EAAE,EA1FH;;AA6FL;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEM,IAAAA,KAAK,EAAE;AA7JF,GAhRgB;;AAgbtB;AACD;AACA;AACA;AACA;AACA;AACCxH,EAAAA,OAAO,EAAE,CAtba;AAybtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACD;AACA;AACA;AACA;AACC4H,EAAAA,cAAc,EAAE5K,SAAS,CAAC4K,cArcJ;;AAwctB;AACD;AACA;AACA;AACA;AACCC,EAAAA,SAAS,EAAE,CA7cW;;AAgdtB;AACD;AACA;AACA;AACA;AACCC,EAAAA,QAAQ,EAAE9K,S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","sourcesContent":["/*! DataTables 2.0.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// Check if called with a window or jQuery object for DOM less applications\n\t// This is for backwards compatibility\n\tif (DataTable.factory(selector, options)) {\n\t\treturn DataTable;\n\t}\n\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\t// Method to get DT API instance from jQuery object\n\tthis.api = function ()\n\t{\n\t\treturn new _Api( this );\n\t};\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t\n\t\tvar i=0, iLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar bInitHandedOff = false;\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t$(this).trigger( 'options.dt', oInit );\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\tnew DataTable.Api(s).destroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId,\n\t\t\tcolgroup: $('<colgroup>').prependTo(this),\n\t\t\tfastData: function (row, column, type) {\n\t\t\t\treturn _fnGetCellData(oSettings, row, column, type);\n\t\t\t}\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Make a single API instance available for internal handling\n\t\toSettings.api = new _Api( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])\n\t\t\t\t? oInit.aLengthMenu[0][0]\n\t\t\t\t: $.isPlainObject( oInit.aLengthMenu[0] )\n\t\t\t\t\t? oInit.aLengthMenu[0].value\n\t\t\t\t\t: oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"ajax\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"sDom\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t\"caption\",\n\t\t\t\"layout\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.table );\n\t\t\n\t\tif (! oSettings.oFeatures.bPaginate) {\n\t\t\toInit.iDisplayStart = 0;\n\t\t}\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\t/* Language definitions */\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl )\n\t\t{\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t */\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file\n\t\t\t\t\t_fnLog( oSettings, 0, 'i18n file loading error', 21 );\n\t\t\n\t\t\t\t\t// continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tbInitHandedOff = true;\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar columnsInit = [];\n\t\tvar thead = this.getElementsByTagName('thead');\n\t\tvar initHeaderLayout = _fnDetectHeader( oSettings, thead[0] );\n\t\t\n\t\t// If we don't have a columns array, then generate one with nulls\n\t\tif ( oInit.aoColumns ) {\n\t\t\tcolumnsInit = oInit.aoColumns;\n\t\t}\n\t\telse if ( initHeaderLayout.length ) {\n\t\t\tfor ( i=0, iLen=initHeaderLayout[0].length ; i<iLen ; i++ ) {\n\t\t\t\tcolumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Add the columns\n\t\tfor ( i=0, iLen=columnsInit.length ; i<iLen ; i++ ) {\n\t\t\t_fnAddColumn( oSettings );\n\t\t}\n\t\t\n\t\t// Apply the column definitions\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tvar loadedInit = function () {\n\t\t\t/*\n\t\t\t * Sorting\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t */\n\t\t\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t */\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\n\t\t\n\t\t\t/*\n\t\t\t * Final init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\tvar caption = $this.children('caption');\n\t\t\n\t\t\tif ( oSettings.caption ) {\n\t\t\t\tif ( caption.length === 0 ) {\n\t\t\t\t\tcaption = $('<caption/>').appendTo( $this );\n\t\t\t\t}\n\t\t\n\t\t\t\tcaption.html( oSettings.caption );\n\t\t\t}\n\t\t\n\t\t\t// Store the caption side, so we can remove the element from the document\n\t\t\t// when creating the element\n\t\t\tif (caption.length) {\n\t\t\t\tcaption[0]._captionSide = caption.css('caption-side');\n\t\t\t\toSettings.captionNode = caption[0];\n\t\t\t}\n\t\t\n\t\t\tif ( thead.length === 0 ) {\n\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\t$('tr', thead).addClass(oClasses.thead.row);\n\t\t\n\t\t\tvar tbody = $this.children('tbody');\n\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\tif ( tfoot.length === 0 ) {\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t$('tr', tfoot).addClass(oClasses.tfoot.row);\n\t\t\n\t\t\t// Check if there is data passing into the constructor\n\t\t\tif ( oInit.aaData ) {\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t// Grab the data from the page\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t}\n\t\t\n\t\t\t/* Copy the data index array */\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\toSettings.bInitialised = true;\n\t\t\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t * language processor)\n\t\t\t */\n\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState );\n\t\t\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t}\n\t\telse {\n\t\t\tloadedInit();\n\t\t}\n\t\t\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Legacy so v1 plug-ins don't throw js errors on load\n\t */\n\tfeature: [],\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an object of callbacks which provide the features for DataTables\n\t * to be initialised via the `layout` option.\n\t */\n\tfeatures: {},\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Automatic column class assignment\n\t\t */\n\t\tclassName: {},\n\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\t\t/**\n\t\t * Automatic renderer assignment\n\t\t */\n\t\trender: {},\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\tcontainer: 'dt-container',\n\tempty: {\n\t\trow: 'dt-empty'\n\t},\n\tinfo: {\n\t\tcontainer: 'dt-info'\n\t},\n\tlength: {\n\t\tcontainer: 'dt-length',\n\t\tselect: 'dt-input'\n\t},\n\torder: {\n\t\tcanAsc: 'dt-orderable-asc',\n\t\tcanDesc: 'dt-orderable-desc',\n\t\tisAsc: 'dt-ordering-asc',\n\t\tisDesc: 'dt-ordering-desc',\n\t\tnone: 'dt-orderable-none',\n\t\tposition: 'sorting_'\n\t},\n\tprocessing: {\n\t\tcontainer: 'dt-processing'\n\t},\n\tscrolling: {\n\t\tbody: 'dt-scroll-body',\n\t\tcontainer: 'dt-scroll',\n\t\tfooter: {\n\t\t\tself: 'dt-scroll-foot',\n\t\t\tinner: 'dt-scroll-footInner'\n\t\t},\n\t\theader: {\n\t\t\tself: 'dt-scroll-head',\n\t\t\tinner: 'dt-scroll-headInner'\n\t\t}\n\t},\n\tsearch: {\n\t\tcontainer: 'dt-search',\n\t\tinput: 'dt-input'\n\t},\n\ttable: 'dataTable',\t\n\ttbody: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tthead: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\ttfoot: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tpaging: {\n\t\tactive: 'current',\n\t\tbutton: 'dt-paging-button',\n\t\tcontainer: 'dt-paging',\n\t\tdisabled: 'disabled'\n\t}\n} );\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g;\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted ) {\n\tvar type = typeof d;\n\tvar strType = type === 'string';\n\n\tif ( type === 'number' || type === 'bigint') {\n\t\treturn true;\n\t}\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n// Is a string a number surrounded by HTML?\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\t// input and select strings mean that this isn't just a number\n\tif (typeof d === 'string' && d.match(/<(input|select)/i)) {\n\t\treturn null;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n// Replaceable function in api.util\nvar _stripHtml = function ( d ) {\n\treturn d\n\t\t.replace( _re_html, '' ) // Complete tags\n\t\t.replace(/<script/i, ''); // Safety for incomplete script tag\n};\n\n// Replaceable function in api.util\nvar _escapeHtml = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\nvar _normalize = function (str, both) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\n\t// It is faster to just run `normalize` than it is to check if\n\t// we need to with a regex!\n\tvar res = str.normalize(\"NFD\");\n\n\t// Equally, here we check if a regex is needed or not\n\treturn res.length !== str.length\n\t\t? (both === true ? str + ' ' : '' ) + res.replace(/[\\u0300-\\u036f]/g, \"\")\n\t\t: res;\n}\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif (Array.from && Set) {\n\t\treturn Array.from(new Set(src));\n\t}\n\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.app/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n\n\treturn out;\n}\n\n// Similar to jQuery's addClass, but use classList.add\nfunction _addClass(el, name) {\n\tif (name) {\n\t\tname.split(' ').forEach(function (n) {\n\t\t\tif (n) {\n\t\t\t\t// `add` does deduplication, so no need to check `contains`\n\t\t\t\tel.classList.add(n);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Return a string with diacritic characters decomposed\n\t * @param {*} mixed Function or string to normalize\n\t * @param {*} both Return original string and the normalized string\n\t * @returns String or undefined\n\t */\n\tdiacritics: function (mixed, both) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type !== 'function') {\n\t\t\treturn _normalize(mixed, both);\n\t\t}\n\t\t_normalize = mixed;\n\t},\n\n\t/**\n\t * Debounce a function\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tdebounce: function ( fn, timeout ) {\n\t\tvar timer;\n\n\t\treturn function () {\n\t\t\tvar that = this;\n\t\t\tvar args = arguments;\n\n\t\t\tclearTimeout(timer);\n\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tfn.apply(that, args);\n\t\t\t}, timeout || 250 );\n\t\t};\n\t},\n\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t},\n\n\tstripHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_stripHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string') {\n\t\t\treturn _stripHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tescapeHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_escapeHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string' || Array.isArray(mixed)) {\n\t\t\treturn _escapeHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tunique: _unique\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enable search delay if server-side processing is enabled\n\tif (init.serverSide && ! init.searchDelay) {\n\t\tinit.searchDelay = 400;\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: -1 * window.pageXOffset, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol,\n\t\tsearchFixed: {},\n\t\tcolEl: $('<col>')\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\t\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\n\t// The `render` option can be given as an array to access the helper rendering methods.\n\t// The first element is the rendering method to use, the rest are the parameters to pass\n\tif ( oCol.mRender && Array.isArray( oCol.mRender ) ) {\n\t\tvar copy = oCol.mRender.slice();\n\t\tvar name = copy.shift();\n\n\t\toCol.mRender = DataTable.render[name].apply(window, copy);\n\t}\n\n\toCol._render = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn oCol._render && type ?\n\t\t\toCol._render( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t_fnCalculateColumnWidths( settings );\n\t_fnColumnSizes( settings );\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '') {\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\nfunction _fnColumnSizes ( settings )\n{\n\tvar cols = settings.aoColumns;\n\n\tfor (var i=0 ; i<cols.length ; i++) {\n\t\tvar width = _fnColumnsSumWidth(settings, [i], false, false);\n\n\t\tcols[i].colEl.css('width', width);\n\t}\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = aiVis.indexOf(iMatch);\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( settings )\n{\n\tvar layout = settings.aoHeader;\n\tvar columns = settings.aoColumns;\n\tvar vis = 0;\n\n\tif ( layout.length ) {\n\t\tfor ( var i=0, ien=layout[0].length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\toSettings.aoColumns.map( function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, detectedType, cache;\n\n\t// For each column, spin over the \n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\n\t\t\t\t\tif (! data[k]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-2 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( detectedType ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\n\t\t// Set class names for header / footer for auto type classes\n\t\tvar autoClass = _ext.type.className[col.sType];\n\n\t\tif (autoClass) {\n\t\t\t_columnAutoClass(settings.aoHeader, i, autoClass);\n\t\t\t_columnAutoClass(settings.aoFooter, i, autoClass);\n\t\t}\n\n\t\tvar renderer = _ext.type.render[col.sType];\n\n\t\t// This can only happen once! There is no way to remover\n\t\t// a renderer. After the first time the renderer has\n\t\t// already been set so createTr will run the renderer itself.\n\t\tif (renderer && ! col._render) {\n\t\t\tcol._render = DataTable.util.get(renderer);\n\n\t\t\t_columnAutoRender(settings, i);\n\t\t}\n\t}\n}\n\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\nfunction _columnAutoRender(settings, colIdx) {\n\tvar data = settings.aoData;\n\n\tfor (var i=0 ; i<data.length ; i++) {\n\t\tif (data[i].nTr) {\n\t\t\t// We have to update the display here since there is no\n\t\t\t// invalidation check for the data\n\t\t\tvar display = _fnGetCellData( settings, i, colIdx, 'display' );\n\n\t\t\tdata[i].displayData[colIdx] = display;\n\t\t\t_fnWriteCell(data[i].anCells[colIdx], display);\n\n\t\t\t// No need to update sort / filter data since it has\n\t\t\t// been invalidated and will be re-read with the\n\t\t\t// renderer now applied\n\t\t}\n\t}\n}\n\n/**\n * Apply a class name to a column's header cells\n */\nfunction _columnAutoClass(container, colIdx, className) {\n\tcontainer.forEach(function (row) {\n\t\tif (row[colIdx] && row[colIdx].unique) {\n\t\t\t_addClass(row[colIdx].cell, className);\n\t\t}\n\t});\n}\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, headerLayout, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tif (aoCols[i] && aoCols[i].name) {\n\t\t\t\tcolumns[i].sName = aoCols[i].name;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tvar target = aTargets[j];\n\n\t\t\t\tif ( typeof target === 'number' && target >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= target )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'number' && target < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'string' )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ ) {\n\t\t\t\t\t\tif (target === '_all') {\n\t\t\t\t\t\t\t// Apply to all columns\n\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.indexOf(':name') !== -1) {\n\t\t\t\t\t\t\t// Column selector\n\t\t\t\t\t\t\tif (columns[k].sName === target.replace(':name', '')) {\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Cell selector\n\t\t\t\t\t\t\theaderLayout.forEach(function (row) {\n\t\t\t\t\t\t\t\tif (row[k]) {\n\t\t\t\t\t\t\t\t\tvar cell = $(row[k].cell);\n\n\t\t\t\t\t\t\t\t\t// Legacy support. Note that it means that we don't support\n\t\t\t\t\t\t\t\t\t// an element name selector only, since they are treated as\n\t\t\t\t\t\t\t\t\t// class names for 1.x compat.\n\t\t\t\t\t\t\t\t\tif (target.match(/^[a-z][\\w-]*$/i)) {\n\t\t\t\t\t\t\t\t\t\ttarget = '.' + target;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (cell.is( target )) {\n\t\t\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\nfunction _fnColumnsSumWidth( settings, targets, original, incVisible ) {\n\tif ( ! Array.isArray( targets ) ) {\n\t\ttargets = _fnColumnsFromHeader( targets );\n\t}\n\n\tvar sum = 0;\n\tvar unit;\n\tvar columns = settings.aoColumns;\n\t\n\tfor ( var i=0, ien=targets.length ; i<ien ; i++ ) {\n\t\tvar column = columns[ targets[i] ];\n\t\tvar definedWidth = original ?\n\t\t\tcolumn.sWidthOrig :\n\t\t\tcolumn.sWidth;\n\n\t\tif ( ! incVisible && column.bVisible === false ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( definedWidth === null || definedWidth === undefined ) {\n\t\t\treturn null; // can't determine a defined width - browser defined\n\t\t}\n\t\telse if ( typeof definedWidth === 'number' ) {\n\t\t\tunit = 'px';\n\t\t\tsum += definedWidth;\n\t\t}\n\t\telse {\n\t\t\tvar matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n\n\t\t\tif ( matched ) {\n\t\t\t\tsum += matched[1] * 1;\n\t\t\t\tunit = matched.length === 3 ?\n\t\t\t\t\tmatched[2] :\n\t\t\t\t\t'px';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn sum + unit;\n}\n\nfunction _fnColumnsFromHeader( cell )\n{\n\tvar attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n\n\tif ( ! attr ) {\n\t\treturn [];\n\t}\n\n\treturn attr.split(',').map( function (val) {\n\t\treturn val * 1;\n\t} );\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( settings, dataIn, tr, tds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar rowIdx = settings.aoData.length;\n\tvar rowModel = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: tr ? 'dom' : 'data',\n\t\tidx: rowIdx\n\t} );\n\n\trowModel._aData = dataIn;\n\tsettings.aoData.push( rowModel );\n\n\tvar columns = settings.aoColumns;\n\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\tsettings.aiDisplayMaster.push( rowIdx );\n\n\tvar id = settings.rowIdFn( dataIn );\n\tif ( id !== undefined ) {\n\t\tsettings.aIds[ id ] = rowModel;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( tr || ! settings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( settings, rowIdx, tr, tds );\n\t}\n\n\treturn rowIdx;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = settings.aoData[rowIdx]._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\t// Allow for a node being returned for non-display types\n\tif (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n\t\tcellData = cellData.innerHTML;\n\t}\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\nfunction _fnWriteCell(td, val)\n{\n\tif (val && typeof val === 'object' && val.nodeName) {\n\t\t$(td)\n\t\t\t.empty()\n\t\t\t.append(val);\n\t}\n\telse {\n\t\ttd.innerHTML = val;\n\t}\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\tvar parts = str.match(/(\\\\.|[^.])+/g) || [''];\n\n\treturn parts.map( function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\n\t// Remove the cached data for the row\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\trow.displayData = null;\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\t\tvar display = _fnGetRowDisplay(settings, rowIdx);\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t_fnWriteCell(cells[colIdx], display[colIdx]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnWriteCell(cells[i], display[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column specific invalidation\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\t// Type - the data might have changed\n\t\tcols[ colIdx ].sType = null;\n\n\t\t// Max length string. Its a fairly cheep recalculation, so not worth\n\t\t// something more complicated\n\t\tcols[ colIdx ].maxLenString = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t\tcols[i].maxLenString = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\nfunction _fnGetRowDisplay (settings, rowIdx) {\n\tlet rowModal = settings.aoData[rowIdx];\n\tlet columns = settings.aoColumns;\n\n\tif (! rowModal.displayData) {\n\t\t// Need to render and cache\n\t\trowModal.displayData = [];\n\t\n\t\tfor ( var colIdx=0, len=columns.length ; colIdx<len ; colIdx++ ) {\n\t\t\trowModal.displayData.push(\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'display' )\n\t\t\t);\n\t\t}\n\t}\n\n\treturn rowModal.displayData;\n}\n\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create,\n\t\ttrClass = oSettings.oClasses.tbody.row;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t_addClass(nTr, trClass);\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn && anTds[i] ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\t\t\t\n\t\t\tvar display = _fnGetRowDisplay(oSettings, iRow);\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif (\n\t\t\t\tcreate ||\n\t\t\t\t(\n\t\t\t\t\t(oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t(!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t_fnWriteCell(nTd, display[i]);\n\t\t\t}\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && create )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && ! create )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells] );\n\t}\n\telse {\n\t\t_addClass(row.nTr, trClass);\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( settings, side )\n{\n\tvar classes = settings.oClasses;\n\tvar columns = settings.aoColumns;\n\tvar i, ien, row;\n\tvar target = side === 'header'\n\t\t? settings.nTHead\n\t\t: settings.nTFoot;\n\tvar titleProp = side === 'header' ? 'sTitle' : side;\n\n\t// Footer might be defined\n\tif (! target) {\n\t\treturn;\n\t}\n\n\t// If no cells yet and we have content for them, then create\n\tif (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n\t\trow = $('tr', target);\n\n\t\t// Add a row if needed\n\t\tif (! row.length) {\n\t\t\trow = $('<tr/>').appendTo(target)\n\t\t}\n\n\t\t// Add the number of cells needed to make up to the number of columns\n\t\tif (row.length === 1) {\n\t\t\tvar cells = $('td, th', row);\n\n\t\t\tfor ( i=cells.length, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\t$('<th/>')\n\t\t\t\t\t.html( columns[i][titleProp] || '' )\n\t\t\t\t\t.appendTo( row );\n\t\t\t}\n\t\t}\n\t}\n\n\tvar detected = _fnDetectHeader( settings, target, true );\n\n\tif (side === 'header') {\n\t\tsettings.aoHeader = detected;\n\t}\n\telse {\n\t\tsettings.aoFooter = detected;\n\t}\n\n\t// ARIA role for the rows\n\t$(target).children('tr').attr('role', 'row');\n\n\t// Every cell needs to be passed through the renderer\n\t$(target).children('tr').children('th, td')\n\t\t.each( function () {\n\t\t\t_fnRenderer( settings, side )(\n\t\t\t\tsettings, $(this), classes\n\t\t\t);\n\t\t} );\n}\n\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array\n */\nfunction _fnHeaderLayout( settings, source, incColumns )\n{\n\tvar row, column, cell;\n\tvar local = [];\n\tvar structure = [];\n\tvar columns = settings.aoColumns;\n\tvar columnCount = columns.length;\n\tvar rowspan, colspan;\n\n\tif ( ! source ) {\n\t\treturn;\n\t}\n\n\t// Default is to work on only visible columns\n\tif ( ! incColumns ) {\n\t\tincColumns = _range(columnCount)\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn columns[idx].bVisible;\n\t\t\t});\n\t}\n\n\t// Make a copy of the master layout array, but with only the columns we want\n\tfor ( row=0 ; row<source.length ; row++ ) {\n\t\t// Remove any columns we haven't selected\n\t\tlocal[row] = source[row].slice().filter(function (cell, i) {\n\t\t\treturn incColumns.includes(i);\n\t\t});\n\n\t\t// Prep the structure array - it needs an element for each row\n\t\tstructure.push( [] );\n\t}\n\n\tfor ( row=0 ; row<local.length ; row++ ) {\n\t\tfor ( column=0 ; column<local[row].length ; column++ ) {\n\t\t\trowspan = 1;\n\t\t\tcolspan = 1;\n\n\t\t\t// Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t// insert point. If there is, then there is nothing to do.\n\t\t\tif ( structure[row][column] === undefined ) {\n\t\t\t\tcell = local[row][column].cell;\n\n\t\t\t\t// Expand for rowspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row+rowspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row+rowspan][column].cell\n\t\t\t\t) {\n\t\t\t\t\tstructure[row+rowspan][column] = null;\n\t\t\t\t\trowspan++;\n\t\t\t\t}\n\n\t\t\t\t// And for colspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row][column+colspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row][column+colspan].cell\n\t\t\t\t) {\n\t\t\t\t\t// Which also needs to go over rows\n\t\t\t\t\tfor ( var k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tstructure[row+k][column+colspan] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolspan++;\n\t\t\t\t}\n\n\t\t\t\tvar titleSpan = $('span.dt-column-title', cell);\n\n\t\t\t\tstructure[row][column] = {\n\t\t\t\t\tcell: cell,\n\t\t\t\t\tcolspan: colspan,\n\t\t\t\t\trowspan: rowspan,\n\t\t\t\t\ttitle: titleSpan.length\n\t\t\t\t\t\t? titleSpan.html()\n\t\t\t\t\t\t: $(cell).html()\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn structure;\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( settings, source )\n{\n\tvar layout = _fnHeaderLayout(settings, source);\n\tvar tr, n;\n\n\tfor ( var row=0 ; row<source.length ; row++ ) {\n\t\ttr = source[row].row;\n\n\t\t// All cells are going to be replaced, so empty out the row\n\t\t// Can't use $().empty() as that kills event handlers\n\t\tif (tr) {\n\t\t\twhile( (n = tr.firstChild) ) {\n\t\t\t\ttr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( var column=0 ; column<layout[row].length ; column++ ) {\n\t\t\tvar point = layout[row][column];\n\n\t\t\tif (point) {\n\t\t\t\t$(point.cell)\n\t\t\t\t\t.appendTo(tr)\n\t\t\t\t\t.attr('rowspan', point.rowspan)\n\t\t\t\t\t.attr('colspan', point.colspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( aPreDraw.indexOf(false) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\tvar columns = oSettings.aoColumns;\n\tvar body = $(oSettings.nTBody);\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t// Show loading message for server-side processing\n\t\tif (oSettings.iDraw === 0) {\n\t\t\tbody.empty().append(_emptyRow(oSettings));\n\t\t}\n\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t// Add various classes as needed\n\t\t\tfor (var i=0 ; i<columns.length ; i++) {\n\t\t\t\tvar col = columns[i];\n\t\t\t\tvar td = aoData.anCells[i];\n\n\t\t\t\t_addClass(td, _ext.type.className[col.sType]); // auto class\n\t\t\t\t_addClass(td, col.sClass); // column class\n\t\t\t\t_addClass(td, oSettings.oClasses.tbody.cell); // all cells\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\tanRows[ 0 ] = _emptyRow(oSettings);\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\tbody.children().detach();\n\tbody.append( $(anRows) );\n\n\t// Empty table needs a specific class\n\t$(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings], true );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition, recompute )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif (recompute === undefined || recompute === true) {\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings._drawHold = false;\n}\n\n\n/*\n * Table is empty - create a row with an empty message in it\n */\nfunction _emptyRow ( settings ) {\n\tvar oLang = settings.oLanguage;\n\tvar zero = oLang.sZeroRecords;\n\tvar dataSrc = _fnDataSource( settings );\n\n\tif (\n\t\t(settings.iDraw < 1 && dataSrc === 'ssp') ||\n\t\t(settings.iDraw <= 1 && dataSrc === 'ajax')\n\t) {\n\t\tzero = oLang.sLoadingRecords;\n\t}\n\telse if ( oLang.sEmptyTable && settings.fnRecordsTotal() === 0 )\n\t{\n\t\tzero = oLang.sEmptyTable;\n\t}\n\n\treturn $( '<tr/>' )\n\t\t.append( $('<td />', {\n\t\t\t'colSpan': _fnVisbleColumns( settings ),\n\t\t\t'class':   settings.oClasses.empty.row\n\t\t} ).html( zero ) )[0];\n}\n\n\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\nfunction _layoutArray ( settings, layout, side )\n{\n\tvar groups = {};\n\n\t// Combine into like groups (e.g. `top`, `top2`, etc)\n\t$.each( layout, function ( pos, val ) {\n\t\tif (val === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar splitPos = pos.replace(/([A-Z])/g, ' $1').split(' ');\n\n\t\tif ( ! groups[ splitPos[0] ] ) {\n\t\t\tgroups[ splitPos[0] ] = {};\n\t\t}\n\n\t\tvar align = splitPos.length === 1 ?\n\t\t\t'full' :\n\t\t\tsplitPos[1].toLowerCase();\n\t\tvar group = groups[ splitPos[0] ];\n\t\tvar groupRun = function (contents, innerVal) {\n\t\t\t// If it is an object, then there can be multiple features contained in it\n\t\t\tif ( $.isPlainObject( innerVal ) ) {\n\t\t\t\tObject.keys(innerVal).map(function (key) {\n\t\t\t\t\tcontents.push( {\n\t\t\t\t\t\tfeature: key,\n\t\t\t\t\t\topts: innerVal[key]\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcontents.push(innerVal);\n\t\t\t}\n\t\t}\n\n\t\t// Transform to an object with a contents property\n\t\tif (! group[align] || ! group[align].contents) {\n\t\t\tgroup[align] = { contents: [] };\n\t\t}\n\n\t\t// Allow for an array or just a single object\n\t\tif ( Array.isArray(val)) {\n\t\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t\tgroupRun(group[align].contents, val[i]);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tgroupRun(group[ align ].contents, val);\n\t\t}\n\n\t\t// And make contents an array\n\t\tif ( ! Array.isArray( group[ align ].contents ) ) {\n\t\t\tgroup[ align ].contents = [ group[ align ].contents ];\n\t\t}\n\t} );\n\n\tvar filtered = Object.keys(groups)\n\t\t.map( function ( pos ) {\n\t\t\t// Filter to only the side we need\n\t\t\tif ( pos.indexOf(side) !== 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tname: pos,\n\t\t\t\tval: groups[pos]\n\t\t\t};\n\t\t} )\n\t\t.filter( function (item) {\n\t\t\treturn item !== null;\n\t\t});\n\n\t// Order by item identifier\n\tfiltered.sort( function ( a, b ) {\n\t\tvar order1 = a.name.replace(/[^0-9]/g, '') * 1;\n\t\tvar order2 = b.name.replace(/[^0-9]/g, '') * 1;\n\n\t\treturn order2 - order1;\n\t} );\n\t\n\tif ( side === 'bottom' ) {\n\t\tfiltered.reverse();\n\t}\n\n\t// Split into rows\n\tvar rows = [];\n\tfor ( var i=0, ien=filtered.length ; i<ien ; i++ ) {\n\t\tif (  filtered[i].val.full ) {\n\t\t\trows.push( { full: filtered[i].val.full } );\n\t\t\t_layoutResolve( settings, rows[ rows.length - 1 ] );\n\n\t\t\tdelete filtered[i].val.full;\n\t\t}\n\n\t\tif ( Object.keys(filtered[i].val).length ) {\n\t\t\trows.push( filtered[i].val );\n\t\t\t_layoutResolve( settings, rows[ rows.length - 1 ] );\n\t\t}\n\t}\n\n\treturn rows;\n}\n\n\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\nfunction _layoutResolve( settings, row ) {\n\tvar getFeature = function (feature, opts) {\n\t\tif ( ! _ext.features[ feature ] ) {\n\t\t\t_fnLog( settings, 0, 'Unknown feature: '+ feature );\n\t\t}\n\n\t\treturn _ext.features[ feature ].apply( this, [settings, opts] );\n\t};\n\n\tvar resolve = function ( item ) {\n\t\tvar line = row[ item ].contents;\n\n\t\tfor ( var i=0, ien=line.length ; i<ien ; i++ ) {\n\t\t\tif ( ! line[i] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'string' ) {\n\t\t\t\tline[i] = getFeature( line[i], null );\n\t\t\t}\n\t\t\telse if ( $.isPlainObject(line[i]) ) {\n\t\t\t\t// If it's an object, it just has feature and opts properties from\n\t\t\t\t// the transform in _layoutArray\n\t\t\t\tline[i] = getFeature(line[i].feature, line[i].opts);\n\t\t\t}\n\t\t\telse if ( typeof line[i].node === 'function' ) {\n\t\t\t\tline[i] = line[i].node( settings );\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'function' ) {\n\t\t\t\tvar inst = line[i]( settings );\n\n\t\t\t\tline[i] = typeof inst.node === 'function' ?\n\t\t\t\t\tinst.node() :\n\t\t\t\t\tinst;\n\t\t\t}\n\t\t}\n\t};\n\n\t$.each( row, function ( key ) {\n\t\tresolve( key );\n\t} );\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar table = $(settings.nTable);\n\n\t// Wrapper div around everything DataTables controls\n\tvar insert = $('<div/>')\n\t\t.attr({\n\t\t\tid:      settings.sTableId+'_wrapper',\n\t\t\t'class': classes.container\n\t\t})\n\t\t.insertBefore(table);\n\n\tsettings.nTableWrapper = insert[0];\n\n\tvar top = _layoutArray( settings, settings.layout, 'top' );\n\tvar bottom = _layoutArray( settings, settings.layout, 'bottom' );\n\tvar renderer = _fnRenderer( settings, 'layout' );\n\n\tif (settings.sDom) {\n\t\t// Legacy\n\t\t_fnLayoutDom(settings, settings.sDom, insert);\n\t}\n\telse {\n\t\t// Everything above - the renderer will actually insert the contents into the document\n\t\ttop.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\n\t\t// The table - always the center of attention\n\t\trenderer( settings, insert, {\n\t\t\tfull: {\n\t\t\t\ttable: true,\n\t\t\t\tcontents: [ _fnFeatureHtmlTable(settings) ]\n\t\t\t}\n\t\t} );\n\n\t\t// Everything below\n\t\tbottom.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\t}\n\n\t// Processing floats on top, so it isn't an inserted feature\n\t_processingHtml( settings );\n}\n\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\nfunction _fnLayoutDom( settings, dom, insert )\n{\n\tvar parts = dom.match(/(\".*?\")|('.*?')|./g);\n\tvar featureNode, option, newNode, next, attr;\n\n\tfor ( var i=0 ; i<parts.length ; i++ ) {\n\t\tfeatureNode = null;\n\t\toption = parts[i];\n\n\t\tif ( option == '<' ) {\n\t\t\t// New container div\n\t\t\tnewNode = $('<div/>');\n\n\t\t\t// Check to see if we should append an id and/or a class name to the container\n\t\t\tnext = parts[i+1];\n\n\t\t\tif ( next[0] == \"'\" || next[0] == '\"' ) {\n\t\t\t\tattr = next.replace(/['\"]/g, '');\n\n\t\t\t\tvar id = '', className;\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( attr.indexOf('.') != -1 ) {\n\t\t\t\t\tvar split = attr.split('.');\n\n\t\t\t\t\tid = split[0];\n\t\t\t\t\tclassName = split[1];\n\t\t\t\t}\n\t\t\t\telse if ( attr[0] == \"#\" ) {\n\t\t\t\t\tid = attr;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tclassName = attr;\n\t\t\t\t}\n\n\t\t\t\tnewNode\n\t\t\t\t\t.attr('id', id.substring(1))\n\t\t\t\t\t.addClass(className);\n\n\t\t\t\ti++; // Move along the position array\n\t\t\t}\n\n\t\t\tinsert.append( newNode );\n\t\t\tinsert = newNode;\n\t\t}\n\t\telse if ( option == '>' ) {\n\t\t\t// End container div\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\telse if ( option == 't' ) {\n\t\t\t// Table\n\t\t\tfeatureNode = _fnFeatureHtmlTable( settings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDataTable.ext.feature.forEach(function(feature) {\n\t\t\t\tif ( option == feature.cFeature ) {\n\t\t\t\t\tfeatureNode = feature.fnInit( settings );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Add to the display\n\t\tif ( featureNode ) {\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( settings, thead, write )\n{\n\tvar columns = settings.aoColumns;\n\tvar rows = $(thead).children('tr');\n\tvar row, cell;\n\tvar i, k, l, iLen, shifted, column, colspan, rowspan;\n\tvar isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n\tvar layout = [];\n\tvar unique;\n\tvar shift = function ( a, i, j ) {\n\t\tvar k = a[i];\n\t\twhile ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\t// We know how many rows there are in the layout - so prep it\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\tlayout.push( [] );\n\t}\n\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\trow = rows[i];\n\t\tcolumn = 0;\n\n\t\t// For every cell in the row..\n\t\tcell = row.firstChild;\n\t\twhile ( cell ) {\n\t\t\tif (\n\t\t\t\tcell.nodeName.toUpperCase() == 'TD' ||\n\t\t\t\tcell.nodeName.toUpperCase() == 'TH'\n\t\t\t) {\n\t\t\t\tvar cols = [];\n\n\t\t\t\t// Get the col and rowspan attributes from the DOM and sanitise them\n\t\t\t\tcolspan = cell.getAttribute('colspan') * 1;\n\t\t\t\trowspan = cell.getAttribute('rowspan') * 1;\n\t\t\t\tcolspan = (!colspan || colspan===0 || colspan===1) ? 1 : colspan;\n\t\t\t\trowspan = (!rowspan || rowspan===0 || rowspan===1) ? 1 : rowspan;\n\n\t\t\t\t// There might be colspan cells already in this row, so shift our target\n\t\t\t\t// accordingly\n\t\t\t\tshifted = shift( layout, i, column );\n\n\t\t\t\t// Cache calculation for unique columns\n\t\t\t\tunique = colspan === 1 ?\n\t\t\t\t\ttrue :\n\t\t\t\t\tfalse;\n\t\t\t\t\n\t\t\t\t// Perform header setup\n\t\t\t\tif ( write ) {\n\t\t\t\t\tif (unique) {\n\t\t\t\t\t\t// Allow column options to be set from HTML attributes\n\t\t\t\t\t\t_fnColumnOptions( settings, shifted, $(cell).data() );\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Get the width for the column. This can be defined from the\n\t\t\t\t\t\t// width attribute, style attribute or `columns.width` option\n\t\t\t\t\t\tvar columnDef = columns[shifted];\n\t\t\t\t\t\tvar width = cell.getAttribute('width') || null;\n\t\t\t\t\t\tvar t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\t\t\t\tif ( t ) {\n\t\t\t\t\t\t\twidth = t[1];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcolumnDef.sWidthOrig = columnDef.sWidth || width;\n\n\t\t\t\t\t\tif (isHeader) {\n\t\t\t\t\t\t\t// Column title handling - can be user set, or read from the DOM\n\t\t\t\t\t\t\t// This happens before the render, so the original is still in place\n\t\t\t\t\t\t\tif ( columnDef.sTitle !== null && ! columnDef.autoTitle ) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.sTitle;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (! columnDef.sTitle && unique) {\n\t\t\t\t\t\t\t\tcolumnDef.sTitle = cell.innerHTML.replace( /<.*?>/g, \"\" );\n\t\t\t\t\t\t\t\tcolumnDef.autoTitle = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Footer specific operations\n\t\t\t\t\t\t\tif (columnDef.footer) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.footer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\n\t\t\t\t\t\t// provided.\n\t\t\t\t\t\tif (! columnDef.ariaTitle) {\n\t\t\t\t\t\t\tcolumnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Column specific class names\n\t\t\t\t\t\tif ( columnDef.className ) {\n\t\t\t\t\t\t\t$(cell).addClass( columnDef.className );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wrap the column title so we can write to it in future\n\t\t\t\t\tif ( $('span.dt-column-title', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-title')\n\t\t\t\t\t\t\t.append(cell.childNodes)\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isHeader && $('span.dt-column-order', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-order')\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If there is col / rowspan, copy the information into the layout grid\n\t\t\t\tfor ( l=0 ; l<colspan ; l++ ) {\n\t\t\t\t\tfor ( k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tlayout[i+k][shifted+l] = {\n\t\t\t\t\t\t\tcell: cell,\n\t\t\t\t\t\t\tunique: unique\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlayout[i+k].row = row;\n\t\t\t\t\t}\n\n\t\t\t\t\tcols.push( shifted+l );\n\t\t\t\t}\n\n\t\t\t\t// Assign an attribute so spanning cells can still be identified\n\t\t\t\t// as belonging to a column\n\t\t\t\tcell.setAttribute('data-dt-column', _unique(cols).join(','));\n\t\t\t}\n\n\t\t\tcell = cell.nextSibling;\n\t\t}\n\t}\n\n\treturn layout;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"url\": typeof ajax === 'string' ?\n\t\t\tajax :\n\t\t\t'',\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true );\n\n\t\t\tif ( ret.indexOf(true) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// If `ajax` option is an object, extend and override our default base\n\tif ( $.isPlainObject( ajax ) ) {\n\t\t$.extend( baseAjax, ajax )\n\t}\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data, baseAjax], true );\n\n\tif ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse if (ajax.url === '') {\n\t\t// No url, so don't load any data. Just apply an empty data array\n\t\t// to the object for the callback.\n\t\tvar empty = {};\n\n\t\tDataTable.util.set(ajax.dataSrc)(empty, []);\n\t\tcallback(empty);\n\t}\n\telse {\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( baseAjax );\n\n\t\t// Restore for next time around\n\t\tif ( ajaxData ) {\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\tcolData = function ( idx, prop ) {\n\t\t\treturn typeof columns[idx][prop] === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\tcolumns[idx][prop];\n\t\t};\n\n\treturn {\n\t\tdraw: settings.iDraw,\n\t\tcolumns: columns.map( function ( column, i ) {\n\t\t\treturn {\n\t\t\t\tdata: colData(i, 'mData'),\n\t\t\t\tname: column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable: column.bSortable,\n\t\t\t\tsearch: {\n\t\t\t\t\tvalue: preColSearch[i].search,\n\t\t\t\t\tregex: preColSearch[i].regex,\n\t\t\t\t\tfixed: Object.keys(column.searchFixed).map( function(name) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tterm: column.searchFixed[name].toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t};\n\t\t} ),\n\t\torder: _fnSortFlatten( settings ).map( function ( val ) {\n\t\t\treturn {\n\t\t\t\tcolumn: val.col,\n\t\t\t\tdir: val.dir,\n\t\t\t\tname: colData(val.col, 'sName')\n\t\t\t};\n\t\t} ),\n\t\tstart: settings._iDisplayStart,\n\t\tlength: features.bPaginate ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1,\n\t\tsearch: {\n\t\t\tvalue: preSearch.search,\n\t\t\tregex: preSearch.regex,\n\t\t\tfixed: Object.keys(settings.searchFixed).map( function(name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: name,\n\t\t\t\t\tterm: settings.searchFixed[name].toString()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t};\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\tvar data = _fnAjaxDataSrc(settings, json);\n\tvar draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n\tvar recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n\tvar recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnDraw( settings, true );\n\t_fnInitComplete( settings );\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\nfunction _fnAjaxDataSrc ( settings, json, write )\n{\n\tvar dataProp = 'data';\n\n\tif ($.isPlainObject( settings.ajax ) && settings.ajax.dataSrc !== undefined) {\n\t\t// Could in inside a `dataSrc` object, or not!\n\t\tvar dataSrc = settings.ajax.dataSrc;\n\n\t\t// string, function and object are valid types\n\t\tif (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n\t\t\tdataProp = dataSrc;\n\t\t}\n\t\telse if (dataSrc.data !== undefined) {\n\t\t\tdataProp = dataSrc.data;\n\t\t}\n\t}\n\n\tif ( ! write ) {\n\t\tif ( dataProp === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataProp];\n\t\t}\n\n\t\treturn dataProp !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataProp )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t// set\n\t_fnSetObjectDataFn( dataProp )( json, write );\n}\n\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\nfunction _fnAjaxDataSrcParam (settings, param, json) {\n\tvar dataSrc = $.isPlainObject( settings.ajax )\n\t\t? settings.ajax.dataSrc\n\t\t: null;\n\n\tif (dataSrc && dataSrc[param]) {\n\t\t// Get from custom location\n\t\treturn _fnGetObjectDataFn( dataSrc[param] )( json );\n\t}\n\n\t// else - Default behaviour\n\tvar old = '';\n\n\t// Legacy support\n\tif (param === 'draw') {\n\t\told = 'sEcho';\n\t}\n\telse if (param === 'recordsTotal') {\n\t\told = 'iTotalRecords';\n\t}\n\telse if (param === 'recordsFiltered') {\n\t\told = 'iTotalDisplayRecords';\n\t}\n\n\treturn json[old] !== undefined\n\t\t? json[old]\n\t\t: json[param];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( settings, input )\n{\n\tvar columnsSearch = settings.aoPreSearchCols;\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo As per sort - can this be moved into an event handler?\n\t_fnColumnTypes( settings );\n\n\t// In server-side processing all filtering is done by the server, so no point hanging around here\n\tif ( _fnDataSource( settings ) != 'ssp' )\n\t{\n\t\t// Check if any of the rows were invalidated\n\t\t_fnFilterData( settings );\n\n\t\t// Start from the full data set\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t// Global filter first\n\t\t_fnFilter( settings.aiDisplay, settings, input.search, input );\n\n\t\t$.each(settings.searchFixed, function (name, term) {\n\t\t\t_fnFilter(settings.aiDisplay, settings, term, {});\n\t\t});\n\n\t\t// Then individual column filters\n\t\tfor ( var i=0 ; i<columnsSearch.length ; i++ )\n\t\t{\n\t\t\tvar col = columnsSearch[i];\n\n\t\t\t_fnFilter(\n\t\t\t\tsettings.aiDisplay,\n\t\t\t\tsettings,\n\t\t\t\tcol.search,\n\t\t\t\tcol,\n\t\t\t\ti\n\t\t\t);\n\n\t\t\t$.each(settings.aoColumns[i].searchFixed, function (name, term) {\n\t\t\t\t_fnFilter(settings.aiDisplay, settings, term, {}, i);\n\t\t\t});\n\t\t}\n\n\t\t// And finally global filtering\n\t\t_fnFilterCustom( settings );\n\t}\n\n\t// Tell the draw function we have been filtering\n\tsettings.bFiltered = true;\n\n\t_fnCallbackFire( settings, null, 'search', [settings] );\n}\n\n\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\tdisplayRows.push.apply(displayRows, rows);\n\t}\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n */\nfunction _fnFilter( searchRows, settings, input, options, column )\n{\n\tif ( input === '' ) {\n\t\treturn;\n\t}\n\n\tvar i = 0;\n\n\t// Search term can be a function, regex or string - if a string we apply our\n\t// smart filtering regex (assuming the options require that)\n\tvar searchFunc = typeof input === 'function' ? input : null;\n\tvar rpSearch = input instanceof RegExp\n\t\t? input\n\t\t: searchFunc\n\t\t\t? null\n\t\t\t: _fnFilterCreateSearch( input, options );\n\n\t// Then for each row, does the test pass. If not, lop the row from the array\n\twhile (i < searchRows.length) {\n\t\tvar row = settings.aoData[ searchRows[i] ];\n\t\tvar data = column === undefined\n\t\t\t? row._sFilterRow\n\t\t\t: row._aFilterData[ column ];\n\n\t\tif ( (searchFunc && ! searchFunc(data, row._aData, searchRows[i], column)) || (rpSearch && ! rpSearch.test(data)) ) {\n\t\t\tsearchRows.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\n\t\ti++;\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, inOpts )\n{\n\tvar not = [];\n\tvar options = $.extend({}, {\n\t\tboundary: false,\n\t\tcaseInsensitive: true,\n\t\texact: false,\n\t\tregex: false,\n\t\tsmart: true\n\t}, inOpts);\n\n\tif (typeof search !== 'string') {\n\t\tsearch = search.toString();\n\t}\n\n\t// Remove diacritics if normalize is set up to do so\n\tsearch = _normalize(search);\n\n\tif (options.exact) {\n\t\treturn new RegExp(\n\t\t\t'^'+_fnEscapeRegex(search)+'$',\n\t\t\toptions.caseInsensitive ? 'i' : ''\n\t\t);\n\t}\n\n\tsearch = options.regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( options.smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. And a negative look around for\n\t\t * finding rows which don't contain a given string.\n\t\t * \n\t\t * So this is the sort of thing we want to generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar parts = search.match( /!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''];\n\t\tvar a = parts.map( function ( word ) {\n\t\t\tvar negative = false;\n\t\t\tvar m;\n\n\t\t\t// Determine if it is a \"does not include\"\n\t\t\tif ( word.charAt(0) === '!' ) {\n\t\t\t\tnegative = true;\n\t\t\t\tword = word.substring(1);\n\t\t\t}\n\n\t\t\t// Strip the quotes from around matched phrases\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tm = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\n\t\t\t\t// Smart quote match (iPhone users)\n\t\t\t\tm = word.match( /^\\u201C(.*)\\u201D$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\t// For our \"not\" case, we need to modify the string that is\n\t\t\t// allowed to match at the end of the expression.\n\t\t\tif (negative) {\n\t\t\t\tif (word.length > 1) {\n\t\t\t\t\tnot.push('(?!'+word+')');\n\t\t\t\t}\n\n\t\t\t\tword = '';\n\t\t\t}\n\n\t\t\treturn word.replace('\"', '');\n\t\t} );\n\n\t\tvar match = not.length\n\t\t\t? not.join('')\n\t\t\t: '';\n\n\t\tvar boundary = options.boundary\n\t\t\t? '\\\\b'\n\t\t\t: '';\n\n\t\tsearch = '^(?=.*?'+boundary+a.join( ')(?=.*?'+boundary )+')('+match+'.)*$';\n\t}\n\n\treturn new RegExp( search, options.caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar column;\n\tvar j, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, rowIdx, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables is string based\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i, iAjaxStart=settings.iInitDisplayStart;\n\n\t/* Ensure that the table data is fully initialised */\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t/* Build and draw the header / footer for the table */\n\t_fnBuildHead( settings, 'header' );\n\t_fnBuildHead( settings, 'footer' );\n\t_fnDrawHead( settings, settings.aoHeader );\n\t_fnDrawHead( settings, settings.aoFooter );\n\n\t// Enable features\n\t_fnAddOptionsHtml( settings );\n\t_fnSortInit( settings );\n\n\t_colGroup( settings );\n\n\t/* Okay to show that something is going on now */\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnCallbackFire( settings, null, 'preInit', [settings], true );\n\n\t// If there is default sorting required - let's do it. The sort function\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t// data (show 'loading' message possibly)\n\t_fnReDraw( settings );\n\n\tvar dataSrc = _fnDataSource( settings );\n\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\tif ( dataSrc != 'ssp' ) {\n\t\t// if there is an ajax source load the data\n\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t_fnBuildAjax( settings, {}, function(json) {\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t// Got the data - add it to the table\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t}\n\n\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t// it appear 'fresh'\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t_fnReDraw( settings );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}, settings );\n\t\t}\n\t\telse {\n\t\t\t_fnInitComplete( settings );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings )\n{\n\tif (settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar args = [settings, settings.json];\n\n\tsettings._bInitComplete = true;\n\n\t// Table is fully set up and we have data, so calculate the\n\t// column widths\n\t_fnAdjustColumnSizing( settings );\n\n\t_fnCallbackFire( settings, null, 'plugin-init', args, true );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', args, true );\n}\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse if ( action === 'ellipsis' )\n\t{\n\t\treturn;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\t_fnCallbackFire( settings, null, changed ? 'page' : 'page-nc', [settings] );\n\n\tif ( changed && redraw ) {\n\t\t_fnDraw( settings );\n\t}\n\n\treturn changed;\n}\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\nfunction _processingHtml ( settings )\n{\n\tvar table = settings.nTable;\n\n\tif ( settings.oFeatures.bProcessing ) {\n\t\tvar n = $('<div/>', {\n\t\t\t\t'id': settings.sTableId + '_processing',\n\t\t\t\t'class': settings.oClasses.processing.container,\n\t\t\t\t'role': 'status'\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t\t.insertBefore( table );\n\t\t\n\t\t$(table).on( 'processing.dt.DT', function (e, s, show) {\n\t\t\tn.css( 'display', show ? 'block' : 'none' );\n\t\t} );\n\t}\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses.scrolling;\n\tvar caption = settings.captionNode;\n\tvar captionSide = caption ? caption._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.container } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.header.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.header.inner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.body } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.footer.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.footer.inner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\t$(scrollBody).on( 'scroll.DT', function () {\n\t\tvar scrollLeft = this.scrollLeft;\n\n\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t}\n\t} );\n\n\t// When focus is put on the header cells, we might need to scroll the body\n\t$('th, td', scrollHead).on('focus', function () {\n\t\tvar scrollLeft = scrollHead.scrollLeft;\n\n\t\tscrollBody.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollBody.scrollLeft = scrollLeft;\n\t\t}\n\t});\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push(_fnScrollDraw);\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\tfooter         = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\theaderCopy, footerCopy;\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t// 1. Re-create the table inside the scrolling div\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// 2. Correct colgroup > col values if needed\n\t// It is possible that the cell sizes are smaller than the content, so we need to\n\t// correct colgroup>col for such cases. This can happen if the auto width detection\n\t// uses a cell which has a longer string, but isn't the widest! For example \n\t// \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n\t// \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n\tif (settings.aiDisplay.length) {\n\t\t// Get the column sizes from the first row in the table\n\t\tvar colSizes = table.find('tbody tr').eq(0).find('th, td').map(function () {\n\t\t\treturn $(this).outerWidth();\n\t\t});\n\n\t\t// Check against what the colgroup > col is set to and correct if needed\n\t\t$('col', settings.colgroup).each(function (i) {\n\t\t\tvar colWidth = this.style.width.replace('px', '');\n\n\t\t\tif (colWidth !== colSizes[i]) {\n\t\t\t\tthis.style.width = colSizes[i] + 'px';\n\t\t\t}\n\t\t});\n\t}\n\n\t// 3. Copy the colgroup over to the header and footer\n\tdivHeaderTable\n\t\t.find('colgroup')\n\t\t.remove();\n\n\tdivHeaderTable.append(settings.colgroup.clone());\n\n\tif ( footer ) {\n\t\tdivFooterTable\n\t\t\t.find('colgroup')\n\t\t\t.remove();\n\n\t\tdivFooterTable.append(settings.colgroup.clone());\n\t}\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely.\n\t$('th, td', headerCopy).each(function () {\n\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t});\n\n\tif ( footer ) {\n\t\t$('th, td', footerCopy).each(function () {\n\t\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t\t});\n\t}\n\n\t// 4. Clean up\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\n\t// Set the width's of the header and footer tables\n\tvar outerWidth = table.outerWidth();\n\n\tdivHeaderTable.css('width', _fnStringToCss( outerWidth ));\n\tdivHeaderInner\n\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\n\tif ( footer ) {\n\t\tdivFooterTable.css('width', _fnStringToCss( outerWidth ));\n\t\tdivFooterInner\n\t\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').prependTo(table);\n\n\t// Adjust the position of the header in case we loose the y-scrollbar\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( settings )\n{\n\t// Not interested in doing column width calculation if auto-width is disabled\n\tif (! settings.oFeatures.bAutoWidth) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ttable = settings.nTable,\n\t\tcolumns = settings.aoColumns,\n\t\tscroll = settings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tvisibleColumns = _fnGetColumns( settings, 'bVisible' ),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\ti, column, columnIdx;\n\n\tvar styleWidth = table.style.width;\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t// Let plug-ins know that we are doing a recalc, in case they have changed any of the\n\t// visible columns their own way (e.g. Responsive uses display:none).\n\t_fnCallbackFire(\n\t\tsettings,\n\t\tnull,\n\t\t'column-calc',\n\t\t{visible: visibleColumns},\n\t\tfalse\n\t);\n\n\t// Construct a single row, worst case, table with the widest\n\t// node in the data, assign any user defined widths, then insert it into\n\t// the DOM and allow the browser to do all the hard work of calculating\n\t// table widths\n\tvar tmpTable = $(table.cloneNode())\n\t\t.css( 'visibility', 'hidden' )\n\t\t.removeAttr( 'id' );\n\n\t// Clean up the table body\n\ttmpTable.append('<tbody>')\n\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t// Clone the table header and footer - we can't use the header / footer\n\t// from the cloned table, since if scrolling is active, the table's\n\t// real header and footer are contained in different table tags\n\ttmpTable\n\t\t.append( $(settings.nTHead).clone() )\n\t\t.append( $(settings.nTFoot).clone() );\n\n\t// Remove any assigned widths from the footer (from scrolling)\n\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t// Apply custom sizing to the cloned header\n\ttmpTable.find('thead th, thead td').each( function () {\n\t\t// Get the `width` from the header layout\n\t\tvar width = _fnColumnsSumWidth( settings, this, true, false );\n\n\t\tif ( width ) {\n\t\t\tthis.style.width = width;\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( scrollX ) {\n\t\t\t\t$( this ).append( $('<div/>').css( {\n\t\t\t\t\twidth: width,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.style.width = '';\n\t\t}\n\t} );\n\n\t// Find the widest piece of data for each column and put it into the table\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumnIdx = visibleColumns[i];\n\t\tcolumn = columns[ columnIdx ];\n\n\t\tvar longest = _fnGetMaxLenString(settings, columnIdx);\n\t\tvar autoClass = _ext.type.className[column.sType];\n\t\tvar text = longest + column.sContentPadding;\n\t\tvar insert = longest.indexOf('<') === -1\n\t\t\t? document.createTextNode(text)\n\t\t\t: text\n\t\t\n\t\t$('<td/>')\n\t\t\t.addClass(autoClass)\n\t\t\t.addClass(column.sClass)\n\t\t\t.append(insert)\n\t\t\t.appendTo(tr);\n\t}\n\n\t// Tidy the temporary table - remove name attributes so there aren't\n\t// duplicated in the dom (radio elements for example)\n\t$('[name]', tmpTable).removeAttr('name');\n\n\t// Table has been built, attach to the document so we can work with it.\n\t// A holding element is used, positioned at the top of the container\n\t// with minimal height, so it has no effect on if the container scrolls\n\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t// needed\n\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\theight: 1,\n\t\t\t\tright: 0,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} :\n\t\t\t{}\n\t\t)\n\t\t.append( tmpTable )\n\t\t.appendTo( tableContainer );\n\n\t// When scrolling (X or Y) we want to set the width of the table as \n\t// appropriate. However, when not scrolling leave the table width as it\n\t// is. This results in slightly different, but I think correct behaviour\n\tif ( scrollX && scrollXInner ) {\n\t\ttmpTable.width( scrollXInner );\n\t}\n\telse if ( scrollX ) {\n\t\ttmpTable.css( 'width', 'auto' );\n\t\ttmpTable.removeAttr('width');\n\n\t\t// If there is no width attribute or style, then allow the table to\n\t\t// collapse\n\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t}\n\t}\n\telse if ( scrollY ) {\n\t\ttmpTable.width( tableContainer.clientWidth );\n\t}\n\telse if ( tableWidthAttr ) {\n\t\ttmpTable.width( tableWidthAttr );\n\t}\n\n\t// Get the width of each column in the constructed table\n\tvar total = 0;\n\tvar bodyCells = tmpTable.find('tbody tr').eq(0).children();\n\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t// Use getBounding for sub-pixel accuracy, which we then want to round up!\n\t\tvar bounding = bodyCells[i].getBoundingClientRect().width;\n\n\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t// of the table might not equal the total given here\n\t\ttotal += bounding;\n\n\t\t// Width for each column to use\n\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding );\n\t}\n\n\ttable.style.width = _fnStringToCss( total );\n\n\t// Finished with the table - ditch it\n\tholder.remove();\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! settings._reszEvt ) {\n\t\tvar bindResize = function () {\n\t\t\t$(window).on('resize.DT-'+settings.sInstance, DataTable.util.throttle( function () {\n\t\t\t\tif (! settings.bDestroying) {\n\t\t\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\t\t}\n\t\t\t} ) );\n\t\t};\n\n\t\tbindResize();\n\n\t\tsettings._reszEvt = true;\n\t}\n}\n\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar column = settings.aoColumns[colIdx];\n\n\tif (! column.maxLenString) {\n\t\tvar s, max='', maxLen = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aiDisplayMaster.length ; i<ien ; i++ ) {\n\t\t\tvar rowIdx = settings.aiDisplayMaster[i];\n\t\t\tvar data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n\n\t\t\tvar cellString = data && typeof data === 'object' && data.nodeType\n\t\t\t\t? data.innerHTML\n\t\t\t\t: data+'';\n\n\t\t\t// Remove id / name attributes from elements so they\n\t\t\t// don't interfere with existing elements\n\t\t\tcellString = cellString\n\t\t\t\t.replace(/id=\".*?\"/g, '')\n\t\t\t\t.replace(/name=\".*?\"/g, '');\n\n\t\t\ts = _stripHtml(cellString)\n\t\t\t\t.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > maxLen ) {\n\t\t\t\t// We want the HTML in the string, but the length that\n\t\t\t\t// is important is the stripped string\n\t\t\t\tmax = cellString;\n\t\t\t\tmaxLen = s.length;\n\t\t\t}\n\t\t}\n\n\t\tcolumn.maxLenString = max;\n\t}\n\n\treturn column.maxLenString;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\nfunction _colGroup( settings ) {\n\tvar cols = settings.aoColumns;\n\n\tsettings.colgroup.empty();\n\n\tfor (i=0 ; i<cols.length ; i++) {\n\t\tif (cols[i].bVisible) {\n\t\t\tsettings.colgroup.append(cols[i].colEl);\n\t\t}\n\t}\n}\n\n\nfunction _fnSortInit( settings ) {\n\tvar target = settings.nTHead;\n\tvar headerRows = target.querySelectorAll('tr');\n\tvar legacyTop = settings.bSortCellsTop;\n\tvar notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\t\n\t// Legacy support for `orderCellsTop`\n\tif (legacyTop === true) {\n\t\ttarget = headerRows[0];\n\t}\n\telse if (legacyTop === false) {\n\t\ttarget = headerRows[ headerRows.length - 1 ];\n\t}\n\n\t_fnSortAttachListener(\n\t\tsettings,\n\t\ttarget,\n\t\ttarget === settings.nTHead\n\t\t\t? 'tr'+notSelector+' th'+notSelector+', tr'+notSelector+' td'+notSelector\n\t\t\t: 'th'+notSelector+', td'+notSelector\n\t);\n\n\t// Need to resolve the user input array into our internal structure\n\tvar order = [];\n\t_fnSortResolve( settings, order, settings.aaSorting );\n\n\tsettings.aaSorting = order;\n}\n\n\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n\t_fnBindAction( node, selector, function (e) {\n\t\tvar run = false;\n\t\tvar columns = column === undefined\n\t\t\t? _fnColumnsFromHeader( e.target )\n\t\t\t: [column];\n\n\t\tif ( columns.length ) {\n\t\t\tfor ( var i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\tvar ret = _fnSortAdd( settings, columns[i], i, e.shiftKey );\n\n\t\t\t\tif (ret !== false) {\n\t\t\t\t\trun = true;\n\t\t\t\t}\t\t\t\t\t\n\n\t\t\t\t// If the first entry is no sort, then subsequent\n\t\t\t\t// sort columns are ignored\n\t\t\t\tif (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (run) {\n\t\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\t\t// Allow the processing display to show\n\t\t\t\tsetTimeout( function () {\n\t\t\t\t\t_fnSort( settings );\n\t\t\t\t\t_fnSortDisplay( settings );\n\t\t\t\t\t_fnReDraw( settings, false, false );\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t}, 0);\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\nfunction _fnSortDisplay(settings) {\n\tvar display = settings.aiDisplay;\n\tvar master = settings.aiDisplayMaster;\n\tvar masterMap = {};\n\tvar map = {};\n\tvar i;\n\n\t// Rather than needing an `indexOf` on master array, we can create a map\n\tfor (i=0 ; i<master.length ; i++) {\n\t\tmasterMap[master[i]] = i;\n\t}\n\n\t// And then cache what would be the indexOf fom the display\n\tfor (i=0 ; i<display.length ; i++) {\n\t\tmap[display[i]] = masterMap[display[i]];\n\t}\n\n\tdisplay.sort(function(a, b){\n\t\t// Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n\t\treturn map[a] - map[b];\n\t});\n}\n\n\nfunction _fnSortResolve (settings, nestedSort, sort) {\n\tvar push = function ( a ) {\n\t\tif ($.isPlainObject(a)) {\n\t\t\tif (a.idx !== undefined) {\n\t\t\t\t// Index based ordering\n\t\t\t\tnestedSort.push([a.idx, a.dir]);\n\t\t\t}\n\t\t\telse if (a.name) {\n\t\t\t\t// Name based ordering\n\t\t\t\tvar cols = _pluck( settings.aoColumns, 'sName');\n\t\t\t\tvar idx = cols.indexOf(a.name);\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tnestedSort.push([idx, a.dir]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Plain column index and direction pair\n\t\t\tnestedSort.push(a);\n\t\t}\n\t};\n\n\tif ( $.isPlainObject(sort) ) {\n\t\t// Object\n\t\tpush(sort);\n\t}\n\telse if ( sort.length && typeof sort[0] === 'number' ) {\n\t\t// 1D array\n\t\tpush(sort);\n\t}\n\telse if ( sort.length ) {\n\t\t// 2D array\n\t\tfor (var z=0; z<sort.length; z++) {\n\t\t\tpush(sort[z]); // Object or array\n\t\t}\n\t}\n}\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, k, kLen,\n\t\taSort = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [];\n\t\n\tif ( ! settings.oFeatures.bSort ) {\n\t\treturn aSort;\n\t}\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.pre );\n\t}\n\n\t_fnSortResolve( settings, nestedSort, settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\n\t\tif ( aoColumns[ srcCol ] ) {\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n\t\t\t\t}\n\n\t\t\t\tif ( nestedSort[i][1] ) {\n\t\t\t\t\taSort.push( {\n\t\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\t\tcol:       iCol,\n\t\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\t\ttype:      sType,\n\t\t\t\t\t\tformatter: extSort[ sType+\"-pre\" ],\n\t\t\t\t\t\tsorter:    extSort[ sType+\"-\"+nestedSort[i][1] ]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSort ( oSettings, col, dir )\n{\n\tvar\n\t\ti, ien, iLen,\n\t\taiOrig = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t//   data is going to be used in the table?\n\t_fnColumnTypes( oSettings );\n\n\t// Allow a specific column to be sorted, which will _not_ alter the display\n\t// master\n\tif (col !== undefined) {\n\t\tvar srcCol = oSettings.aoColumns[col];\n\t\taSort = [{\n\t\t\tsrc:       col,\n\t\t\tcol:       col,\n\t\t\tdir:       dir,\n\t\t\tindex:     0,\n\t\t\ttype:      srcCol.sType,\n\t\t\tformatter: extSort[ srcCol.sType+\"-pre\" ],\n\t\t\tsorter:    extSort[ srcCol.sType+\"-\"+dir ]\n\t\t}];\n\t\tdisplayMaster = displayMaster.slice();\n\t}\n\telse {\n\t\taSort = _fnSortFlatten( oSettings );\n\t}\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Reset the initial positions on each pass so we get a stable sort\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ i ] = i;\n\t\t}\n\n\t\t// If the first sort is desc, then reverse the array to preserve original\n\t\t// order, just in reverse\n\t\tif (aSort.length && aSort[0].dir === 'desc') {\n\t\t\taiOrig.reverse();\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var test;\n\t\t *    test = oSort['string-asc']('data11', 'data12');\n\t\t *      if (test !== 0)\n\t\t *        return test;\n\t\t *    test = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (test !== 0)\n\t\t *      return test;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t */\n\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\tvar\n\t\t\t\tx, y, k, test, sort,\n\t\t\t\tlen=aSort.length,\n\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\tsort = aSort[k];\n\n\t\t\t\t// Data, which may have already been through a `-pre` function\n\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\tif (sort.sorter) {\n\t\t\t\t\t// If there is a custom sorter (`-asc` or `-desc`) for this\n\t\t\t\t\t// data type, use it\n\t\t\t\t\ttest = sort.sorter(x, y);\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Otherwise, use generic sorting\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = aiOrig[a];\n\t\t\ty = aiOrig[b];\n\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t} );\n\t}\n\telse if ( aSort.length === 0 ) {\n\t\t// Apply index order\n\t\tdisplayMaster.sort(function (x, y) {\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t});\n\t}\n\n\tif (col === undefined) {\n\t\t// Tell the draw function that we have sorted the data\n\t\toSettings.bSorted = true;\n\n\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort] );\n\t}\n\n\treturn displayMaster;\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {int} addIndex Counter\n *  @param {boolean} [shift=false] Shift click add\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAdd ( settings, colIdx, addIndex, shift )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = asSorting.indexOf(a[1]);\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\tif ( ! col.bSortable ) {\n\t\treturn false;\n\t}\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( (shift || addIndex) && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse if (shift) {\n\t\t\t// No sort on this column yet, being added by shift click\n\t\t\t// add it as itself\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet, being added from a colspan\n\t\t\t// so add with same direction as first column\n\t\t\tsorting.push( [ colIdx, sorting[0][1], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.order.position;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, colIdx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ colIdx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, colIdx,\n\t\t\t_fnColumnIndexToVisible( settings, colIdx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\tvar data = settings.aoData;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\t// Sparse array\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[colIdx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[rowIdx] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'sort' );\n\n\t\t\trow._aSortData[ colIdx ] = formatter ?\n\t\t\t\tformatter( cellData, settings ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t/* Store the interesting variables */\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\tsearch:  $.extend({}, settings.oPreviousSearch),\n\t\tcolumns: settings.aoColumns.map( function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: $.extend({}, settings.aoPreSearchCols[i])\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, init, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( abStateLoad.indexOf(false) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Number of columns have changed - all bets are off, no restore of settings\n\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// This is needed for ColReorder, which has to happen first to allow all\n\t// the stored indexes to be usable. It is not publicly documented.\n\t_fnCallbackFire( settings, null, 'stateLoadInit', [settings, s], true );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features - todo - for 1.11 this needs to be done by\n\t// subscribed events\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t[ 0, col[1] ] :\n\t\t\t\tcol\n\t\t\t);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, s.search );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = s.columns[i];\n\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\tif (api) {\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], col.search );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\tif (api) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n}\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'https://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'dt-error', [ settings, tn, msg ], true );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( Object.prototype.hasOwnProperty.call(extender, prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, selector, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', selector, function (e) {\n\t\t\tfn(e);\n\t\t} )\n\t\t.on( 'keypress.DT', selector, function (e){\n\t\t\tif ( e.which === 13 ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tfn(e);\n\t\t\t}\n\t\t} )\n\t\t.on( 'selectstart.DT', selector, function () {\n\t\t\t// Don't want a double click resulting in text selection\n\t\t\treturn false;\n\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( settings, store, fn )\n{\n\tif ( fn ) {\n\t\tsettings[store].push(fn);\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args, bubbles )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = settings[callbackArr].slice().reverse().map( function (val) {\n\t\t\treturn val.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\t\tvar table = $(settings.nTable);\n\t\t\n\t\t// Expose the DataTables API on the event object for easy access\n\t\te.dt = settings.api;\n\n\t\ttable[bubbles ?  'trigger' : 'triggerHandler']( e, args );\n\n\t\t// If not yet attached to the document, trigger the event\n\t\t// on the body directly to sort of simulate the bubble\n\t\tif (bubbles && table.parents('body').length === 0) {\n\t\t\t$('body').trigger( e, args );\n\t\t}\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\nfunction _fnMacros ( settings, str, entries )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is\n\t// used only internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tmax        = settings.fnRecordsTotal(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, max ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) ).\n\t\treplace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries) ).\n\t\treplace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max) ).\n\t\treplace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis) );\n}\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = _pluck(settings, 'nTable');\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oFeatures ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = tables.indexOf(mixed);\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed).get();\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed.get();\n\t}\n\n\tif ( jq ) {\n\t\treturn settings.filter(function (v, idx) {\n\t\t\treturn jq.includes(tables[idx]);\n\t\t});\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = settings.length > 1\n\t\t? _unique( settings )\n\t\t: settings;\n\n\t// Initial data\n\tif ( data ) {\n\t\tthis.push.apply(this, data);\n\t}\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\tcontext: [], // array of table settings objects\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = __arrayProto.filter.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\tget: function ( idx )\n\t{\n\t\treturn this[ idx ];\n\t},\n\n\tjoin:    __arrayProto.join,\n\n\tincludes: function ( find ) {\n\t\treturn this.indexOf( find ) === -1 ? false : true;\n\t},\n\n\tindexOf: __arrayProto.indexOf,\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\tlastIndexOf: __arrayProto.lastIndexOf,\n\n\tlength:  0,\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = __arrayProto.map.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tpluck: function ( prop )\n\t{\n\t\tvar fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\tpush:    __arrayProto.push,\n\n\treduce: __arrayProto.reduce,\n\n\treduceRight: __arrayProto.reduceRight,\n\n\treverse: __arrayProto.reverse,\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\tshift:   __arrayProto.shift,\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\tsort:    __arrayProto.sort,\n\n\tsplice:  __arrayProto.splice,\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this.toArray()) );\n\t},\n\n\tunshift: __arrayProto.unshift\n} );\n\n\nfunction _api_scope( scope, fn, struc ) {\n\treturn function () {\n\t\tvar ret = fn.apply( scope || this, arguments );\n\n\t\t// Method extension\n\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\treturn ret;\n\t};\n}\n\nfunction _api_find( src, name ) {\n\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\tif ( src[i].name === name ) {\n\t\t\treturn src[i];\n\t\t}\n\t}\n\treturn null;\n}\n\nwindow.__apiStruct = __apiStruct;\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct;\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t_api_scope( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = _api_find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\tvar result = [];\n\n\t\tselector.forEach(function (sel) {\n\t\t\tvar inner = __table_selector(sel, a);\n\n\t\t\tresult.push.apply(result, inner);\n\t\t});\n\n\t\treturn result.filter( function (item) {\n\t\t\treturn item;\n\t\t});\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = a.map( function (el) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function () {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = nodes.indexOf(this);\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n// Common methods, combined to reduce size\n[\n\t['nodes', 'node', 'nTable'],\n\t['body', 'body', 'nTBody'],\n\t['header', 'header', 'nTHead'],\n\t['footer', 'footer', 'nTFoot'],\n].forEach(function (item) {\n\t_api_registerPlural(\n\t\t'tables().' + item[0] + '()',\n\t\t'table().' + item[1] + '()' ,\n\t\tfunction () {\n\t\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t\treturn ctx[item[2]];\n\t\t\t}, 1 );\n\t\t}\n\t);\n});\n\n// Structure methods\n[\n\t['header', 'aoHeader'],\n\t['footer', 'aoFooter'],\n].forEach(function (item) {\n\t_api_register( 'table().' + item[0] + '.structure()' , function (selector) {\n\t\tvar indexes = this.columns(selector).indexes().flatten();\n\t\tvar ctx = this.context[0];\n\t\t\n\t\treturn _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n\t} );\n})\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n_api_register( 'tables().every()', function ( fn ) {\n\tvar that = this;\n\n\treturn this.iterator('table', function (s, i) {\n\t\tfn.call(that.table(i), i);\n\t});\n});\n\n_api_register( 'caption()', function ( value, side ) {\n\tvar context = this.context;\n\n\t// Getter - return existing node's content\n\tif ( value === undefined ) {\n\t\tvar caption = context[0].captionNode;\n\n\t\treturn caption && context.length ?\n\t\t\tcaption.innerHTML : \n\t\t\tnull;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tvar table = $(ctx.nTable);\n\t\tvar caption = $(ctx.captionNode);\n\t\tvar container = $(ctx.nTableWrapper);\n\n\t\t// Create the node if it doesn't exist yet\n\t\tif ( ! caption.length ) {\n\t\t\tcaption = $('<caption/>').html( value );\n\t\t\tctx.captionNode = caption[0];\n\n\t\t\t// If side isn't set, we need to insert into the document to let the\n\t\t\t// CSS decide so we can read it back, otherwise there is no way to\n\t\t\t// know if the CSS would put it top or bottom for scrolling\n\t\t\tif (! side) {\n\t\t\t\ttable.prepend(caption);\n\n\t\t\t\tside = caption.css('caption-side');\n\t\t\t}\n\t\t}\n\n\t\tcaption.html( value );\n\n\t\tif ( side ) {\n\t\t\tcaption.css( 'caption-side', side );\n\t\t\tcaption[0]._captionSide = side;\n\t\t}\n\n\t\tif (container.find('div.dataTables_scroll').length) {\n\t\t\tvar selector = (side === 'top' ? 'Head' : 'Foot');\n\n\t\t\tcontainer.find('div.dataTables_scroll'+ selector +' table').prepend(caption);\n\t\t}\n\t\telse {\n\t\t\ttable.prepend(caption);\n\t\t}\n\t}, 1 );\n} );\n\n_api_register( 'caption.node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length ? ctx[0].captionNode : null;\n} );\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function () {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, {}, function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnInitComplete( settings );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn $.isPlainObject( ctx.ajax ) ?\n\t\t\tctx.ajax.url :\n\t\t\tctx.ajax;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ta, i, ien, j, jen,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[[(:]/) ?\n\t\t\tselector[i].split(',') :\n\t\t\t[ selector[i] ];\n\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\n\t\t\t// Remove empty items\n\t\t\tres = res.filter( function (item) {\n\t\t\t\treturn item !== null && item !== undefined;\n\t\t\t});\n\n\t\t\tif ( res && res.length ) {\n\t\t\t\tout = out.concat( res );\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\n// Reduce the API instance to the first item found\nvar _selector_first = function ( old )\n{\n\tlet inst = new _Api(old.context[0]);\n\n\t// Use a push rather than passing to the constructor, since it will\n\t// merge arrays down automatically, which isn't what is wanted here\n\tif (old.length) {\n\t\tinst.push( old[0] );\n\t}\n\n\tinst.selector = old.selector;\n\n\t// Limit to a single row / column / cell\n\tif (inst.length && inst[0].length > 1) {\n\t\tinst[0].splice(1);\n\t}\n\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\telse if ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\tdisplayMaster.forEach(function (item) {\n\t\t\t\tif (! Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n\t\t\t\t\ta.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif (! settings.aoData[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = displayFiltered.indexOf(i);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if ( typeof order === 'number' ) {\n\t\t// Order the rows by the given column\n\t\tvar ordered = _fnSort(settings, order, 'asc');\n\n\t\tif (search === 'none') {\n\t\t\ta = ordered;\n\t\t}\n\t\telse { // applied | removed\n\t\t\tfor (i=0; i<ordered.length; i++) {\n\t\t\t\ttmp = displayFiltered.indexOf(ordered[i]);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( ordered[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && rows.indexOf(selInt) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn rows.map( function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\tvar matched = _selector_run( 'row', selector, run, settings, opts );\n\n\tif (opts.order === 'current' || opts.order === 'applied') {\n\t\tvar master = settings.aiDisplayMaster;\n\n\t\tmatched.sort(function(a, b) {  \n\t\t\treturn master.indexOf(a) - master.indexOf(b);\n\t\t});\n\t}\n\n\treturn matched;\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tthis.iterator( 'row', function ( settings, row ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\n\t\t// Delete from the display arrays\n\t\tvar idx = settings.aiDisplayMaster.indexOf(row);\n\t\tif (idx !== -1) {\n\t\t\tsettings.aiDisplayMaster.splice(idx, 1);\n\t\t}\n\n\t\tidx = settings.aiDisplay.indexOf(row);\n\t\tif (idx !== -1) {\n\t\t\tsettings.aiDisplay.splice(idx, 1);\n\t\t}\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\n\t\tdata[row] = null;\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\tmodRows.push.apply(modRows, newRows);\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length && this[0].length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length && this.length && this[0].length ?\n\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\tnull;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\n\tapi.on( 'stateSaveParams.DT', function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar rows = settings.aiDisplayMaster;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<rows.length ; i++) {\n\t\t\tvar rowIdx = rows[i];\n\t\t\tvar data = settings.aoData[rowIdx];\n\n\t\t\tif (data._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\t// For future state loads (e.g. with StateRestore)\n\tapi.on( 'stateLoaded.DT', function (e, settings, state) {\n\t\t__details_state_load( api, state );\n\t});\n\n\t// And the initial load state\n\t__details_state_load( api, api.state.loaded() );\n});\n\nvar __details_state_load = function (api, state)\n{\n\tif ( state && state.childRows ) {\n\t\tapi\n\t\t\t.rows( state.childRows.map(function (id){\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( api.settings()[0], null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n}\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\tr.setAttribute( 'data-dt-row', row.idx );\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>')\n\t\t\t\t.attr( 'data-dt-row', row.idx )\n\t\t\t\t.addClass( k );\n\t\t\t\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row && row._details ) {\n\t\t\t\t\trow._details.each(function () {\n\t\t\t\t\t\tvar el = $(this).children('td');\n\n\t\t\t\t\t\tif (el.length == 1) {\n\t\t\t\t\t\t\tel.attr('colspan', visible);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i] && data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length && ctx[0].aoData[ this[0] ]\n\t\t\t? ctx[0].aoData[ this[0] ]._details\n\t\t\t: undefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+):(name|title|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows, type ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column, type ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames = _pluck( columns, 'sName' ),\n\t\ttitles = _pluck( columns, 'sTitle' ),\n\t\tcells = DataTable.util.get('[].[].cell')(settings.aoHeader),\n\t\tnodes = _unique( _flatten([], cells) );\n\t\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn columns.map(function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows )\n\t\t\t\t\t) ? idx : null;\n\t\t\t});\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\tvar visColumns = columns.map( function (col,i) {\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t}\n\t\t\t\t\t// Counting from the left\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn names.map( function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tcase 'title':\n\t\t\t\t\t// match by column title\n\t\t\t\t\treturn titles.map( function (title, i) {\n\t\t\t\t\t\treturn title === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn _fnColumnsFromHeader( this ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'column', selector, run, settings, opts );\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\tcells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn false;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = _pluck(cols, 'bVisible').indexOf(true, column+1);\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tif (data[i]) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n\n\t_colGroup(settings);\n\t\n\treturn true;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( row ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar header = settings.aoHeader;\n\t\tvar target = row !== undefined\n\t\t\t? row\n\t\t\t: settings.bSortCellsTop // legacy support\n\t\t\t\t? 0\n\t\t\t\t: header.length - 1;\n\n\t\treturn header[target][column].cell;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( row ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar footer = settings.aoFooter;\n\n\t\tif (! footer.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn settings.aoFooter[row !== undefined ? row : 0][column].cell;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().render()', 'column().render()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn __columnData( settings, column, i, j, rows, type );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().init()', 'column().init()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column];\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().titles()', 'column().title()', function (title, row) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t// Argument shifting\n\t\tif (typeof title === 'number') {\n\t\t\trow = title;\n\t\t\ttitle = undefined;\n\t\t}\n\n\t\tvar span = $('span.dt-column-title', this.column(column).header(row));\n\n\t\tif (title !== undefined) {\n\t\t\tspan.html(title);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn span.html();\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().types()', 'column().type()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar type = settings.aoColumns[column].sType;\n\n\t\t// If the type was invalidated, then resolve it. This actually does\n\t\t// all columns at the moment. Would only happen once if getting all\n\t\t// column's data types.\n\t\tif (! type) {\n\t\t\t_fnColumnTypes(settings);\n\t\t}\n\n\t\treturn type;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar changed = [];\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t\n\t\tif (__setColumnVis( settings, column, vis )) {\n\t\t\tchanged.push(column);\n\t\t}\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\tif (changed.includes(column)) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( changed.length && (calc === undefined || calc) ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().widths()', 'column().width()', function () {\n\t// Injects a fake row into the table for just a moment so the widths can\n\t// be read, regardless of colspan in the header and rows being present in\n\t// the body\n\tvar columns = this.columns(':visible').count();\n\tvar row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n\n\t$(this.table().body()).append(row);\n\n\tvar widths = row.children().map(function () {\n\t\treturn $(this).outerWidth();\n\t});\n\n\trow.remove();\n\t\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar visIdx = _fnColumnIndexToVisible( settings, column );\n\n\t\treturn visIdx !== null ? widths[visIdx] : 0;\n\t}, 1);\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\tvar args = Array.prototype.slice.call( arguments );\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( args.length > 1 ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = args;\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSorting = Array.isArray(order) ? order.slice() : order;\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener(settings, node, {}, column, callback);\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\tif ( ! dir ) {\n\t\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\t\tvar sort = _fnSortFlatten( settings );\n\n\t\t\tfor ( var i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tif ( sort[i].col === idx ) {\n\t\t\t\t\treturn sort[i].dir;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}, 1 );\n\t}\n\telse {\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tsettings.aaSorting = that[i].map( function (col) {\n\t\t\t\treturn [ col, dir ];\n\t\t\t} );\n\t\t} );\n\t}\n} );\n\n_api_registerPlural('columns().orderable()', 'column().orderable()', function ( directions ) {\n\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\tvar col = settings.aoColumns[idx];\n\n\t\treturn directions ?\n\t\t\tcol.asSorting :\n\t\t\tcol.bSortable;\n\t}, 1 );\n} );\n\n\n_api_register( 'processing()', function ( show ) {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t_fnProcessingDisplay( ctx, show );\n\t} );\n} );\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.search :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof regex === 'object') {\n\t\t\t// New style options to pass to the search builder\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, regex, {\n\t\t\t\tsearch: input\n\t\t\t} ) );\n\t\t}\n\t\telse {\n\t\t\t// Compat for the old options\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, {\n\t\t\t\tsearch: input,\n\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t} ) );\n\t\t}\n\t} );\n} );\n\n_api_register( 'search.fixed()', function ( name, search ) {\n\tvar ret = this.iterator( true, 'table', function ( settings ) {\n\t\tvar fixed = settings.searchFixed;\n\n\t\tif (! name) {\n\t\t\treturn Object.keys(fixed)\n\t\t}\n\t\telse if (search === undefined) {\n\t\t\treturn fixed[name];\n\t\t}\n\t\telse if (search === null) {\n\t\t\tdelete fixed[name];\n\t\t}\n\t\telse {\n\t\t\tfixed[name] = search;\n\t\t}\n\n\t\treturn this;\n\t} );\n\n\treturn name !== undefined && search === undefined\n\t\t? ret[0]\n\t\t: ret;\n} );\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].search;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof regex === 'object') {\n\t\t\t\t// New style options to pass to the search builder\n\t\t\t\t$.extend( preSearch[ column ], regex, {\n\t\t\t\t\tsearch: input\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Old style (with not all options available)\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\tsearch: input,\n\t\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t} );\n\t}\n);\n\n_api_register([\n\t\t'columns().search.fixed()',\n\t\t'column().search.fixed()'\n\t],\n\tfunction ( name, search ) {\n\t\tvar ret = this.iterator( true, 'column', function ( settings, colIdx ) {\n\t\t\tvar fixed = settings.aoColumns[colIdx].searchFixed;\n\n\t\t\tif (! name) {\n\t\t\t\treturn Object.keys(fixed)\n\t\t\t}\n\t\t\telse if (search === undefined) {\n\t\t\t\treturn fixed[name];\n\t\t\t}\n\t\t\telse if (search === null) {\n\t\t\t\tdelete fixed[name];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfixed[name] = search;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} );\n\n\t\treturn name !== undefined && search === undefined\n\t\t\t? ret[0]\n\t\t\t: ret;\n\t}\n);\n/*\n * State API methods\n */\n\n_api_register( 'state()', function ( set, ignoreTime ) {\n\t// getter\n\tif ( ! set ) {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t}\n\n\tvar setMutate = $.extend( true, {}, set );\n\n\t// setter\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ignoreTime !== false ) {\n\t\t\tsetMutate.time = +new Date() + 100;\n\t\t}\n\n\t\t_fnImplementState( settings, setMutate, function(){} );\n\t} );\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n/**\n * Set the jQuery or window object to be used by DataTables\n *\n * @param {*} module Library / container object\n * @param {string} [type] Library or container type `lib`, `win` or `datetime`.\n *   If not provided, automatic detection is attempted.\n */\nDataTable.use = function (module, type) {\n\tif (type === 'lib' || module.fn) {\n\t\t$ = module;\n\t}\n\telse if (type == 'win' || module.document) {\n\t\twindow = module;\n\t\tdocument = module.document;\n\t}\n\telse if (type === 'datetime' || module.type === 'DateTime') {\n\t\tDataTable.DateTime = module;\n\t}\n}\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n\tvar is = false;\n\n\t// Test if the first parameter is a window object\n\tif (root && root.document) {\n\t\twindow = root;\n\t\tdocument = root.document;\n\t}\n\n\t// Test if the second parameter is a jQuery object\n\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t$ = jq;\n\t\tis = true;\n\t}\n\n\treturn is;\n}\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = function( version, version2 )\n{\n\tvar aThis = version2 ?\n\t\tversion2.split('.') :\n\t\tDataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = DataTable.settings\n\t\t.filter( function (o) {\n\t\t\treturn !visible || (visible && $(o.nTable).is(':visible')) \n\t\t\t\t? true\n\t\t\t\t: false;\n\t\t} )\n\t\t.map( function (o) {\n\t\t\treturn o.nTable;\n\t\t});\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = args[0].split( /\\s/ ).map( function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'error()', function (msg) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLog( settings, 0, msg );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'trigger()', function ( name, args, bubbles ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _fnCallbackFire( settings, null, name, args, bubbles );\n\t} ).flatten();\n} );\n\n\n_api_register( 'ready()', function ( fn ) {\n\tvar ctx = this.context;\n\n\t// Get status of first table\n\tif (! fn) {\n\t\treturn ctx.length\n\t\t\t? (ctx[0]._bInitComplete || false)\n\t\t\t: null;\n\t}\n\n\t// Function to run either once the table becomes ready or\n\t// immediately if it is already ready.\n\treturn this.tables().every(function () {\n\t\tif (this.context[0]._bInitComplete) {\n\t\t\tfn.call(this);\n\t\t}\n\t\telse {\n\t\t\tthis.on('init', function () {\n\t\t\t\tfn.call(this);\n\t\t\t});\n\t\t}\n\t} );\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = settings.aoData.map( function (r) { return r ? r.nTr : null; } );\n\t\tvar orderClasses = classes.order;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings], true );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\tsettings.colgroup.remove();\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$('th, td', thead)\n\t\t\t.removeClass(\n\t\t\t\torderClasses.canAsc + ' ' +\n\t\t\t\torderClasses.canDesc + ' ' +\n\t\t\t\torderClasses.isAsc + ' ' +\n\t\t\t\torderClasses.isDesc\n\t\t\t)\n\t\t\t.css('width', '');\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\tvar insertBefore = settings.nTableWrapper.nextSibling;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, insertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.table );\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = DataTable.settings.indexOf(settings);\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\t\tvar inst;\n\t\tvar counter = 0;\n\n\t\treturn this.iterator( 'every', function ( settings, selectedIdx, tableIdx ) {\n\t\t\tinst = api[ type ](selectedIdx, opts);\n\n\t\t\tif (type === 'cell') {\n\t\t\t\tfn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfn.call(inst, selectedIdx, tableIdx, counter);\n\t\t\t}\n\n\t\t\tcounter++;\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( $.isPlainObject( resolved ) ) {\n\t\tresolved = plural !== undefined && resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn typeof resolved === 'string'\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\n\t\t: resolved;\n} );\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"2.0.2\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t */\n\t\"caseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t */\n\t\"search\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t */\n\t\"regex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t */\n\t\"smart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t */\n\t\"idx\": -1,\n\n\t/**\n\t * Cached display value\n\t */\n\tdisplayData: null\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index.\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t */\n\t\"sWidthOrig\": null,\n\n\t/** Cached string which is the longest in the column */\n\tmaxLenString: null,\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t */\n\t\"bDeferRender\": true,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t */\n\t\"bFilter\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bInfo\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bLengthChange\": true,\n\n\t/**\n\t * Enable or disable pagination.\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t */\n\t\"bSortCellsTop\": null,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// noop\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be sorted\n\t\t\t */\n\t\t\t\"orderable\": \": Activate to sort\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being sorted\n\t\t\t */\n\t\t\t\"orderableReverse\": \": Activate to invert sorting\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being \n\t\t\t * sorted and next step is to remove sorting\n\t\t\t */\n\t\t\t\"orderableRemove\": \": Activate to remove sorting\",\n\n\t\t\tpaginate: {\n\t\t\t\tfirst: 'First',\n\t\t\t\tlast: 'Last',\n\t\t\t\tnext: 'Next',\n\t\t\t\tprevious: 'Previous'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Label and character for first page button\n\t\t\t */\n\t\t\t\"sFirst\": \"Â«\",\n\n\t\t\t/**\n\t\t\t * Last page button\n\t\t\t */\n\t\t\t\"sLast\": \"Â»\",\n\n\t\t\t/**\n\t\t\t * Next page button\n\t\t\t */\n\t\t\t\"sNext\": \"âº\",\n\n\t\t\t/**\n\t\t\t * Previous page button\n\t\t\t */\n\t\t\t\"sPrevious\": \"â¹\",\n\t\t},\n\n\t\t/**\n\t\t * Plural object for the data type the table is showing\n\t\t */\n\t\tentries: {\n\t\t\t_: \"entries\",\n\t\t\t1: \"entry\"\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t */\n\t\t\"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * Table and control layout. This replaces the legacy `dom` option.\n\t */\n\tlayout: {\n\t\ttopStart: 'pageLength',\n\t\ttopEnd: 'search',\n\t\tbottomStart: 'info',\n\t\tbottomEnd: 'paging'\n\t},\n\n\n\t/**\n\t * Legacy DOM layout option\n\t */\n\t\"sDom\": null,\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t */\n\t\"sPaginationType\": \"full_numbers\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t */\n\t\"rowId\": \"DT_RowId\",\n\n\n\t/**\n\t * Caption value\n\t */\n\t\"caption\": null\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\tariaTitle: '',\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t */\n\t\"asSorting\": [ 'asc', 'desc', '' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bInfo\": true,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bLengthChange\": true,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * Number of paging controls on the page. Only used for backwards compatibility\n\t */\n\tpagingControls: 0,\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Note if draw should be blocked while getting data\n\t */\n\t\"bAjaxDataGet\": true,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t */\n\t\"rowId\": null,\n\n\tcaption: '',\n\n\tcaptionNode: null,\n\n\tcolgroup: null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Legacy so v1 plug-ins don't throw js errors on load\n\t */\n\tfeature: [],\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an object of callbacks which provide the features for DataTables\n\t * to be initialised via the `layout` option.\n\t */\n\tfeatures: {},\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Automatic column class assignment\n\t\t */\n\t\tclassName: {},\n\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\t\t/**\n\t\t * Automatic renderer assignment\n\t\t */\n\t\trender: {},\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\tcontainer: 'dt-container',\n\tempty: {\n\t\trow: 'dt-empty'\n\t},\n\tinfo: {\n\t\tcontainer: 'dt-info'\n\t},\n\tlength: {\n\t\tcontainer: 'dt-length',\n\t\tselect: 'dt-input'\n\t},\n\torder: {\n\t\tcanAsc: 'dt-orderable-asc',\n\t\tcanDesc: 'dt-orderable-desc',\n\t\tisAsc: 'dt-ordering-asc',\n\t\tisDesc: 'dt-ordering-desc',\n\t\tnone: 'dt-orderable-none',\n\t\tposition: 'sorting_'\n\t},\n\tprocessing: {\n\t\tcontainer: 'dt-processing'\n\t},\n\tscrolling: {\n\t\tbody: 'dt-scroll-body',\n\t\tcontainer: 'dt-scroll',\n\t\tfooter: {\n\t\t\tself: 'dt-scroll-foot',\n\t\t\tinner: 'dt-scroll-footInner'\n\t\t},\n\t\theader: {\n\t\t\tself: 'dt-scroll-head',\n\t\t\tinner: 'dt-scroll-headInner'\n\t\t}\n\t},\n\tsearch: {\n\t\tcontainer: 'dt-search',\n\t\tinput: 'dt-input'\n\t},\n\ttable: 'dataTable',\t\n\ttbody: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tthead: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\ttfoot: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tpaging: {\n\t\tactive: 'current',\n\t\tbutton: 'dt-paging-button',\n\t\tcontainer: 'dt-paging',\n\t\tdisabled: 'disabled'\n\t}\n} );\n\n\nvar extPagination = DataTable.ext.pager;\n\n// Paging buttons configuration\n$.extend( extPagination, {\n\tsimple: function () {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function () {\n\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function () {\n\t\treturn [ 'numbers' ];\n\t},\n\n\tsimple_numbers: function () {\n\t\treturn [ 'previous', 'numbers', 'next' ];\n\t},\n\n\tfull_numbers: function () {\n\t\treturn [ 'first', 'previous', 'numbers', 'next', 'last' ];\n\t},\n\t\n\tfirst_last: function () {\n\t\treturn ['first', 'last'];\n\t},\n\t\n\tfirst_last_numbers: function () {\n\t\treturn ['first', 'numbers', 'last'];\n\t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _pagingNumbers,\n\n\t// Number of number buttons - legacy, use `numbers` option for paging feature\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpagingButton: {\n\t\t_: function (settings, buttonType, content, active, disabled) {\n\t\t\tvar classes = settings.oClasses.paging;\n\t\t\tvar btnClasses = [classes.button];\n\t\t\tvar btn;\n\n\t\t\tif (active) {\n\t\t\t\tbtnClasses.push(classes.active);\n\t\t\t}\n\n\t\t\tif (disabled) {\n\t\t\t\tbtnClasses.push(classes.disabled)\n\t\t\t}\n\n\t\t\tif (buttonType === 'ellipsis') {\n\t\t\t\tbtn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtn = $('<button>', {\n\t\t\t\t\tclass: btnClasses.join(' '),\n\t\t\t\t\trole: 'link',\n\t\t\t\t\ttype: 'button'\n\t\t\t\t}).html(content);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdisplay: btn,\n\t\t\t\tclicker: btn\n\t\t\t}\n\t\t}\n\t},\n\n\tpagingContainer: {\n\t\t_: function (settings, buttons) {\n\t\t\t// No wrapping element - just append directly to the host\n\t\t\treturn buttons;\n\t\t}\n\t}\n} );\n\n// Common function to remove new lines, strip HTML and diacritic control\nvar _filterString = function (stripHtml, normalize) {\n\treturn function (str) {\n\t\tif (_empty(str) || typeof str !== 'string') {\n\t\t\treturn str;\n\t\t}\n\n\t\tstr = str.replace( _re_new_lines, \" \" );\n\n\t\tif (stripHtml) {\n\t\t\tstr = _stripHtml(str);\n\t\t}\n\n\t\tif (normalize) {\n\t\t\tstr = _normalize(str, false);\n\t\t}\n\n\t\treturn str;\n\t};\n}\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\nfunction __mldFnName(name) {\n\treturn name.replace(/[\\W]/g, '_')\n}\n\n// Common logic for moment, luxon or a date action\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (window.moment) {\n\t\treturn dt[momentFn]( arg1 );\n\t}\n\telse if (window.luxon) {\n\t\treturn dt[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\n}\n\n\nvar __mlWarning = false;\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tif (window.moment) {\n\t\tdt = window.moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (window.luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\n\t\t\t: window.luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime' + (to ? '-' + __mldFnName(to) : '');\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\tDataTable.type(typeName, {\n\t\t\t\tdetect: function (d) {\n\t\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t},\n\t\t\t\torder: {\n\t\t\t\t\tpre: function (d) {\n\t\t\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\t\t\treturn d.valueOf();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclassName: 'dt-right'\n\t\t\t});\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t_escapeHtml( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (window.Intl !== undefined) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-detect-' + __mldFnName(format);\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.type(typeName, {\n\t\t\tdetect: function (d) {\n\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tpre: function (d) {\n\t\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\tclassName: 'dt-right'\n\t\t});\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\t\t\t\tvar abs = Math.abs(flo);\n\n\t\t\t\t// Scientific notation for large and small numbers\n\t\t\t\tif (abs >= 100000000000 || (abs < 0.0001 && abs !== 0) ) {\n\t\t\t\t\tvar exp = flo.toExponential(precision).split(/e\\+?/);\n\t\t\t\t\treturn exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n\t\t\t\t}\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn _escapeHtml( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: _escapeHtml,\n\t\t\tfilter: _escapeHtml\n\t\t};\n\t}\n};\n\n\nvar _extTypes = DataTable.ext.type;\n\n// Get / set type\nDataTable.type = function (name, prop, val) {\n\tif (! prop) {\n\t\treturn {\n\t\t\tclassName: _extTypes.className[name],\n\t\t\tdetect: _extTypes.detect.find(function (fn) {\n\t\t\t\treturn fn.name === name;\n\t\t\t}),\n\t\t\torder: {\n\t\t\t\tpre: _extTypes.order[name + '-pre'],\n\t\t\t\tasc: _extTypes.order[name + '-asc'],\n\t\t\t\tdesc: _extTypes.order[name + '-desc']\n\t\t\t},\n\t\t\trender: _extTypes.render[name],\n\t\t\tsearch: _extTypes.search[name]\n\t\t};\n\t}\n\n\tvar setProp = function(prop, propVal) {\n\t\t_extTypes[prop][name] = propVal;\n\t};\n\tvar setDetect = function (fn) {\n\t\t// Wrap to allow the function to return `true` rather than\n\t\t// specifying the type name.\n\t\tvar cb = function (d, s) {\n\t\t\tvar ret = fn(d, s);\n\n\t\t\treturn ret === true\n\t\t\t\t? name\n\t\t\t\t: ret;\n\t\t};\n\t\tObject.defineProperty(cb, \"name\", {value: name});\n\n\t\tvar idx = _extTypes.detect.findIndex(function (fn) {\n\t\t\treturn fn.name === name;\n\t\t});\n\n\t\tif (idx === -1) {\n\t\t\t_extTypes.detect.unshift(cb);\n\t\t}\n\t\telse {\n\t\t\t_extTypes.detect.splice(idx, 1, cb);\n\t\t}\n\t};\n\tvar setOrder = function (obj) {\n\t\t_extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n\t\t_extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n\t\t_extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n\t};\n\n\t// prop is optional\n\tif (val === undefined) {\n\t\tval = prop;\n\t\tprop = null;\n\t}\n\n\tif (prop === 'className') {\n\t\tsetProp('className', val);\n\t}\n\telse if (prop === 'detect') {\n\t\tsetDetect(val);\n\t}\n\telse if (prop === 'order') {\n\t\tsetOrder(val);\n\t}\n\telse if (prop === 'render') {\n\t\tsetProp('render', val);\n\t}\n\telse if (prop === 'search') {\n\t\tsetProp('search', val);\n\t}\n\telse if (! prop) {\n\t\tif (val.className) {\n\t\t\tsetProp('className', val.className);\n\t\t}\n\n\t\tif (val.detect !== undefined) {\n\t\t\tsetDetect(val.detect);\n\t\t}\n\n\t\tif (val.order) {\n\t\t\tsetOrder(val.order);\n\t\t}\n\n\t\tif (val.render !== undefined) {\n\t\t\tsetProp('render', val.render);\n\t\t}\n\n\t\tif (val.search !== undefined) {\n\t\t\tsetProp('search', val.search);\n\t\t}\n\t}\n}\n\n// Get a list of types\nDataTable.types = function () {\n\treturn _extTypes.detect.map(function (fn) {\n\t\treturn fn.name;\n\t});\n};\n\n//\n// Built in data types\n//\n\nDataTable.type('string', {\n\tdetect: function () {\n\t\treturn 'string';\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t}\n\t},\n\tsearch: _filterString(false, true)\n});\n\n\nDataTable.type('html', {\n\tdetect: function ( d ) {\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t'html' : null;\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\t_stripHtml(a).trim().toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('date', {\n\tclassName: 'dt-type-date',\n\tdetect: function ( d )\n\t{\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t// plug-in for anything other than ISO8601 style strings\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\treturn null;\n\t\t}\n\t\tvar parsed = Date.parse(d);\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t},\n\torder: {\n\t\tpre: function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t}\n\t}\n});\n\n\nDataTable.type('html-num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: function ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt' : null;\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html, _re_formatted_numeric );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('html-num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: function ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num' : null;\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: function ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt' : null;\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_formatted_numeric );\n\t\t}\n\t}\n});\n\n\nDataTable.type('num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: function ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal ) ? 'num' : null;\n\t},\n\torder: {\n\t\tpre: function (d, s) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp );\n\t\t}\n\t}\n});\n\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\t\n\tvar type = typeof d;\n\n\tif (type === 'number' || type === 'bigint') {\n\t\treturn d;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tfooter: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.tfoot.cell);\n\t\t}\n\t},\n\n\theader: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.thead.cell);\n\n\t\t\tif (! settings.oFeatures.bSort) {\n\t\t\t\tcell.addClass(classes.order.none);\n\t\t\t}\n\n\t\t\tvar legacyTop = settings.bSortCellsTop;\n\t\t\tvar headerRows = cell.closest('thead').find('tr');\n\t\t\tvar rowIdx = cell.parent().index();\n\n\t\t\t// Conditions to not apply the ordering icons\n\t\t\tif (\n\t\t\t\t// Cells and rows which have the attribute to disable the icons\n\t\t\t\tcell.attr('data-dt-order') === 'disable' ||\n\t\t\t\tcell.parent().attr('data-dt-order') === 'disable' ||\n\n\t\t\t\t// Legacy support for `orderCellsTop`. If it is set, then cells\n\t\t\t\t// which are not in the top or bottom row of the header (depending\n\t\t\t\t// on the value) do not get the sorting classes applied to them\n\t\t\t\t(legacyTop === true && rowIdx !== 0) ||\n\t\t\t\t(legacyTop === false && rowIdx !== headerRows.length - 1)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar orderClasses = classes.order;\n\t\t\t\tvar columns = ctx.api.columns( cell );\n\t\t\t\tvar col = settings.aoColumns[columns.flatten()[0]];\n\t\t\t\tvar orderable = columns.orderable().includes(true);\n\t\t\t\tvar ariaType = '';\n\t\t\t\tvar indexes = columns.indexes();\n\t\t\t\tvar sortDirs = columns.orderable(true).flatten();\n\t\t\t\tvar orderedColumns = sorting.map( function (val) {\n\t\t\t\t\treturn val.col;\n\t\t\t\t} ).join(',');\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\torderClasses.isAsc +' '+\n\t\t\t\t\t\torderClasses.isDesc\n\t\t\t\t\t)\n\t\t\t\t\t.toggleClass( orderClasses.none, ! orderable )\n\t\t\t\t\t.toggleClass( orderClasses.canAsc, orderable && sortDirs.includes('asc') )\n\t\t\t\t\t.toggleClass( orderClasses.canDesc, orderable && sortDirs.includes('desc') );\n\t\t\t\t\n\t\t\t\tvar sortIdx = orderedColumns.indexOf( indexes.toArray().join(',') );\n\n\t\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t\t// Get the ordering direction for the columns under this cell\n\t\t\t\t\t// Note that it is possible for a cell to be asc and desc sorting\n\t\t\t\t\t// (column spanning cells)\n\t\t\t\t\tvar orderDirs = columns.order();\n\n\t\t\t\t\tcell.addClass(\n\t\t\t\t\t\torderDirs.includes('asc') ? orderClasses.isAsc : '' +\n\t\t\t\t\t\torderDirs.includes('desc') ? orderClasses.isDesc : ''\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// The ARIA spec says that only one column should be marked with aria-sort\n\t\t\t\tif ( sortIdx === 0 && orderedColumns.length === indexes.count() ) {\n\t\t\t\t\tvar firstSort = sorting[0];\n\t\t\t\t\tvar sortOrder = col.asSorting;\n\n\t\t\t\t\tcell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\n\t\t\t\t\t// Determine if the next click will remove sorting or change the sort\n\t\t\t\t\tariaType = ! sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcell.removeAttr('aria-sort');\n\t\t\t\t}\n\n\t\t\t\tcell.attr('aria-label', orderable\n\t\t\t\t\t? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType)\n\t\t\t\t\t: col.ariaTitle\n\t\t\t\t);\n\n\t\t\t\tif (orderable) {\n\t\t\t\t\tcell.find('.dt-column-title').attr('role', 'button');\n\t\t\t\t\tcell.attr('tabindex', 0)\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t},\n\n\tlayout: {\n\t\t_: function ( settings, container, items ) {\n\t\t\tvar row = $('<div/>')\n\t\t\t\t.addClass('dt-layout-row')\n\t\t\t\t.appendTo( container );\n\n\t\t\t$.each( items, function (key, val) {\n\t\t\t\tvar klass = ! val.table ?\n\t\t\t\t\t'dt-'+key+' ' :\n\t\t\t\t\t'';\n\n\t\t\t\tif (val.table) {\n\t\t\t\t\trow.addClass('dt-layout-table');\n\t\t\t\t}\n\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.attr({\n\t\t\t\t\t\tid: val.id || null,\n\t\t\t\t\t\t\"class\": 'dt-layout-cell '+klass+(val.className || '')\n\t\t\t\t\t})\n\t\t\t\t\t.append( val.contents )\n\t\t\t\t\t.appendTo( row );\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n\nDataTable.feature = {};\n\n// Third parameter is internal only!\nDataTable.feature.register = function ( name, cb, legacy ) {\n\tDataTable.ext.features[ name ] = cb;\n\n\tif (legacy) {\n\t\t_ext.feature.push({\n\t\t\tcFeature: legacy,\n\t\t\tfnInit: cb\n\t\t});\n\t}\n};\n\nDataTable.feature.register( 'info', function ( settings, opts ) {\n\t// For compatibility with the legacy `info` top level option\n\tif (! settings.oFeatures.bInfo) {\n\t\treturn null;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\ttid = settings.sTableId,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.info.container,\n\t\t} );\n\n\topts = $.extend({\n\t\tcallback: lang.fnInfoCallback,\n\t\tempty: lang.sInfoEmpty,\n\t\tpostfix: lang.sInfoPostFix,\n\t\tsearch: lang.sInfoFiltered,\n\t\ttext: lang.sInfo,\n\t}, opts);\n\n\n\t// Update display on each draw\n\tsettings.aoDrawCallback.push(function (s) {\n\t\t_fnUpdateInfo(s, opts, n);\n\t});\n\n\t// For the first info display in the table, we add a callback and aria information.\n\tif (! $('#' + tid+'_info', settings.nWrapper).length) {\n\t\tn.attr({\n\t\t\t'aria-live': 'polite',\n\t\t\tid: tid+'_info',\n\t\t\trole: 'status'\n\t\t});\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t}\n\n\treturn n;\n}, 'i' );\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings, opts, node )\n{\n\tvar\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total\n\t\t\t? opts.text\n\t\t\t: opts.empty;\n\n\tif ( total !== max ) {\n\t\t// Record set after filtering\n\t\tout += ' ' + opts.search;\n\t}\n\n\t// Convert the macros\n\tout += opts.postfix;\n\tout = _fnMacros( settings, out );\n\n\tif ( opts.callback ) {\n\t\tout = opts.callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\tnode.html( out );\n\n\t_fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\n\nvar __searchCounter = 0;\n\n// opts\n// - text\n// - placeholder\nDataTable.feature.register( 'search', function ( settings, opts ) {\n\t// Don't show the input if filtering isn't available on the table\n\tif (! settings.oFeatures.bFilter) {\n\t\treturn null;\n\t}\n\n\tvar classes = settings.oClasses.search;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar input = '<input type=\"search\" class=\"'+classes.input+'\"/>';\n\n\topts = $.extend({\n\t\tplaceholder: language.sSearchPlaceholder,\n\t\ttext: language.sSearch\n\t}, opts);\n\n\t// The _INPUT_ is optional - is appended if not present\n\tif (opts.text.indexOf('_INPUT_') === -1) {\n\t\topts.text += '_INPUT_';\n\t}\n\n\topts.text = _fnMacros(settings, opts.text);\n\n\t// We can put the <input> outside of the label if it is at the start or end\n\t// which helps improve accessability (not all screen readers like implicit\n\t// for elements).\n\tvar end = opts.text.match(/_INPUT_$/);\n\tvar start = opts.text.match(/^_INPUT_/);\n\tvar removed = opts.text.replace(/_INPUT_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_INPUT_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_INPUT_';\n\t}\n\n\tvar filter = $('<div>')\n\t\t.addClass(classes.container)\n\t\t.append(str.replace(/_INPUT_/, input));\n\n\t// add for and id to label and input\n\tfilter.find('label').attr('for', 'dt-search-' + __searchCounter);\n\tfilter.find('input').attr('id', 'dt-search-' + __searchCounter);\n\t__searchCounter++;\n\n\tvar searchFn = function(event) {\n\t\tvar val = this.value;\n\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.search ) {\n\t\t\tpreviousSearch.search = val;\n\n\t\t\t_fnFilterComplete( settings, previousSearch );\n\n\t\t\t// Need to redraw, without resorting\n\t\t\tsettings._iDisplayStart = 0;\n\t\t\t_fnDraw( settings );\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.search )\n\t\t.attr( 'placeholder', opts.placeholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\tDataTable.util.debounce( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup.DT', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s && jqFilter[0] !== document.activeElement ) {\n\t\t\tjqFilter.val( typeof previousSearch.search !== 'function'\n\t\t\t\t? previousSearch.search\n\t\t\t\t: ''\n\t\t\t);\n\t\t}\n\t} );\n\n\treturn filter;\n}, 'f' );\n\n// opts\n// - type - button configuration\n// - numbers - number of buttons to show - must be odd\nDataTable.feature.register( 'paging', function ( settings, opts ) {\n\t// Don't show the paging input if the table doesn't have paging enabled\n\tif (! settings.oFeatures.bPaginate) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tnumbers: DataTable.ext.pager.numbers_length,\n\t\ttype: settings.sPaginationType\n\t}, opts)\n\n\tvar host = $('<div/>').addClass( settings.oClasses.paging.container + ' paging_' + opts.type );\n\tvar draw = function () {\n\t\t_pagingDraw(settings, host, opts);\n\t};\n\n\tsettings.aoDrawCallback.push(draw);\n\n\t// Responsive redraw of paging control\n\t$(settings.nTable).on('column-sizing.dt.DT', draw);\n\n\treturn host;\n}, 'p' );\n\nfunction _pagingDraw(settings, host, opts) {\n\tif (! settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tplugin = DataTable.ext.pager[ opts.type ],\n\t\taria = settings.oLanguage.oAria.paginate || {},\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings._iDisplayLength,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1,\n\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\tbuttons = plugin()\n\t\t\t.map(function (val) {\n\t\t\t\treturn val === 'numbers'\n\t\t\t\t\t? _pagingNumbers(page, pages, opts.numbers)\n\t\t\t\t\t: val;\n\t\t\t})\n\t\t\t.flat();\n\n\tvar buttonEls = [];\n\n\tfor (var i=0 ; i<buttons.length ; i++) {\n\t\tvar button = buttons[i];\n\n\t\tvar btnInfo = _pagingButtonInfo(settings, button, page, pages);\n\t\tvar btn = _fnRenderer( settings, 'pagingButton' )(\n\t\t\tsettings,\n\t\t\tbutton,\n\t\t\tbtnInfo.display,\n\t\t\tbtnInfo.active,\n\t\t\tbtnInfo.disabled\n\t\t);\n\n\t\t// Common attributes\n\t\t$(btn.clicker).attr({\n\t\t\t'aria-controls': settings.sTableId,\n\t\t\t'aria-disabled': btnInfo.disabled ? 'true' : null,\n\t\t\t'aria-current': btnInfo.active ? 'page' : null,\n\t\t\t'aria-label': aria[ button ],\n\t\t\t'data-dt-idx': button,\n\t\t\t'tabIndex': btnInfo.disabled ? -1 : settings.iTabIndex,\n\t\t});\n\n\t\tif (typeof button !== 'number') {\n\t\t\t$(btn.clicker).addClass(button);\n\t\t}\n\n\t\t_fnBindAction(\n\t\t\tbtn.clicker, {action: button}, function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t}\n\t\t);\n\n\t\tbuttonEls.push(btn.display);\n\t}\n\n\tvar wrapped = _fnRenderer(settings, 'pagingContainer')(\n\t\tsettings, buttonEls\n\t);\n\n\tvar activeEl = host.find(document.activeElement).data('dt-idx');\n\n\thost.empty().append(wrapped);\n\n\tif ( activeEl !== undefined ) {\n\t\thost.find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t}\n\n\t// Responsive - check if the buttons are over two lines based on the\n\t// height of the buttons and the container.\n\tif (\n\t\tbuttonEls.length && // any buttons\n\t\topts.numbers > 1 && // prevent infinite\n\t\t$(host).height() >= ($(buttonEls[0]).outerHeight() * 2) - 10\n\t) {\n\t\t_pagingDraw(settings, host, $.extend({}, opts, { numbers: opts.numbers - 2 }));\n\t}\n}\n\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\nfunction _pagingButtonInfo(settings, button, page, pages) {\n\tvar lang = settings.oLanguage.oPaginate;\n\tvar o = {\n\t\tdisplay: '',\n\t\tactive: false,\n\t\tdisabled: false\n\t};\n\n\tswitch ( button ) {\n\t\tcase 'ellipsis':\n\t\t\to.display = '&#x2026;';\n\t\t\to.disabled = true;\n\t\t\tbreak;\n\n\t\tcase 'first':\n\t\t\to.display = lang.sFirst;\n\n\t\t\tif (page === 0) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'previous':\n\t\t\to.display = lang.sPrevious;\n\n\t\t\tif ( page === 0 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'next':\n\t\t\to.display = lang.sNext;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'last':\n\t\t\to.display = lang.sLast;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif ( typeof button === 'number' ) {\n\t\t\t\to.display = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\n\t\t\t\tif (page === button) {\n\t\t\t\t\to.active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn o;\n}\n\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @returns Buttons to show\n */\nfunction _pagingNumbers ( page, pages, buttons ) {\n\tvar\n\t\tnumbers = [],\n\t\thalf = Math.floor(buttons / 2);\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range(0, pages);\n\t}\n\telse if (buttons === 1) {\n\t\t// Single button - current page only\n\t\tnumbers = [page];\n\t}\n\telse if (buttons === 3) {\n\t\t// Special logic for just three buttons\n\t\tif (page <= 1) {\n\t\t\tnumbers = [0, 1, 'ellipsis'];\n\t\t}\n\t\telse if (page >= pages - 2) {\n\t\t\tnumbers = _range(pages-2, pages);\n\t\t\tnumbers.unshift('ellipsis');\n\t\t}\n\t\telse {\n\t\t\tnumbers = ['ellipsis', page, 'ellipsis'];\n\t\t}\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range(0, buttons-2);\n\t\tnumbers.push('ellipsis', pages-1);\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range(pages-(buttons-2), pages);\n\t\tnumbers.unshift(0, 'ellipsis');\n\t}\n\telse {\n\t\tnumbers = _range(page-half+2, page+half-1);\n\t\tnumbers.push('ellipsis', pages-1);\n\t\tnumbers.unshift(0, 'ellipsis');\n\t}\n\n\treturn numbers;\n}\n\nvar __lengthCounter = 0;\n\n// opts\n// - menu\n// - text\nDataTable.feature.register( 'pageLength', function ( settings, opts ) {\n\tvar features = settings.oFeatures;\n\n\t// For compatibility with the legacy `pageLength` top level option\n\tif (! features.bPaginate || ! features.bLengthChange) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tmenu: settings.aLengthMenu,\n\t\ttext: settings.oLanguage.sLengthMenu\n\t}, opts);\n\n\tvar\n\t\tclasses  = settings.oClasses.length,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = opts.menu,\n\t\tlengths  = [],\n\t\tlanguage = [],\n\t\ti;\n\n\t// Options can be given in a number of ways\n\tif (Array.isArray( menu[0] )) {\n\t\t// Old 1.x style - 2D array\n\t\tlengths = menu[0];\n\t\tlanguage = menu[1];\n\t}\n\telse {\n\t\tfor ( i=0 ; i<menu.length ; i++ ) {\n\t\t\t// An object with different label and value\n\t\t\tif ($.isPlainObject(menu[i])) {\n\t\t\t\tlengths.push(menu[i].value);\n\t\t\t\tlanguage.push(menu[i].label);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Or just a number to display and use\n\t\t\t\tlengths.push(menu[i]);\n\t\t\t\tlanguage.push(menu[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// We can put the <select> outside of the label if it is at the start or\n\t// end which helps improve accessability (not all screen readers like\n\t// implicit for elements).\n\tvar end = opts.text.match(/_MENU_$/);\n\tvar start = opts.text.match(/^_MENU_/);\n\tvar removed = opts.text.replace(/_MENU_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_MENU_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_MENU_';\n\t}\n\n\t// Wrapper element - use a span as a holder for where the select will go\n\tvar div = $('<div/>')\n\t\t.addClass( classes.container )\n\t\t.append(\n\t\t\tstr.replace( '_MENU_', '<span></span>' )\n\t\t);\n\n\t// Save text node content for macro updating\n\tvar textNodes = [];\n\tdiv.find('label')[0].childNodes.forEach(function (el) {\n\t\tif (el.nodeType === Node.TEXT_NODE) {\n\t\t\ttextNodes.push({\n\t\t\t\tel: el,\n\t\t\t\ttext: el.textContent\n\t\t\t});\n\t\t}\n\t})\n\n\t// Update the label text in case it has an entries value\n\tvar updateEntries = function (len) {\n\t\ttextNodes.forEach(function (node) {\n\t\t\tnode.el.textContent = _fnMacros(settings, node.text, len);\n\t\t});\n\t}\n\n\t// Next, the select itself, along with the options\n\tvar select = $('<select/>', {\n\t\t'name':          tableId+'_length',\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.select\n\t} );\n\n\tfor ( i=0 ; i<lengths.length ; i++ ) {\n\t\tselect[0][ i ] = new Option(\n\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i],\n\t\t\tlengths[i]\n\t\t);\n\t}\n\n\t// add for and id to label and input\n\tdiv.find('label').attr('for', 'dt-length-' + __lengthCounter);\n\tselect.attr('id', 'dt-length-' + __lengthCounter);\n\t__lengthCounter++;\n\n\t// Swap in the select list\n\tdiv.find('span').replaceWith(select);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function() {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\n\t\t\t// Resolve plurals in the text for the new length\n\t\t\tupdateEntries(len);\n\t\t}\n\t} );\n\n\tupdateEntries(settings._iDisplayLength);\n\n\treturn div;\n}, 'l' );\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nexport default DataTable;\n"]},"metadata":{},"sourceType":"module"}